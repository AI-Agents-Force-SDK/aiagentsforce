{"ChatPromptTemplate": {"\ud83e\udd9c\ufe0f\ud83c\udfd3 aiagentsforceapi": "https://https://docs.aiagentsforce.com//aiagentsforceapi/", "Conceptual guide": "https://https://docs.aiagentsforce.com//concepts/", "# Example": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_rerank_docs_chain/", "# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/llm_router_chain/", "Load docs": "https://https://docs.aiagentsforce.com//versions/migrating_chains/conversation_retrieval_chain/", "# Basic example (short documents)": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_reduce_chain/", "How to add a semantic layer over graph database": "https://https://docs.aiagentsforce.com//how_to/graph_semantic/", "How to handle long text when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_long_text/", "How to add values to a chain's state": "https://https://docs.aiagentsforce.com//how_to/assign/", "How to do per-user retrieval": "https://https://docs.aiagentsforce.com//how_to/qa_per_user/", "How to track token usage in ChatModels": "https://https://docs.aiagentsforce.com//how_to/chat_token_usage_tracking/", "How to create a custom LLM class": "https://https://docs.aiagentsforce.com//how_to/custom_llm/", "How to inspect runnables": "https://https://docs.aiagentsforce.com//how_to/inspect/", "How to handle cases where no queries are generated": "https://https://docs.aiagentsforce.com//how_to/query_no_queries/", "How to use few shot examples in chat models": "https://https://docs.aiagentsforce.com//how_to/few_shot_examples_chat/", "How to summarize text through iterative refinement": "https://https://docs.aiagentsforce.com//how_to/summarize_refine/", "How to do tool/function calling": "https://https://docs.aiagentsforce.com//how_to/function_calling/", "How to create tools": "https://https://docs.aiagentsforce.com//how_to/custom_tools/", "How to use prompting alone (no tool calling) to do extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_parse/", "How to deal with large databases when doing SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_large_db/", "How to use reference examples when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_examples/", "How to handle multiple queries when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_queries/", "How to add fallbacks to a runnable": "https://https://docs.aiagentsforce.com//how_to/fallbacks/", "How to propagate callbacks  constructor": "https://https://docs.aiagentsforce.com//how_to/callbacks_constructor/", "How to map values to a graph database": "https://https://docs.aiagentsforce.com//how_to/graph_mapping/", "How to save and load AI Agents Force objects": "https://https://docs.aiagentsforce.com//how_to/serialization/", "How to do question answering over CSVs": "https://https://docs.aiagentsforce.com//how_to/sql_csv/", "How to stream results from your RAG application": "https://https://docs.aiagentsforce.com//how_to/qa_streaming/", "How to get your RAG application to return sources": "https://https://docs.aiagentsforce.com//how_to/qa_sources/", "How to summarize text through parallelization": "https://https://docs.aiagentsforce.com//how_to/summarize_map_reduce/", "How to attach callbacks to a runnable": "https://https://docs.aiagentsforce.com//how_to/callbacks_attach/", "How to handle tool errors": "https://https://docs.aiagentsforce.com//how_to/tools_error/", "How to add tools to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_tools/", "How to add default invocation args to a Runnable": "https://https://docs.aiagentsforce.com//how_to/binding/", "How to convert Runnables as Tools": "https://https://docs.aiagentsforce.com//how_to/convert_runnable_to_tool/", "How to stream events from a tool": "https://https://docs.aiagentsforce.com//how_to/tool_stream_events/", "How to create a dynamic (self-constructing) chain": "https://https://docs.aiagentsforce.com//how_to/dynamic_chain/", "How to create custom callback handlers": "https://https://docs.aiagentsforce.com//how_to/custom_callbacks/", "How to stream runnables": "https://https://docs.aiagentsforce.com//how_to/streaming/", "How to invoke runnables in parallel": "https://https://docs.aiagentsforce.com//how_to/parallel/", "How to pass through arguments from one step to the next": "https://https://docs.aiagentsforce.com//how_to/passthrough/", "How to retrieve using multiple vectors per document": "https://https://docs.aiagentsforce.com//how_to/multi_vector/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "How to add message history": "https://https://docs.aiagentsforce.com//how_to/message_history/", "How to add retrieval to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_retrieval/", "How to handle multiple retrievers when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_retrievers/", "How to get a RAG application to add citations": "https://https://docs.aiagentsforce.com//how_to/qa_citations/", "How to run custom functions": "https://https://docs.aiagentsforce.com//how_to/functions/", "How to add memory to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_memory/", "How deal with high cardinality categoricals when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_high_cardinality/", "How to return structured data from a model": "https://https://docs.aiagentsforce.com//how_to/structured_output/", "How to add ad-hoc tool calling capability to LLMs and Chat Models": "https://https://docs.aiagentsforce.com//how_to/tools_prompting/", "AI Agents Force Expression Language Cheatsheet": "https://https://docs.aiagentsforce.com//how_to/lcel_cheatsheet/", "How to debug your LLM apps": "https://https://docs.aiagentsforce.com//how_to/debugging/", "How to chain runnables": "https://https://docs.aiagentsforce.com//how_to/sequence/", "Hybrid Search": "https://https://docs.aiagentsforce.com//how_to/hybrid/", "How to migrate from legacy AI Agents Force agents to LangGraph": "https://https://docs.aiagentsforce.com//how_to/migrate_agent/", "How to do query validation as part of SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_query_checking/", "How to summarize text in a single LLM call": "https://https://docs.aiagentsforce.com//how_to/summarize_stuff/", "How to use multimodal prompts": "https://https://docs.aiagentsforce.com//how_to/multimodal_prompts/", "How to use few-shot prompting with tool calling": "https://https://docs.aiagentsforce.com//how_to/tools_few_shot/", "How to pass callbacks in at runtime": "https://https://docs.aiagentsforce.com//how_to/callbacks_runtime/", "How to add examples to the prompt for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_few_shot/", "Facebook Messenger": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/facebook/", "LangSmith LLM Runs": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/langsmith_llm_runs/", "iMessage": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/imessage/", "NVIDIA NIMs ": "https://https://docs.aiagentsforce.com//integrations/text_embedding/nvidia_ai_endpoints/", "AzureAISearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/azure_ai_search/", "You.com": "https://https://docs.aiagentsforce.com//integrations/retrievers/you-retriever/", "Fleet AI Context": "https://https://docs.aiagentsforce.com//integrations/retrievers/fleet_context/", "AskNews": "https://https://docs.aiagentsforce.com//integrations/retrievers/asknews/", "WikipediaRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/wikipedia/", "TavilySearchAPIRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/tavily/", "Activeloop Deep Memory": "https://https://docs.aiagentsforce.com//integrations/retrievers/activeloop/", "RAGatouille": "https://https://docs.aiagentsforce.com//integrations/retrievers/ragatouille/", "ArxivRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/arxiv/", "ElasticsearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/elasticsearch_retriever/", "Google Vertex AI Search": "https://https://docs.aiagentsforce.com//integrations/retrievers/google_vertex_ai_search/", "Tavily Search": "https://https://docs.aiagentsforce.com//integrations/tools/tavily_search/", "FinancialDatasets Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/financial_datasets/", "Databricks Unity Catalog (UC)": "https://https://docs.aiagentsforce.com//integrations/tools/databricks/", "Riza Code Interpreter": "https://https://docs.aiagentsforce.com//integrations/tools/riza/", "Redis": "https://https://docs.aiagentsforce.com//integrations/memory/redis_chat_message_history/", "Google SQL for MySQL": "https://https://docs.aiagentsforce.com//integrations/memory/google_sql_mysql/", "Google AlloyDB for PostgreSQL": "https://https://docs.aiagentsforce.com//integrations/memory/google_alloydb/", "ZepCloudChatMessageHistory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_cloud_chat_message_history/", "AWS DynamoDB": "https://https://docs.aiagentsforce.com//integrations/memory/aws_dynamodb/", "Couchbase": "https://https://docs.aiagentsforce.com//integrations/memory/couchbase_chat_message_history/", "MongoDB": "https://https://docs.aiagentsforce.com//integrations/memory/mongodb_chat_message_history/", "SQL (SQLAlchemy)": "https://https://docs.aiagentsforce.com//integrations/memory/sql_chat_message_history/", "Streamlit": "https://https://docs.aiagentsforce.com//integrations/memory/streamlit_chat_message_history/", "Google El Carro Oracle": "https://https://docs.aiagentsforce.com//integrations/memory/google_el_carro/", "SQLite": "https://https://docs.aiagentsforce.com//integrations/memory/sqlite/", "Google SQL for PostgreSQL": "https://https://docs.aiagentsforce.com//integrations/memory/google_sql_pg/", "Google SQL for SQL Server": "https://https://docs.aiagentsforce.com//integrations/memory/google_sql_mssql/", "TiDB": "https://https://docs.aiagentsforce.com//integrations/memory/tidb_chat_message_history/", "Kinetica Language To SQL Chat Model": "https://https://docs.aiagentsforce.com//integrations/chat/kinetica/", "ChatFireworks": "https://https://docs.aiagentsforce.com//integrations/chat/fireworks/", "ChatYI": "https://https://docs.aiagentsforce.com//integrations/chat/yi/", "ChatAnthropic": "https://https://docs.aiagentsforce.com//integrations/chat/anthropic/", "ChatGroq": "https://https://docs.aiagentsforce.com//integrations/chat/groq/", "ChatGoogleGenerativeAI": "https://https://docs.aiagentsforce.com//integrations/chat/google_generative_ai/", "OllamaFunctions": "https://https://docs.aiagentsforce.com//integrations/chat/ollama_functions/", "ChatOpenAI": "https://https://docs.aiagentsforce.com//integrations/chat/openai/", "ChatVertexAI": "https://https://docs.aiagentsforce.com//integrations/chat/google_vertex_ai_palm/", "ChatBedrock": "https://https://docs.aiagentsforce.com//integrations/chat/bedrock/", "JinaChat": "https://https://docs.aiagentsforce.com//integrations/chat/jinachat/", "ChatOllama": "https://https://docs.aiagentsforce.com//integrations/chat/ollama/", "ChatOCIGenAI": "https://https://docs.aiagentsforce.com//integrations/chat/oci_generative_ai/", "AzureChatOpenAI": "https://https://docs.aiagentsforce.com//integrations/chat/azure_chat_openai/", "Llama.cpp": "https://https://docs.aiagentsforce.com//integrations/chat/llamacpp/", "ChatMistralAI": "https://https://docs.aiagentsforce.com//integrations/chat/mistralai/", "ChatAI21": "https://https://docs.aiagentsforce.com//integrations/chat/ai21/", "ChatDatabricks": "https://https://docs.aiagentsforce.com//integrations/chat/databricks/", "ChatTogether": "https://https://docs.aiagentsforce.com//integrations/chat/together/", "Llama2Chat": "https://https://docs.aiagentsforce.com//integrations/chat/llama2_chat/", "Cohere": "https://https://docs.aiagentsforce.com//integrations/providers/cohere/", "Eden AI": "https://https://docs.aiagentsforce.com//integrations/chat/edenai/", "ChatWatsonx": "https://https://docs.aiagentsforce.com//integrations/chat/ibm_watsonx/", "vLLM Chat": "https://https://docs.aiagentsforce.com//integrations/chat/vllm/", "Yuan2.0": "https://https://docs.aiagentsforce.com//integrations/chat/yuan2/", "Maritalk": "https://https://docs.aiagentsforce.com//integrations/chat/maritalk/", "ChatPerplexity": "https://https://docs.aiagentsforce.com//integrations/chat/perplexity/", "ChatUpstage": "https://https://docs.aiagentsforce.com//integrations/chat/upstage/", "ChatNVIDIA": "https://https://docs.aiagentsforce.com//integrations/chat/nvidia_ai_endpoints/", "Context": "https://https://docs.aiagentsforce.com//integrations/callbacks/context/", "Fiddler": "https://https://docs.aiagentsforce.com//integrations/callbacks/fiddler/", "UpTrain": "https://https://docs.aiagentsforce.com//integrations/callbacks/uptrain/", "MLflow": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow_tracking/", "Weaviate": "https://https://docs.aiagentsforce.com//integrations/vectorstores/weaviate/", "Yellowbrick": "https://https://docs.aiagentsforce.com//integrations/vectorstores/yellowbrick/", "Jaguar Vector Database": "https://https://docs.aiagentsforce.com//integrations/vectorstores/jaguar/", "ApertureDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/aperturedb/", "Apache Cassandra": "https://https://docs.aiagentsforce.com//integrations/vectorstores/cassandra/", "OpenAI metadata tagger": "https://https://docs.aiagentsforce.com//integrations/document_transformers/openai_metadata_tagger/", "Image captions": "https://https://docs.aiagentsforce.com//integrations/document_loaders/image_captions/", "Figma": "https://https://docs.aiagentsforce.com//integrations/document_loaders/figma/", "OllamaLLM": "https://https://docs.aiagentsforce.com//integrations/llms/ollama/", "Build a Retrieval Augmented Generation (RAG) App": "https://https://docs.aiagentsforce.com//tutorials/rag/", "Build a Local RAG Application": "https://https://docs.aiagentsforce.com//tutorials/local_rag/", "Summarize Text": "https://https://docs.aiagentsforce.com//tutorials/summarization/", "Build an Extraction Chain": "https://https://docs.aiagentsforce.com//tutorials/extraction/", "Build a Chatbot": "https://https://docs.aiagentsforce.com//tutorials/chatbot/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/", "Classify Text into Labels": "https://https://docs.aiagentsforce.com//tutorials/classification/", "Build a Query Analysis System": "https://https://docs.aiagentsforce.com//tutorials/query_analysis/", "Build a Simple LLM Application with LCEL": "https://https://docs.aiagentsforce.com//tutorials/llm_chain/", "Build a PDF ingestion and Question/Answering system": "https://https://docs.aiagentsforce.com//tutorials/pdf_qa/", "Vector stores and retrievers": "https://https://docs.aiagentsforce.com//tutorials/retrievers/"}, "ChatAnthropic": {"\ud83e\udd9c\ufe0f\ud83c\udfd3 aiagentsforceapi": "https://https://docs.aiagentsforce.com//aiagentsforceapi/", "Conceptual guide": "https://https://docs.aiagentsforce.com//concepts/", "How to use callbacks in async environments": "https://https://docs.aiagentsforce.com//how_to/callbacks_async/", "How to route between sub-chains": "https://https://docs.aiagentsforce.com//how_to/routing/", "How to track token usage in ChatModels": "https://https://docs.aiagentsforce.com//how_to/chat_token_usage_tracking/", "How to merge consecutive messages of the same type": "https://https://docs.aiagentsforce.com//how_to/merge_message_runs/", "How to parse XML output": "https://https://docs.aiagentsforce.com//how_to/output_parser_xml/", "How to use prompting alone (no tool calling) to do extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_parse/", "How to handle rate limits": "https://https://docs.aiagentsforce.com//how_to/chat_model_rate_limiting/", "How to add fallbacks to a runnable": "https://https://docs.aiagentsforce.com//how_to/fallbacks/", "How to propagate callbacks  constructor": "https://https://docs.aiagentsforce.com//how_to/callbacks_constructor/", "How to stream chat model responses": "https://https://docs.aiagentsforce.com//how_to/chat_streaming/", "How to attach callbacks to a runnable": "https://https://docs.aiagentsforce.com//how_to/callbacks_attach/", "How to filter messages": "https://https://docs.aiagentsforce.com//how_to/filter_messages/", "How to create a dynamic (self-constructing) chain": "https://https://docs.aiagentsforce.com//how_to/dynamic_chain/", "How to create custom callback handlers": "https://https://docs.aiagentsforce.com//how_to/custom_callbacks/", "How to configure runtime chain internals": "https://https://docs.aiagentsforce.com//how_to/configure/", "How to create a custom Output Parser": "https://https://docs.aiagentsforce.com//how_to/output_parser_custom/", "Response metadata": "https://https://docs.aiagentsforce.com//how_to/response_metadata/", "How to pass callbacks in at runtime": "https://https://docs.aiagentsforce.com//how_to/callbacks_runtime/", "Anthropic": "https://https://docs.aiagentsforce.com//integrations/providers/anthropic/", "PlayWright Browser Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/playwright/", "Riza Code Interpreter": "https://https://docs.aiagentsforce.com//integrations/tools/riza/", "ChatAnthropic": "https://https://docs.aiagentsforce.com//integrations/chat/anthropic/", "Log10": "https://https://docs.aiagentsforce.com//integrations/providers/log10/", "Build an Agent": "https://https://docs.aiagentsforce.com//tutorials/agents/"}, "ChatOpenAI": {"\ud83e\udd9c\ufe0f\ud83c\udfd3 aiagentsforceapi": "https://https://docs.aiagentsforce.com//aiagentsforceapi/", "Conceptual guide": "https://https://docs.aiagentsforce.com//concepts/", "# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/llm_router_chain/", "Load docs": "https://https://docs.aiagentsforce.com//versions/migrating_chains/retrieval_qa/", "# Example": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_rerank_docs_chain/", "How to add a semantic layer over graph database": "https://https://docs.aiagentsforce.com//how_to/graph_semantic/", "How to disable parallel tool calling": "https://https://docs.aiagentsforce.com//how_to/tool_calling_parallel/", "How to add values to a chain's state": "https://https://docs.aiagentsforce.com//how_to/assign/", "How to track token usage in ChatModels": "https://https://docs.aiagentsforce.com//how_to/chat_token_usage_tracking/", "How to inspect runnables": "https://https://docs.aiagentsforce.com//how_to/inspect/", "How to bind model-specific tools": "https://https://docs.aiagentsforce.com//how_to/tools_model_specific/", "How to handle cases where no queries are generated": "https://https://docs.aiagentsforce.com//how_to/query_no_queries/", "How to trim messages": "https://https://docs.aiagentsforce.com//how_to/trim_messages/", "How to use few shot examples in chat models": "https://https://docs.aiagentsforce.com//how_to/few_shot_examples_chat/", "How to use AI Agents Force with different Pydantic versions": "https://https://docs.aiagentsforce.com//how_to/pydantic_compatibility/", "How to use reference examples when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_examples/", "How to handle multiple queries when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_queries/", "How to add fallbacks to a runnable": "https://https://docs.aiagentsforce.com//how_to/fallbacks/", "How to map values to a graph database": "https://https://docs.aiagentsforce.com//how_to/graph_mapping/", "How to pass multimodal data directly to models": "https://https://docs.aiagentsforce.com//how_to/multimodal_inputs/", "How to save and load AI Agents Force objects": "https://https://docs.aiagentsforce.com//how_to/serialization/", "How to use the output-fixing parser": "https://https://docs.aiagentsforce.com//how_to/output_parser_fixing/", "How to convert tools to OpenAI Functions": "https://https://docs.aiagentsforce.com//how_to/tools_as_openai_functions/", "How to add tools to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_tools/", "How to add default invocation args to a Runnable": "https://https://docs.aiagentsforce.com//how_to/binding/", "How to invoke runnables in parallel": "https://https://docs.aiagentsforce.com//how_to/parallel/", "How to pass through arguments from one step to the next": "https://https://docs.aiagentsforce.com//how_to/passthrough/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "How to add retrieval to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_retrieval/", "How to configure runtime chain internals": "https://https://docs.aiagentsforce.com//how_to/configure/", "How to do retrieval with contextual compression": "https://https://docs.aiagentsforce.com//how_to/contextual_compression/", "How to handle multiple retrievers when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_retrievers/", "How to construct knowledge graphs": "https://https://docs.aiagentsforce.com//how_to/graph_constructing/", "How to retry when a parsing error occurs": "https://https://docs.aiagentsforce.com//how_to/output_parser_retry/", "How to use the MultiQueryRetriever": "https://https://docs.aiagentsforce.com//how_to/MultiQueryRetriever/", "How to run custom functions": "https://https://docs.aiagentsforce.com//how_to/functions/", "How to best prompt for Graph-RAG": "https://https://docs.aiagentsforce.com//how_to/graph_prompting/", "How to add memory to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_memory/", "How deal with high cardinality categoricals when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_high_cardinality/", "How to get log probabilities": "https://https://docs.aiagentsforce.com//how_to/logprobs/", "How to parse YAML output": "https://https://docs.aiagentsforce.com//how_to/output_parser_yaml/", "Response metadata": "https://https://docs.aiagentsforce.com//how_to/response_metadata/", "How to parse JSON output": "https://https://docs.aiagentsforce.com//how_to/output_parser_json/", "How to do \"self-querying\" retrieval": "https://https://docs.aiagentsforce.com//how_to/self_query/", "Hybrid Search": "https://https://docs.aiagentsforce.com//how_to/hybrid/", "How to migrate from legacy AI Agents Force agents to LangGraph": "https://https://docs.aiagentsforce.com//how_to/migrate_agent/", "How to stream tool calls": "https://https://docs.aiagentsforce.com//how_to/tool_streaming/", "How to use multimodal prompts": "https://https://docs.aiagentsforce.com//how_to/multimodal_prompts/", "How to add scores to retriever results": "https://https://docs.aiagentsforce.com//how_to/add_scores_retriever/", "How to use few-shot prompting with tool calling": "https://https://docs.aiagentsforce.com//how_to/tools_few_shot/", "How to add examples to the prompt for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_few_shot/", "Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "WeChat": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/wechat/", "Facebook Messenger": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/facebook/", "LangSmith LLM Runs": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/langsmith_llm_runs/", "Slack": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/slack/", "WhatsApp": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/whatsapp/", "LangSmith Chat Datasets": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/langsmith_dataset/", "iMessage": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/imessage/", "Telegram": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/telegram/", "Discord": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/discord/", "AzureAISearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/azure_ai_search/", "RePhraseQuery": "https://https://docs.aiagentsforce.com//integrations/retrievers/re_phrase/", "You.com": "https://https://docs.aiagentsforce.com//integrations/retrievers/you-retriever/", "Fleet AI Context": "https://https://docs.aiagentsforce.com//integrations/retrievers/fleet_context/", "AskNews": "https://https://docs.aiagentsforce.com//integrations/tools/asknews/", "LLMLingua Document Compressor": "https://https://docs.aiagentsforce.com//integrations/retrievers/llmlingua/", "Outline": "https://https://docs.aiagentsforce.com//integrations/retrievers/outline/", "SEC filing": "https://https://docs.aiagentsforce.com//integrations/retrievers/sec_filings/", "TavilySearchAPIRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/tavily/", "Activeloop Deep Memory": "https://https://docs.aiagentsforce.com//integrations/retrievers/activeloop/", "RAGatouille": "https://https://docs.aiagentsforce.com//integrations/retrievers/ragatouille/", "ElasticsearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/elasticsearch_retriever/", "Rememberizer": "https://https://docs.aiagentsforce.com//integrations/retrievers/rememberizer/", "Milvus Hybrid Search Retriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/milvus_hybrid_search/", "Kay.ai": "https://https://docs.aiagentsforce.com//integrations/retrievers/kay/", "FlashRank reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/flashrank-reranker/", "Vectara self-querying ": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/vectara_self_query/", "SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sap_hanavector/", "Tencent Cloud VectorDB": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/tencentvectordb/", "MyScale": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/myscale_self_query/", "OpenAI": "https://https://docs.aiagentsforce.com//integrations/providers/openai/", "ChatGPT Plugins": "https://https://docs.aiagentsforce.com//integrations/tools/chatgpt_plugins/", "Connery Toolkit and Tools": "https://https://docs.aiagentsforce.com//integrations/tools/connery/", "Infobip": "https://https://docs.aiagentsforce.com//integrations/tools/infobip/", "PowerBI Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/powerbi/", "E2B Data Analysis": "https://https://docs.aiagentsforce.com//integrations/tools/e2b_data_analysis/", "Human as a tool": "https://https://docs.aiagentsforce.com//integrations/tools/human_tools/", "Azure Container Apps dynamic sessions": "https://https://docs.aiagentsforce.com//integrations/tools/azure_dynamic_sessions/", "FinancialDatasets Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/financial_datasets/", "Slack Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/slack/", "Cassandra Database Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/cassandra_database/", "Yahoo Finance News": "https://https://docs.aiagentsforce.com//integrations/tools/yahoo_finance_news/", "Polygon IO Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/polygon_toolkit/", "Semantic Scholar API Tool": "https://https://docs.aiagentsforce.com//integrations/tools/semanticscholar/", "Spark SQL Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/spark_sql/", "Requests Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/requests/", "AINetwork Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/ainetwork/", "Passio NutritionAI": "https://https://docs.aiagentsforce.com//integrations/tools/passio_nutrition_ai/", "Cogniswitch Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/cogniswitch/", "Bearly Code Interpreter": "https://https://docs.aiagentsforce.com//integrations/tools/bearly/", "Pandas Dataframe": "https://https://docs.aiagentsforce.com//integrations/tools/pandas/", "ArXiv": "https://https://docs.aiagentsforce.com//integrations/tools/arxiv/", "Robocorp Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/robocorp/", "Connery Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/connery_toolkit/", "MultiOn Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/multion/", "Exa Search": "https://https://docs.aiagentsforce.com//integrations/tools/exa_search/", "Amadeus Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/amadeus/", "Reddit Search ": "https://https://docs.aiagentsforce.com//integrations/tools/reddit_search/", "You.com Search": "https://https://docs.aiagentsforce.com//integrations/tools/you/", "OpenAPI Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/openapi/", "Shell (bash)": "https://https://docs.aiagentsforce.com//integrations/tools/bash/", "Polygon IO Toolkit and Tools": "https://https://docs.aiagentsforce.com//integrations/tools/polygon/", "Redis": "https://https://docs.aiagentsforce.com//integrations/memory/redis_chat_message_history/", "ZepCloudChatMessageHistory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_cloud_chat_message_history/", "AWS DynamoDB": "https://https://docs.aiagentsforce.com//integrations/memory/aws_dynamodb/", "Couchbase": "https://https://docs.aiagentsforce.com//integrations/memory/couchbase_chat_message_history/", "MongoDB": "https://https://docs.aiagentsforce.com//integrations/memory/mongodb_chat_message_history/", "Xata": "https://https://docs.aiagentsforce.com//integrations/memory/xata_chat_message_history/", "Remembrall": "https://https://docs.aiagentsforce.com//integrations/memory/remembrall/", "SQL (SQLAlchemy)": "https://https://docs.aiagentsforce.com//integrations/memory/sql_chat_message_history/", "Streamlit": "https://https://docs.aiagentsforce.com//integrations/memory/streamlit_chat_message_history/", "SQLite": "https://https://docs.aiagentsforce.com//integrations/memory/sqlite/", "TiDB": "https://https://docs.aiagentsforce.com//integrations/memory/tidb_chat_message_history/", "ChatOpenAI": "https://https://docs.aiagentsforce.com//integrations/chat/openai/", "vLLM Chat": "https://https://docs.aiagentsforce.com//integrations/chat/vllm/", "LLMonitor": "https://https://docs.aiagentsforce.com//integrations/callbacks/llmonitor/", "Context": "https://https://docs.aiagentsforce.com//integrations/callbacks/context/", "Label Studio": "https://https://docs.aiagentsforce.com//integrations/callbacks/labelstudio/", "PromptLayer": "https://https://docs.aiagentsforce.com//integrations/callbacks/promptlayer/", "UpTrain": "https://https://docs.aiagentsforce.com//integrations/callbacks/uptrain/", "Trubrics": "https://https://docs.aiagentsforce.com//integrations/callbacks/trubrics/", "Infino": "https://https://docs.aiagentsforce.com//integrations/callbacks/infino/", "Upstash Ratelimit Callback": "https://https://docs.aiagentsforce.com//integrations/callbacks/upstash_ratelimit/", "CnosDB": "https://https://docs.aiagentsforce.com//integrations/providers/cnosdb/", "Log10": "https://https://docs.aiagentsforce.com//integrations/providers/log10/", "MLflow": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow_tracking/", "Flyte": "https://https://docs.aiagentsforce.com//integrations/providers/flyte/", "Arthur": "https://https://docs.aiagentsforce.com//integrations/providers/arthur_tracking/", "Dataherald": "https://https://docs.aiagentsforce.com//integrations/providers/dataherald/", "Log, Trace, and Monitor": "https://https://docs.aiagentsforce.com//integrations/providers/portkey/logging_tracing_portkey/", "Portkey": "https://https://docs.aiagentsforce.com//integrations/providers/portkey/index/", "Weaviate": "https://https://docs.aiagentsforce.com//integrations/vectorstores/weaviate/", "Yellowbrick": "https://https://docs.aiagentsforce.com//integrations/vectorstores/yellowbrick/", "Jaguar Vector Database": "https://https://docs.aiagentsforce.com//integrations/vectorstores/jaguar/", "Hippo": "https://https://docs.aiagentsforce.com//integrations/vectorstores/hippo/", "Vectara": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vectara/", "Momento Vector Index (MVI)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/momento_vector_index/", "Neo4j Vector Index": "https://https://docs.aiagentsforce.com//integrations/vectorstores/neo4jvector/", "Apache Cassandra": "https://https://docs.aiagentsforce.com//integrations/vectorstores/cassandra/", "KDB.AI": "https://https://docs.aiagentsforce.com//integrations/vectorstores/kdbai/", "Timescale Vector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/timescalevector/", "RankLLM Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/rankllm-reranker/", "OpenAI metadata tagger": "https://https://docs.aiagentsforce.com//integrations/document_transformers/openai_metadata_tagger/", "Jina Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/jina_rerank/", "YouTube audio": "https://https://docs.aiagentsforce.com//integrations/document_loaders/youtube_audio/", "Image captions": "https://https://docs.aiagentsforce.com//integrations/document_loaders/image_captions/", "Figma": "https://https://docs.aiagentsforce.com//integrations/document_loaders/figma/", "Browserbase": "https://https://docs.aiagentsforce.com//integrations/document_loaders/browserbase/", "Memgraph": "https://https://docs.aiagentsforce.com//integrations/graphs/memgraph/", "RDFLib": "https://https://docs.aiagentsforce.com//integrations/graphs/rdflib_sparql/", "NebulaGraph": "https://https://docs.aiagentsforce.com//integrations/graphs/nebula_graph/", "HugeGraph": "https://https://docs.aiagentsforce.com//integrations/graphs/hugegraph/", "Diffbot": "https://https://docs.aiagentsforce.com//integrations/graphs/diffbot/", "Ontotext GraphDB": "https://https://docs.aiagentsforce.com//integrations/graphs/ontotext/", "Apache AGE": "https://https://docs.aiagentsforce.com//integrations/graphs/apache_age/", "Neo4j": "https://https://docs.aiagentsforce.com//integrations/graphs/neo4j_cypher/", "ArangoDB": "https://https://docs.aiagentsforce.com//integrations/graphs/arangodb/", "Amazon Neptune with Cypher": "https://https://docs.aiagentsforce.com//integrations/graphs/amazon_neptune_open_cypher/", "Kuzu": "https://https://docs.aiagentsforce.com//integrations/graphs/kuzu_db/", "FalkorDB": "https://https://docs.aiagentsforce.com//integrations/graphs/falkordb/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/", "Classify Text into Labels": "https://https://docs.aiagentsforce.com//tutorials/classification/", "Build a Query Analysis System": "https://https://docs.aiagentsforce.com//tutorials/query_analysis/", "Build a Simple LLM Application with LCEL": "https://https://docs.aiagentsforce.com//tutorials/llm_chain/", "Generate Synthetic Data": "https://https://docs.aiagentsforce.com//tutorials/data_generation/", "Build a Question Answering application over a Graph Database": "https://https://docs.aiagentsforce.com//tutorials/graph/"}, "SystemMessage": {"\ud83e\udd9c\ufe0f\ud83c\udfd3 aiagentsforceapi": "https://https://docs.aiagentsforce.com//aiagentsforceapi/", "How to merge consecutive messages of the same type": "https://https://docs.aiagentsforce.com//how_to/merge_message_runs/", "How to trim messages": "https://https://docs.aiagentsforce.com//how_to/trim_messages/", "How to use reference examples when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_examples/", "How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/", "How to filter messages": "https://https://docs.aiagentsforce.com//how_to/filter_messages/", "How to compose prompts together": "https://https://docs.aiagentsforce.com//how_to/prompts_composition/", "How to migrate from legacy AI Agents Force agents to LangGraph": "https://https://docs.aiagentsforce.com//how_to/migrate_agent/", "How to add examples to the prompt for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_few_shot/", "Activeloop Deep Memory": "https://https://docs.aiagentsforce.com//integrations/retrievers/activeloop/", "Robocorp Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/robocorp/", "Exa Search": "https://https://docs.aiagentsforce.com//integrations/tools/exa_search/", "Snowflake Cortex": "https://https://docs.aiagentsforce.com//integrations/chat/snowflake/", "# Related": "https://https://docs.aiagentsforce.com//integrations/chat/solar/", "ChatHuggingFace": "https://https://docs.aiagentsforce.com//integrations/chat/huggingface/", "ChatOctoAI": "https://https://docs.aiagentsforce.com//integrations/chat/octoai/", "ChatYI": "https://https://docs.aiagentsforce.com//integrations/chat/yi/", "LlamaEdge": "https://https://docs.aiagentsforce.com//integrations/chat/llama_edge/", "ChatKonko": "https://https://docs.aiagentsforce.com//integrations/chat/konko/", "GigaChat": "https://https://docs.aiagentsforce.com//integrations/chat/gigachat/", "JinaChat": "https://https://docs.aiagentsforce.com//integrations/chat/jinachat/", "ChatOCIGenAI": "https://https://docs.aiagentsforce.com//integrations/chat/oci_generative_ai/", "ChatEverlyAI": "https://https://docs.aiagentsforce.com//integrations/chat/everlyai/", "ChatFriendli": "https://https://docs.aiagentsforce.com//integrations/chat/friendli/", "ZHIPU AI": "https://https://docs.aiagentsforce.com//integrations/chat/zhipuai/", "Llama2Chat": "https://https://docs.aiagentsforce.com//integrations/chat/llama2_chat/", "ChatWatsonx": "https://https://docs.aiagentsforce.com//integrations/chat/ibm_watsonx/", "vLLM Chat": "https://https://docs.aiagentsforce.com//integrations/chat/vllm/", "Yuan2.0": "https://https://docs.aiagentsforce.com//integrations/chat/yuan2/", "ChatTongyi": "https://https://docs.aiagentsforce.com//integrations/chat/tongyi/", "MoonshotChat": "https://https://docs.aiagentsforce.com//integrations/chat/moonshot/", "ChatPremAI": "https://https://docs.aiagentsforce.com//integrations/chat/premai/", "ChatAnyscale": "https://https://docs.aiagentsforce.com//integrations/chat/anyscale/", "ChatYandexGPT": "https://https://docs.aiagentsforce.com//integrations/chat/yandex/", "LLMonitor": "https://https://docs.aiagentsforce.com//integrations/callbacks/llmonitor/", "Context": "https://https://docs.aiagentsforce.com//integrations/callbacks/context/", "Label Studio": "https://https://docs.aiagentsforce.com//integrations/callbacks/labelstudio/", "Trubrics": "https://https://docs.aiagentsforce.com//integrations/callbacks/trubrics/", "MLflow Deployments for LLMs": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow/", "MLflow AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow_ai_gateway/", "PremAI": "https://https://docs.aiagentsforce.com//integrations/providers/premai/", "Javelin AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/javelin_ai_gateway/", "Google Cloud Vertex AI": "https://https://docs.aiagentsforce.com//integrations/llms/google_vertex_ai_palm/", "Javelin AI Gateway Tutorial": "https://https://docs.aiagentsforce.com//integrations/llms/javelin/", "Build a Chatbot": "https://https://docs.aiagentsforce.com//tutorials/chatbot/", "Build a Question/Answering system over SQL data": "https://https://docs.aiagentsforce.com//tutorials/sql_qa/", "Build a Simple LLM Application with LCEL": "https://https://docs.aiagentsforce.com//tutorials/llm_chain/"}, "HumanMessage": {"\ud83e\udd9c\ufe0f\ud83c\udfd3 aiagentsforceapi": "https://https://docs.aiagentsforce.com//aiagentsforceapi/", "Conceptual guide": "https://https://docs.aiagentsforce.com//concepts/", "Build an Agent with AgentExecutor (Legacy)": "https://https://docs.aiagentsforce.com//how_to/agent_executor/", "How to add a semantic layer over graph database": "https://https://docs.aiagentsforce.com//how_to/graph_semantic/", "How to use callbacks in async environments": "https://https://docs.aiagentsforce.com//how_to/callbacks_async/", "How to merge consecutive messages of the same type": "https://https://docs.aiagentsforce.com//how_to/merge_message_runs/", "How to trim messages": "https://https://docs.aiagentsforce.com//how_to/trim_messages/", "How to do tool/function calling": "https://https://docs.aiagentsforce.com//how_to/function_calling/", "How to use reference examples when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_examples/", "How to pass multimodal data directly to models": "https://https://docs.aiagentsforce.com//how_to/multimodal_inputs/", "How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/", "How to convert tools to OpenAI Functions": "https://https://docs.aiagentsforce.com//how_to/tools_as_openai_functions/", "How to filter messages": "https://https://docs.aiagentsforce.com//how_to/filter_messages/", "How to handle tool errors": "https://https://docs.aiagentsforce.com//how_to/tools_error/", "How to add tools to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_tools/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "How to add message history": "https://https://docs.aiagentsforce.com//how_to/message_history/", "How to add retrieval to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_retrieval/", "How to pass tool outputs to chat models": "https://https://docs.aiagentsforce.com//how_to/tool_results_pass_to_model/", "How to return structured data from a model": "https://https://docs.aiagentsforce.com//how_to/structured_output/", "How to compose prompts together": "https://https://docs.aiagentsforce.com//how_to/prompts_composition/", "How to use few-shot prompting with tool calling": "https://https://docs.aiagentsforce.com//how_to/tools_few_shot/", "How to add examples to the prompt for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_few_shot/", "WeChat": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/wechat/", "Discord": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/discord/", "Zep Open Source": "https://https://docs.aiagentsforce.com//integrations/retrievers/zep_memorystore/", "Zep Cloud": "https://https://docs.aiagentsforce.com//integrations/retrievers/zep_cloud_memorystore/", "Activeloop Deep Memory": "https://https://docs.aiagentsforce.com//integrations/retrievers/activeloop/", "Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "Google Imagen": "https://https://docs.aiagentsforce.com//integrations/tools/google_imagen/", "Zep Open Source Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory/", "ZepCloudChatMessageHistory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_cloud_chat_message_history/", "Zep Cloud Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory_cloud/", "Snowflake Cortex": "https://https://docs.aiagentsforce.com//integrations/chat/snowflake/", "# Related": "https://https://docs.aiagentsforce.com//integrations/chat/solar/", "ChatHuggingFace": "https://https://docs.aiagentsforce.com//integrations/chat/huggingface/", "AzureMLChatOnlineEndpoint": "https://https://docs.aiagentsforce.com//integrations/chat/azureml_chat_endpoint/", "Alibaba Cloud PAI EAS": "https://https://docs.aiagentsforce.com//integrations/chat/alibaba_cloud_pai_eas/", "Chat with Coze Bot": "https://https://docs.aiagentsforce.com//integrations/chat/coze/", "ChatOctoAI": "https://https://docs.aiagentsforce.com//integrations/chat/octoai/", "ChatYI": "https://https://docs.aiagentsforce.com//integrations/chat/yi/", "DeepInfra": "https://https://docs.aiagentsforce.com//integrations/chat/deepinfra/", "ChatLiteLLM": "https://https://docs.aiagentsforce.com//integrations/chat/litellm/", "LlamaEdge": "https://https://docs.aiagentsforce.com//integrations/chat/llama_edge/", "VolcEngineMaasChat": "https://https://docs.aiagentsforce.com//integrations/chat/volcengine_maas/", "ChatKonko": "https://https://docs.aiagentsforce.com//integrations/chat/konko/", "MLX": "https://https://docs.aiagentsforce.com//integrations/chat/mlx/", "GigaChat": "https://https://docs.aiagentsforce.com//integrations/chat/gigachat/", "JinaChat": "https://https://docs.aiagentsforce.com//integrations/chat/jinachat/", "ChatOllama": "https://https://docs.aiagentsforce.com//integrations/chat/ollama/", "ChatOCIGenAI": "https://https://docs.aiagentsforce.com//integrations/chat/oci_generative_ai/", "ChatEverlyAI": "https://https://docs.aiagentsforce.com//integrations/chat/everlyai/", "GPTRouter": "https://https://docs.aiagentsforce.com//integrations/chat/gpt_router/", "ChatLiteLLMRouter": "https://https://docs.aiagentsforce.com//integrations/chat/litellm_router/", "ChatFriendli": "https://https://docs.aiagentsforce.com//integrations/chat/friendli/", "ZHIPU AI": "https://https://docs.aiagentsforce.com//integrations/chat/zhipuai/", "Chat with Baichuan-192K": "https://https://docs.aiagentsforce.com//integrations/chat/baichuan/", "QianfanChatEndpoint": "https://https://docs.aiagentsforce.com//integrations/chat/baidu_qianfan_endpoint/", "Cohere": "https://https://docs.aiagentsforce.com//integrations/llms/cohere/", "Eden AI": "https://https://docs.aiagentsforce.com//integrations/chat/edenai/", "ErnieBotChat": "https://https://docs.aiagentsforce.com//integrations/chat/ernie/", "ChatWatsonx": "https://https://docs.aiagentsforce.com//integrations/chat/ibm_watsonx/", "vLLM Chat": "https://https://docs.aiagentsforce.com//integrations/chat/vllm/", "Tencent Hunyuan": "https://https://docs.aiagentsforce.com//integrations/chat/tencent_hunyuan/", "MiniMaxChat": "https://https://docs.aiagentsforce.com//integrations/chat/minimax/", "Yuan2.0": "https://https://docs.aiagentsforce.com//integrations/chat/yuan2/", "ChatTongyi": "https://https://docs.aiagentsforce.com//integrations/chat/tongyi/", "PromptLayerChatOpenAI": "https://https://docs.aiagentsforce.com//integrations/chat/promptlayer_chatopenai/", "SparkLLM Chat": "https://https://docs.aiagentsforce.com//integrations/chat/sparkllm/", "MoonshotChat": "https://https://docs.aiagentsforce.com//integrations/chat/moonshot/", "Dappier AI": "https://https://docs.aiagentsforce.com//integrations/chat/dappier/", "Maritalk": "https://https://docs.aiagentsforce.com//integrations/chat/maritalk/", "ChatPremAI": "https://https://docs.aiagentsforce.com//integrations/chat/premai/", "ChatAnyscale": "https://https://docs.aiagentsforce.com//integrations/chat/anyscale/", "ChatYandexGPT": "https://https://docs.aiagentsforce.com//integrations/chat/yandex/", "ChatNVIDIA": "https://https://docs.aiagentsforce.com//integrations/chat/nvidia_ai_endpoints/", "LLMonitor": "https://https://docs.aiagentsforce.com//integrations/callbacks/llmonitor/", "Context": "https://https://docs.aiagentsforce.com//integrations/callbacks/context/", "Label Studio": "https://https://docs.aiagentsforce.com//integrations/callbacks/labelstudio/", "PromptLayer": "https://https://docs.aiagentsforce.com//integrations/callbacks/promptlayer/", "Trubrics": "https://https://docs.aiagentsforce.com//integrations/callbacks/trubrics/", "Log10": "https://https://docs.aiagentsforce.com//integrations/providers/log10/", "MLflow Deployments for LLMs": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow/", "MLflow AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow_ai_gateway/", "Flyte": "https://https://docs.aiagentsforce.com//integrations/providers/flyte/", "PremAI": "https://https://docs.aiagentsforce.com//integrations/providers/premai/", "Arthur": "https://https://docs.aiagentsforce.com//integrations/providers/arthur_tracking/", "Javelin AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/javelin_ai_gateway/", "Browserbase": "https://https://docs.aiagentsforce.com//integrations/document_loaders/browserbase/", "Google Cloud Vertex AI": "https://https://docs.aiagentsforce.com//integrations/llms/google_vertex_ai_palm/", "Javelin AI Gateway Tutorial": "https://https://docs.aiagentsforce.com//integrations/llms/javelin/", "Azure ML": "https://https://docs.aiagentsforce.com//integrations/llms/azure_ml/", "Chat Bot Feedback Template": "https://https://docs.aiagentsforce.com//templates/chat-bot-feedback/", "Build a Chatbot": "https://https://docs.aiagentsforce.com//tutorials/chatbot/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/", "Build an Agent": "https://https://docs.aiagentsforce.com//tutorials/agents/", "Build a Question/Answering system over SQL data": "https://https://docs.aiagentsforce.com//tutorials/sql_qa/", "Build a Simple LLM Application with LCEL": "https://https://docs.aiagentsforce.com//tutorials/llm_chain/"}, "RunnableMap": {"\ud83e\udd9c\ufe0f\ud83c\udfd3 aiagentsforceapi": "https://https://docs.aiagentsforce.com//aiagentsforceapi/"}, "RunnableLambda": {"\ud83e\udd9c\ufe0f\ud83c\udfd3 aiagentsforceapi": "https://https://docs.aiagentsforce.com//aiagentsforceapi/", "How to handle long text when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_long_text/", "How to route between sub-chains": "https://https://docs.aiagentsforce.com//how_to/routing/", "How to convert Runnables as Tools": "https://https://docs.aiagentsforce.com//how_to/convert_runnable_to_tool/", "How to stream runnables": "https://https://docs.aiagentsforce.com//how_to/streaming/", "How to retry when a parsing error occurs": "https://https://docs.aiagentsforce.com//how_to/output_parser_retry/", "How to run custom functions": "https://https://docs.aiagentsforce.com//how_to/functions/", "AI Agents Force Expression Language Cheatsheet": "https://https://docs.aiagentsforce.com//how_to/lcel_cheatsheet/", "How to select examples from a LangSmith dataset": "https://https://docs.aiagentsforce.com//how_to/example_selectors_langsmith/", "How to dispatch custom callback events": "https://https://docs.aiagentsforce.com//how_to/callbacks_custom_events/", "Upstash Ratelimit Callback": "https://https://docs.aiagentsforce.com//integrations/callbacks/upstash_ratelimit/", "Vector stores and retrievers": "https://https://docs.aiagentsforce.com//tutorials/retrievers/"}, "PromptTemplate": {"Conceptual guide": "https://https://docs.aiagentsforce.com//concepts/", "# Example": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_rerank_docs_chain/", "# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/llm_router_chain/", "How to better prompt when doing SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_prompting/", "How to use output parsers to parse an LLM response into structured format": "https://https://docs.aiagentsforce.com//how_to/output_parser_structured/", "How to route between sub-chains": "https://https://docs.aiagentsforce.com//how_to/routing/", "How to select examples by n-gram overlap": "https://https://docs.aiagentsforce.com//how_to/example_selectors_ngram/", "How to select examples by length": "https://https://docs.aiagentsforce.com//how_to/example_selectors_length_based/", "How to use example selectors": "https://https://docs.aiagentsforce.com//how_to/example_selectors/", "How to use few shot examples": "https://https://docs.aiagentsforce.com//how_to/few_shot_examples/", "How to select examples by similarity": "https://https://docs.aiagentsforce.com//how_to/example_selectors_similarity/", "How to parse XML output": "https://https://docs.aiagentsforce.com//how_to/output_parser_xml/", "How to reorder retrieved results to mitigate the \"lost in the middle\" effect": "https://https://docs.aiagentsforce.com//how_to/long_context_reorder/", "How to add fallbacks to a runnable": "https://https://docs.aiagentsforce.com//how_to/fallbacks/", "Run models locally": "https://https://docs.aiagentsforce.com//how_to/local_llms/", "How to configure runtime chain internals": "https://https://docs.aiagentsforce.com//how_to/configure/", "How to retry when a parsing error occurs": "https://https://docs.aiagentsforce.com//how_to/output_parser_retry/", "How to use the MultiQueryRetriever": "https://https://docs.aiagentsforce.com//how_to/MultiQueryRetriever/", "How to best prompt for Graph-RAG": "https://https://docs.aiagentsforce.com//how_to/graph_prompting/", "How to parse YAML output": "https://https://docs.aiagentsforce.com//how_to/output_parser_yaml/", "How to compose prompts together": "https://https://docs.aiagentsforce.com//how_to/prompts_composition/", "How to partially format prompt templates": "https://https://docs.aiagentsforce.com//how_to/prompts_partial/", "How to parse JSON output": "https://https://docs.aiagentsforce.com//how_to/output_parser_json/", "How to select examples by maximal marginal relevance (MMR)": "https://https://docs.aiagentsforce.com//how_to/example_selectors_mmr/", "How to track token usage for LLMs": "https://https://docs.aiagentsforce.com//how_to/llm_token_usage_tracking/", "Clarifai": "https://https://docs.aiagentsforce.com//integrations/llms/clarifai/", "RePhraseQuery": "https://https://docs.aiagentsforce.com//integrations/retrievers/re_phrase/", "Google Drive": "https://https://docs.aiagentsforce.com//integrations/document_loaders/google_drive/", "Milvus Hybrid Search Retriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/milvus_hybrid_search/", "Zapier Natural Language Actions": "https://https://docs.aiagentsforce.com//integrations/tools/zapier/", "NVIDIA Riva: ASR and TTS": "https://https://docs.aiagentsforce.com//integrations/tools/nvidia_riva/", "Reddit Search ": "https://https://docs.aiagentsforce.com//integrations/tools/reddit_search/", "Dall-E Image Generator": "https://https://docs.aiagentsforce.com//integrations/tools/dalle_image_generator/", "Mot\u00f6rhead": "https://https://docs.aiagentsforce.com//integrations/memory/motorhead_memory/", "Context": "https://https://docs.aiagentsforce.com//integrations/callbacks/context/", "SageMaker Tracking": "https://https://docs.aiagentsforce.com//integrations/callbacks/sagemaker_tracking/", "Argilla": "https://https://docs.aiagentsforce.com//integrations/callbacks/argilla/", "DSPy": "https://https://docs.aiagentsforce.com//integrations/providers/dspy/", "Comet": "https://https://docs.aiagentsforce.com//integrations/providers/comet_tracking/", "Aim": "https://https://docs.aiagentsforce.com//integrations/providers/aim_tracking/", "Weights & Biases": "https://https://docs.aiagentsforce.com//integrations/providers/wandb_tracking/", "MLflow AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow_ai_gateway/", "Rebuff": "https://https://docs.aiagentsforce.com//integrations/providers/rebuff/", "Prediction Guard": "https://https://docs.aiagentsforce.com//integrations/llms/predictionguard/", "Shale Protocol": "https://https://docs.aiagentsforce.com//integrations/providers/shaleprotocol/", "Flyte": "https://https://docs.aiagentsforce.com//integrations/providers/flyte/", "Ray Serve": "https://https://docs.aiagentsforce.com//integrations/providers/ray_serve/", "Javelin AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/javelin_ai_gateway/", "Identity-enabled RAG using PebbloRetrievalQA": "https://https://docs.aiagentsforce.com//integrations/providers/pebblo/pebblo_retrieval_qa/", "SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sap_hanavector/", "Amazon Document DB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/documentdb/", "Google Cloud Vertex AI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/google_cloud_vertexai_rerank/", "AirbyteLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte/", "Memgraph": "https://https://docs.aiagentsforce.com//integrations/graphs/memgraph/", "Apache AGE": "https://https://docs.aiagentsforce.com//integrations/graphs/apache_age/", "Neo4j": "https://https://docs.aiagentsforce.com//integrations/graphs/neo4j_cypher/", "Baseten": "https://https://docs.aiagentsforce.com//integrations/llms/baseten/", "StochasticAI": "https://https://docs.aiagentsforce.com//integrations/llms/stochasticai/", "Solar": "https://https://docs.aiagentsforce.com//integrations/llms/solar/", "Bittensor": "https://https://docs.aiagentsforce.com//integrations/llms/bittensor/", "IPEX-LLM": "https://https://docs.aiagentsforce.com//integrations/llms/ipex_llm/", "Banana": "https://https://docs.aiagentsforce.com//integrations/llms/banana/", "Alibaba Cloud PAI EAS": "https://https://docs.aiagentsforce.com//integrations/llms/alibabacloud_pai_eas_endpoint/", "OpenLLM": "https://https://docs.aiagentsforce.com//integrations/llms/openllm/", "SageMakerEndpoint": "https://https://docs.aiagentsforce.com//integrations/llms/sagemaker/", "Fireworks": "https://https://docs.aiagentsforce.com//integrations/llms/fireworks/", "OctoAI": "https://https://docs.aiagentsforce.com//integrations/llms/octoai/", "Writer": "https://https://docs.aiagentsforce.com//integrations/llms/writer/", "Modal": "https://https://docs.aiagentsforce.com//integrations/llms/modal/", "TextGen": "https://https://docs.aiagentsforce.com//integrations/llms/textgen/", "Xorbits Inference (Xinference)": "https://https://docs.aiagentsforce.com//integrations/llms/xinference/", "Nebula (Symbl.ai)": "https://https://docs.aiagentsforce.com//integrations/llms/symblai_nebula/", "DeepInfra": "https://https://docs.aiagentsforce.com//integrations/llms/deepinfra/", "AnthropicLLM": "https://https://docs.aiagentsforce.com//integrations/llms/anthropic/", "NLP Cloud": "https://https://docs.aiagentsforce.com//integrations/llms/nlpcloud/", "GPT4All": "https://https://docs.aiagentsforce.com//integrations/llms/gpt4all/", "ForefrontAI": "https://https://docs.aiagentsforce.com//integrations/llms/forefrontai/", "MosaicML": "https://https://docs.aiagentsforce.com//integrations/llms/mosaicml/", "Volc Engine Maas": "https://https://docs.aiagentsforce.com//integrations/llms/volcengine_maas/", "CerebriumAI": "https://https://docs.aiagentsforce.com//integrations/llms/cerebriumai/", "OpenAI": "https://https://docs.aiagentsforce.com//integrations/llms/openai/", "Google Cloud Vertex AI": "https://https://docs.aiagentsforce.com//integrations/llms/google_vertex_ai_palm/", "Predibase": "https://https://docs.aiagentsforce.com//integrations/llms/predibase/", "GigaChat": "https://https://docs.aiagentsforce.com//integrations/llms/gigachat/", "# Oracle Cloud Infrastructure Generative AI": "https://https://docs.aiagentsforce.com//integrations/llms/oci_generative_ai/", "Llama.cpp": "https://https://docs.aiagentsforce.com//integrations/llms/llamacpp/", "Hugging Face Local Pipelines": "https://https://docs.aiagentsforce.com//integrations/llms/huggingface_pipelines/", "OpaquePrompts": "https://https://docs.aiagentsforce.com//integrations/llms/opaqueprompts/", "Titan Takeoff": "https://https://docs.aiagentsforce.com//integrations/llms/titan_takeoff/", "Aphrodite Engine": "https://https://docs.aiagentsforce.com//integrations/llms/aphrodite/", "AI21LLM": "https://https://docs.aiagentsforce.com//integrations/llms/ai21/", "Cohere": "https://https://docs.aiagentsforce.com//integrations/llms/cohere/", "Eden AI": "https://https://docs.aiagentsforce.com//integrations/llms/edenai/", "Javelin AI Gateway Tutorial": "https://https://docs.aiagentsforce.com//integrations/llms/javelin/", "IBM watsonx.ai": "https://https://docs.aiagentsforce.com//integrations/llms/ibm_watsonx/", "C Transformers": "https://https://docs.aiagentsforce.com//integrations/llms/ctransformers/", "vLLM": "https://https://docs.aiagentsforce.com//integrations/llms/vllm/", "Azure ML": "https://https://docs.aiagentsforce.com//integrations/llms/azure_ml/", "Manifest": "https://https://docs.aiagentsforce.com//integrations/llms/manifest/", "ExLlamaV2": "https://https://docs.aiagentsforce.com//integrations/llms/exllamav2/", "Minimax": "https://https://docs.aiagentsforce.com//integrations/llms/minimax/", "Tongyi Qwen": "https://https://docs.aiagentsforce.com//integrations/llms/tongyi/", "Huggingface Endpoints": "https://https://docs.aiagentsforce.com//integrations/llms/huggingface_endpoint/", "MLX Local Pipelines": "https://https://docs.aiagentsforce.com//integrations/llms/mlx_pipelines/", "Runhouse": "https://https://docs.aiagentsforce.com//integrations/llms/runhouse/", "Anyscale": "https://https://docs.aiagentsforce.com//integrations/llms/anyscale/", "YandexGPT": "https://https://docs.aiagentsforce.com//integrations/llms/yandex/", "GooseAI": "https://https://docs.aiagentsforce.com//integrations/llms/gooseai/", "OpenLM": "https://https://docs.aiagentsforce.com//integrations/llms/openlm/", "Aleph Alpha": "https://https://docs.aiagentsforce.com//integrations/llms/aleph_alpha/", "Cloudflare Workers AI": "https://https://docs.aiagentsforce.com//integrations/llms/cloudflare_workersai/", "CTranslate2": "https://https://docs.aiagentsforce.com//integrations/llms/ctranslate2/", "Google AI": "https://https://docs.aiagentsforce.com//integrations/llms/google_ai/", "PipelineAI": "https://https://docs.aiagentsforce.com//integrations/llms/pipelineai/", "ChatGLM": "https://https://docs.aiagentsforce.com//integrations/llms/chatglm/", "Gradient": "https://https://docs.aiagentsforce.com//integrations/llms/gradient/", "Petals": "https://https://docs.aiagentsforce.com//integrations/llms/petals/", "OpenVINO": "https://https://docs.aiagentsforce.com//integrations/llms/openvino/", "Intel Weight-Only Quantization": "https://https://docs.aiagentsforce.com//integrations/llms/weight_only_quantization/", "Replicate": "https://https://docs.aiagentsforce.com//integrations/llms/replicate/", "Build a Retrieval Augmented Generation (RAG) App": "https://https://docs.aiagentsforce.com//tutorials/rag/", "Build a Question/Answering system over SQL data": "https://https://docs.aiagentsforce.com//tutorials/sql_qa/", "Generate Synthetic Data": "https://https://docs.aiagentsforce.com//tutorials/data_generation/"}, "MessagesPlaceholder": {"Conceptual guide": "https://https://docs.aiagentsforce.com//concepts/", "How to add a semantic layer over graph database": "https://https://docs.aiagentsforce.com//how_to/graph_semantic/", "How to handle long text when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_long_text/", "How to use reference examples when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_examples/", "How to do question answering over CSVs": "https://https://docs.aiagentsforce.com//how_to/sql_csv/", "How to stream results from your RAG application": "https://https://docs.aiagentsforce.com//how_to/qa_streaming/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "How to add message history": "https://https://docs.aiagentsforce.com//how_to/message_history/", "How to add retrieval to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_retrieval/", "How to get a RAG application to add citations": "https://https://docs.aiagentsforce.com//how_to/qa_citations/", "How to add examples to the prompt for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_few_shot/", "Redis": "https://https://docs.aiagentsforce.com//integrations/memory/redis_chat_message_history/", "Google SQL for MySQL": "https://https://docs.aiagentsforce.com//integrations/memory/google_sql_mysql/", "Google AlloyDB for PostgreSQL": "https://https://docs.aiagentsforce.com//integrations/memory/google_alloydb/", "ZepCloudChatMessageHistory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_cloud_chat_message_history/", "AWS DynamoDB": "https://https://docs.aiagentsforce.com//integrations/memory/aws_dynamodb/", "Couchbase": "https://https://docs.aiagentsforce.com//integrations/memory/couchbase_chat_message_history/", "MongoDB": "https://https://docs.aiagentsforce.com//integrations/memory/mongodb_chat_message_history/", "SQL (SQLAlchemy)": "https://https://docs.aiagentsforce.com//integrations/memory/sql_chat_message_history/", "Streamlit": "https://https://docs.aiagentsforce.com//integrations/memory/streamlit_chat_message_history/", "Google El Carro Oracle": "https://https://docs.aiagentsforce.com//integrations/memory/google_el_carro/", "SQLite": "https://https://docs.aiagentsforce.com//integrations/memory/sqlite/", "Google SQL for PostgreSQL": "https://https://docs.aiagentsforce.com//integrations/memory/google_sql_pg/", "Google SQL for SQL Server": "https://https://docs.aiagentsforce.com//integrations/memory/google_sql_mssql/", "TiDB": "https://https://docs.aiagentsforce.com//integrations/memory/tidb_chat_message_history/", "Llama2Chat": "https://https://docs.aiagentsforce.com//integrations/chat/llama2_chat/", "Build an Extraction Chain": "https://https://docs.aiagentsforce.com//tutorials/extraction/", "Build a Chatbot": "https://https://docs.aiagentsforce.com//tutorials/chatbot/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/"}, "CSVLoader": {"Conceptual guide": "https://https://docs.aiagentsforce.com//concepts/", "How to load CSVs": "https://https://docs.aiagentsforce.com//how_to/document_loader_csv/", "ChatGPT plugin": "https://https://docs.aiagentsforce.com//integrations/retrievers/chatgpt-plugin/", "Aerospike": "https://https://docs.aiagentsforce.com//integrations/vectorstores/aerospike/", "CSV": "https://https://docs.aiagentsforce.com//integrations/document_loaders/csv/", "Document loaders": "https://https://docs.aiagentsforce.com//integrations/document_loaders/index/", "Pebblo Safe DocumentLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/pebblo/"}, "StrOutputParser": {"Conceptual guide": "https://https://docs.aiagentsforce.com//concepts/", "# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/llm_chain/", "# Basic example (short documents)": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_reduce_chain/", "# Example": "https://https://docs.aiagentsforce.com//versions/migrating_chains/refine_docs_chain/", "Load docs": "https://https://docs.aiagentsforce.com//versions/migrating_chains/retrieval_qa/", "How to add values to a chain's state": "https://https://docs.aiagentsforce.com//how_to/assign/", "How to route between sub-chains": "https://https://docs.aiagentsforce.com//how_to/routing/", "How to do per-user retrieval": "https://https://docs.aiagentsforce.com//how_to/qa_per_user/", "How to inspect runnables": "https://https://docs.aiagentsforce.com//how_to/inspect/", "How to summarize text through iterative refinement": "https://https://docs.aiagentsforce.com//how_to/summarize_refine/", "How to create tools": "https://https://docs.aiagentsforce.com//how_to/custom_tools/", "How to add fallbacks to a runnable": "https://https://docs.aiagentsforce.com//how_to/fallbacks/", "How to map values to a graph database": "https://https://docs.aiagentsforce.com//how_to/graph_mapping/", "How to do question answering over CSVs": "https://https://docs.aiagentsforce.com//how_to/sql_csv/", "How to get your RAG application to return sources": "https://https://docs.aiagentsforce.com//how_to/qa_sources/", "How to summarize text through parallelization": "https://https://docs.aiagentsforce.com//how_to/summarize_map_reduce/", "How to add default invocation args to a Runnable": "https://https://docs.aiagentsforce.com//how_to/binding/", "How to convert Runnables as Tools": "https://https://docs.aiagentsforce.com//how_to/convert_runnable_to_tool/", "How to stream events from a tool": "https://https://docs.aiagentsforce.com//how_to/tool_stream_events/", "How to create a dynamic (self-constructing) chain": "https://https://docs.aiagentsforce.com//how_to/dynamic_chain/", "How to stream runnables": "https://https://docs.aiagentsforce.com//how_to/streaming/", "How to invoke runnables in parallel": "https://https://docs.aiagentsforce.com//how_to/parallel/", "How to pass through arguments from one step to the next": "https://https://docs.aiagentsforce.com//how_to/passthrough/", "How to retrieve using multiple vectors per document": "https://https://docs.aiagentsforce.com//how_to/multi_vector/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "How to add retrieval to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_retrieval/", "How to get a RAG application to add citations": "https://https://docs.aiagentsforce.com//how_to/qa_citations/", "How to run custom functions": "https://https://docs.aiagentsforce.com//how_to/functions/", "How to chain runnables": "https://https://docs.aiagentsforce.com//how_to/sequence/", "Hybrid Search": "https://https://docs.aiagentsforce.com//how_to/hybrid/", "How to do query validation as part of SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_query_checking/", "Facebook Messenger": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/facebook/", "iMessage": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/imessage/", "NVIDIA NIMs ": "https://https://docs.aiagentsforce.com//integrations/text_embedding/nvidia_ai_endpoints/", "AzureAISearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/azure_ai_search/", "You.com": "https://https://docs.aiagentsforce.com//integrations/retrievers/you-retriever/", "Fleet AI Context": "https://https://docs.aiagentsforce.com//integrations/retrievers/fleet_context/", "AskNews": "https://https://docs.aiagentsforce.com//integrations/retrievers/asknews/", "WikipediaRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/wikipedia/", "TavilySearchAPIRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/tavily/", "ArxivRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/arxiv/", "ElasticsearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/elasticsearch_retriever/", "Milvus Hybrid Search Retriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/milvus_hybrid_search/", "Google Vertex AI Search": "https://https://docs.aiagentsforce.com//integrations/retrievers/google_vertex_ai_search/", "ZepCloudChatMessageHistory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_cloud_chat_message_history/", "ChatOllama": "https://https://docs.aiagentsforce.com//integrations/chat/ollama/", "Maritalk": "https://https://docs.aiagentsforce.com//integrations/chat/maritalk/", "ChatNVIDIA": "https://https://docs.aiagentsforce.com//integrations/chat/nvidia_ai_endpoints/", "Fiddler": "https://https://docs.aiagentsforce.com//integrations/callbacks/fiddler/", "UpTrain": "https://https://docs.aiagentsforce.com//integrations/callbacks/uptrain/", "DSPy": "https://https://docs.aiagentsforce.com//integrations/providers/dspy/", "MLflow": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow_tracking/", "Shale Protocol": "https://https://docs.aiagentsforce.com//integrations/providers/shaleprotocol/", "Weaviate": "https://https://docs.aiagentsforce.com//integrations/vectorstores/weaviate/", "Jaguar Vector Database": "https://https://docs.aiagentsforce.com//integrations/vectorstores/jaguar/", "Apache Cassandra": "https://https://docs.aiagentsforce.com//integrations/vectorstores/cassandra/", "Volc Engine Maas": "https://https://docs.aiagentsforce.com//integrations/llms/volcengine_maas/", "OpaquePrompts": "https://https://docs.aiagentsforce.com//integrations/llms/opaqueprompts/", "AI21LLM": "https://https://docs.aiagentsforce.com//integrations/llms/ai21/", "PipelineAI": "https://https://docs.aiagentsforce.com//integrations/llms/pipelineai/", "Build a Retrieval Augmented Generation (RAG) App": "https://https://docs.aiagentsforce.com//tutorials/rag/", "Build a Local RAG Application": "https://https://docs.aiagentsforce.com//tutorials/local_rag/", "Summarize Text": "https://https://docs.aiagentsforce.com//tutorials/summarization/", "Build a Question/Answering system over SQL data": "https://https://docs.aiagentsforce.com//tutorials/sql_qa/", "Build a Simple LLM Application with LCEL": "https://https://docs.aiagentsforce.com//tutorials/llm_chain/"}, "SimpleJsonOutputParser": {"Conceptual guide": "https://https://docs.aiagentsforce.com//concepts/", "How to use output parsers to parse an LLM response into structured format": "https://https://docs.aiagentsforce.com//how_to/output_parser_structured/"}, "BaseChatModel": {"Contribute Integrations": "https://https://docs.aiagentsforce.com//contributing/how_to/integrations/", "How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/"}, "deprecated": {"Contribute Integrations": "https://https://docs.aiagentsforce.com//contributing/how_to/integrations/"}, "UnstructuredMarkdownLoader": {"langchain": "https://https://docs.aiagentsforce.com//changes/changelog/langchain/", "How to load Markdown": "https://https://docs.aiagentsforce.com//how_to/document_loader_markdown/", "Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "Apache Doris": "https://https://docs.aiagentsforce.com//integrations/vectorstores/apache_doris/", "StarRocks": "https://https://docs.aiagentsforce.com//integrations/vectorstores/starrocks/", "UnstructuredMarkdownLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/unstructured_markdown/"}, "Document": {"# Example": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_rerank_docs_chain/", "# Basic example (short documents)": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_reduce_chain/", "How to handle long text when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_long_text/", "How to create a custom Document Loader": "https://https://docs.aiagentsforce.com//how_to/document_loader_custom/", "How to summarize text through iterative refinement": "https://https://docs.aiagentsforce.com//how_to/summarize_refine/", "How to summarize text through parallelization": "https://https://docs.aiagentsforce.com//how_to/summarize_map_reduce/", "How to use the AI Agents Force indexing API": "https://https://docs.aiagentsforce.com//how_to/indexing/", "How to convert Runnables as Tools": "https://https://docs.aiagentsforce.com//how_to/convert_runnable_to_tool/", "How to retrieve using multiple vectors per document": "https://https://docs.aiagentsforce.com//how_to/multi_vector/", "How to create a custom Retriever": "https://https://docs.aiagentsforce.com//how_to/custom_retriever/", "How to construct knowledge graphs": "https://https://docs.aiagentsforce.com//how_to/graph_constructing/", "How to use a time-weighted vector store retriever": "https://https://docs.aiagentsforce.com//how_to/time_weighted_vectorstore/", "How to get a RAG application to add citations": "https://https://docs.aiagentsforce.com//how_to/qa_citations/", "How to load Markdown": "https://https://docs.aiagentsforce.com//how_to/document_loader_markdown/", "How to do \"self-querying\" retrieval": "https://https://docs.aiagentsforce.com//how_to/self_query/", "How to summarize text in a single LLM call": "https://https://docs.aiagentsforce.com//how_to/summarize_stuff/", "How to add scores to retriever results": "https://https://docs.aiagentsforce.com//how_to/add_scores_retriever/", "Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "Oracle AI Vector Search: Generate Embeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/oracleai/", "Kinetica Vectorstore based Retriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/kinetica/", "Fleet AI Context": "https://https://docs.aiagentsforce.com//integrations/retrievers/fleet_context/", "ChatGPT plugin": "https://https://docs.aiagentsforce.com//integrations/retrievers/chatgpt-plugin/", "Cohere RAG": "https://https://docs.aiagentsforce.com//integrations/retrievers/cohere/", "Weaviate Hybrid Search": "https://https://docs.aiagentsforce.com//integrations/retrievers/weaviate-hybrid/", "BM25": "https://https://docs.aiagentsforce.com//integrations/retrievers/bm25/", "Qdrant Sparse Vector": "https://https://docs.aiagentsforce.com//integrations/retrievers/qdrant-sparse/", "ElasticsearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/elasticsearch_retriever/", "TF-IDF": "https://https://docs.aiagentsforce.com//integrations/retrievers/tf_idf/", "Milvus": "https://https://docs.aiagentsforce.com//integrations/vectorstores/milvus/", "PGVector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/pgvector_self_query/", "Weaviate": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/weaviate_self_query/", "Vectara self-querying ": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/vectara_self_query/", "SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sap_hanavector/", "DashVector": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/dashvector/", "Databricks Vector Search": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/databricks_vector_search/", "DingoDB": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/dingo/", "OpenSearch": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/opensearch_self_query/", "Elasticsearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/elasticsearch/", "Chroma": "https://https://docs.aiagentsforce.com//integrations/vectorstores/chroma/", "Tencent Cloud VectorDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tencentvectordb/", "Timescale Vector (Postgres) ": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/timescalevector_self_query/", "Astra DB (Cassandra)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/astradb/", "Pinecone": "https://https://docs.aiagentsforce.com//integrations/vectorstores/pinecone/", "Supabase (Postgres)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/supabase_self_query/", "Redis": "https://https://docs.aiagentsforce.com//integrations/vectorstores/redis/", "MyScale": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/myscale_self_query/", "Deep Lake": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/activeloop_deeplake_self_query/", "MongoDB Atlas": "https://https://docs.aiagentsforce.com//integrations/vectorstores/mongodb_atlas/", "Qdrant": "https://https://docs.aiagentsforce.com//integrations/vectorstores/qdrant/", "Oracle AI Vector Search: Generate Summary": "https://https://docs.aiagentsforce.com//integrations/tools/oracleai/", "Cohere": "https://https://docs.aiagentsforce.com//integrations/providers/cohere/", "Identity-enabled RAG using PebbloRetrievalQA": "https://https://docs.aiagentsforce.com//integrations/providers/pebblo/pebblo_retrieval_qa/", "Kinetica Vectorstore API": "https://https://docs.aiagentsforce.com//integrations/vectorstores/kinetica/", "Yellowbrick": "https://https://docs.aiagentsforce.com//integrations/vectorstores/yellowbrick/", "PGVector": "https://https://docs.aiagentsforce.com//integrations/vectorstores/pgvector/", "SingleStoreDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/singlestoredb/", "Annoy": "https://https://docs.aiagentsforce.com//integrations/vectorstores/annoy/", "Couchbase ": "https://https://docs.aiagentsforce.com//integrations/vectorstores/couchbase/", "Oracle AI Vector Search: Vector Store": "https://https://docs.aiagentsforce.com//integrations/vectorstores/oracle/", "Neo4j Vector Index": "https://https://docs.aiagentsforce.com//integrations/vectorstores/neo4jvector/", "Lantern": "https://https://docs.aiagentsforce.com//integrations/vectorstores/lantern/", "Google Firestore (Native Mode)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/google_firestore/", "ClickHouse": "https://https://docs.aiagentsforce.com//integrations/vectorstores/clickhouse/", "Astra DB Vector Store": "https://https://docs.aiagentsforce.com//integrations/vectorstores/astradb/", "Faiss (Async)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/faiss_async/", "Apache Cassandra": "https://https://docs.aiagentsforce.com//integrations/vectorstores/cassandra/", "PGVecto.rs": "https://https://docs.aiagentsforce.com//integrations/vectorstores/pgvecto_rs/", "Postgres Embedding": "https://https://docs.aiagentsforce.com//integrations/vectorstores/pgembedding/", "Timescale Vector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/timescalevector/", "Faiss": "https://https://docs.aiagentsforce.com//integrations/vectorstores/faiss/", "Nuclia": "https://https://docs.aiagentsforce.com//integrations/document_transformers/nuclia_transformer/", "AI21SemanticTextSplitter": "https://https://docs.aiagentsforce.com//integrations/document_transformers/ai21_semantic_text_splitter/", "Google Cloud Vertex AI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/google_cloud_vertexai_rerank/", "OpenAI metadata tagger": "https://https://docs.aiagentsforce.com//integrations/document_transformers/openai_metadata_tagger/", "Doctran: extract properties": "https://https://docs.aiagentsforce.com//integrations/document_transformers/doctran_extract_properties/", "Google Translate": "https://https://docs.aiagentsforce.com//integrations/document_transformers/google_translate/", "Doctran: interrogate documents": "https://https://docs.aiagentsforce.com//integrations/document_transformers/doctran_interrogate_document/", "Doctran: language translation": "https://https://docs.aiagentsforce.com//integrations/document_transformers/doctran_translate_document/", "TensorFlow Datasets": "https://https://docs.aiagentsforce.com//integrations/document_loaders/tensorflow_datasets/", "Google Cloud SQL for MySQL": "https://https://docs.aiagentsforce.com//integrations/document_loaders/google_cloud_sql_mysql/", "Airbyte Salesforce (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_salesforce/", "Airbyte CDK (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_cdk/", "Airbyte Stripe (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_stripe/", "Copy Paste": "https://https://docs.aiagentsforce.com//integrations/document_loaders/copypaste/", "Airbyte Typeform (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_typeform/", "Apify Dataset": "https://https://docs.aiagentsforce.com//integrations/document_loaders/apify_dataset/", "Google Firestore in Datastore Mode": "https://https://docs.aiagentsforce.com//integrations/document_loaders/google_datastore/", "Oracle AI Vector Search: Document Processing": "https://https://docs.aiagentsforce.com//integrations/document_loaders/oracleai/", "Docugami": "https://https://docs.aiagentsforce.com//integrations/document_loaders/docugami/", "Airbyte Hubspot (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_hubspot/", "Airbyte Gong (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_gong/", "Google Memorystore for Redis": "https://https://docs.aiagentsforce.com//integrations/document_loaders/google_memorystore_redis/", "Google Bigtable": "https://https://docs.aiagentsforce.com//integrations/document_loaders/google_bigtable/", "Google Cloud SQL for SQL server": "https://https://docs.aiagentsforce.com//integrations/document_loaders/google_cloud_sql_mssql/", "Google El Carro for Oracle Workloads": "https://https://docs.aiagentsforce.com//integrations/document_loaders/google_el_carro/", "Airbyte Shopify (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_shopify/", "Airbyte Zendesk Support (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_zendesk_support/", "Google Spanner": "https://https://docs.aiagentsforce.com//integrations/document_loaders/google_spanner/", "PDFMiner": "https://https://docs.aiagentsforce.com//integrations/document_loaders/pdfminer/", "Azure Cosmos DB for Apache Gremlin": "https://https://docs.aiagentsforce.com//integrations/graphs/azure_cosmosdb_gremlin/", "SageMakerEndpoint": "https://https://docs.aiagentsforce.com//integrations/llms/sagemaker/", "self-query-qdrant": "https://https://docs.aiagentsforce.com//templates/self-query-qdrant/", "Summarize Text": "https://https://docs.aiagentsforce.com//tutorials/summarization/", "Build a Query Analysis System": "https://https://docs.aiagentsforce.com//tutorials/query_analysis/", "Vector stores and retrievers": "https://https://docs.aiagentsforce.com//tutorials/retrievers/"}, "LLMChain": {"# Example": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_rerank_docs_chain/", "# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/llm_chain/", "# Basic example (short documents)": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_reduce_chain/", "Clarifai": "https://https://docs.aiagentsforce.com//integrations/llms/clarifai/", "RePhraseQuery": "https://https://docs.aiagentsforce.com//integrations/retrievers/re_phrase/", "Memorize": "https://https://docs.aiagentsforce.com//integrations/tools/memorize/", "Zapier Natural Language Actions": "https://https://docs.aiagentsforce.com//integrations/tools/zapier/", "Reddit Search ": "https://https://docs.aiagentsforce.com//integrations/tools/reddit_search/", "Dall-E Image Generator": "https://https://docs.aiagentsforce.com//integrations/tools/dalle_image_generator/", "Mot\u00f6rhead": "https://https://docs.aiagentsforce.com//integrations/memory/motorhead_memory/", "Llama2Chat": "https://https://docs.aiagentsforce.com//integrations/chat/llama2_chat/", "Context": "https://https://docs.aiagentsforce.com//integrations/callbacks/context/", "SageMaker Tracking": "https://https://docs.aiagentsforce.com//integrations/callbacks/sagemaker_tracking/", "Argilla": "https://https://docs.aiagentsforce.com//integrations/callbacks/argilla/", "Comet": "https://https://docs.aiagentsforce.com//integrations/providers/comet_tracking/", "Aim": "https://https://docs.aiagentsforce.com//integrations/providers/aim_tracking/", "Weights & Biases": "https://https://docs.aiagentsforce.com//integrations/providers/wandb_tracking/", "MLflow Deployments for LLMs": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow/", "MLflow AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow_ai_gateway/", "Rebuff": "https://https://docs.aiagentsforce.com//integrations/providers/rebuff/", "Prediction Guard": "https://https://docs.aiagentsforce.com//integrations/llms/predictionguard/", "Flyte": "https://https://docs.aiagentsforce.com//integrations/providers/flyte/", "Ray Serve": "https://https://docs.aiagentsforce.com//integrations/providers/ray_serve/", "Javelin AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/javelin_ai_gateway/", "Yellowbrick": "https://https://docs.aiagentsforce.com//integrations/vectorstores/yellowbrick/", "Google Cloud Vertex AI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/google_cloud_vertexai_rerank/", "Baseten": "https://https://docs.aiagentsforce.com//integrations/llms/baseten/", "StochasticAI": "https://https://docs.aiagentsforce.com//integrations/llms/stochasticai/", "Solar": "https://https://docs.aiagentsforce.com//integrations/llms/solar/", "Bittensor": "https://https://docs.aiagentsforce.com//integrations/llms/bittensor/", "IPEX-LLM": "https://https://docs.aiagentsforce.com//integrations/llms/ipex_llm/", "Banana": "https://https://docs.aiagentsforce.com//integrations/llms/banana/", "Alibaba Cloud PAI EAS": "https://https://docs.aiagentsforce.com//integrations/llms/alibabacloud_pai_eas_endpoint/", "OpenLLM": "https://https://docs.aiagentsforce.com//integrations/llms/openllm/", "OctoAI": "https://https://docs.aiagentsforce.com//integrations/llms/octoai/", "Writer": "https://https://docs.aiagentsforce.com//integrations/llms/writer/", "Modal": "https://https://docs.aiagentsforce.com//integrations/llms/modal/", "TextGen": "https://https://docs.aiagentsforce.com//integrations/llms/textgen/", "Xorbits Inference (Xinference)": "https://https://docs.aiagentsforce.com//integrations/llms/xinference/", "Nebula (Symbl.ai)": "https://https://docs.aiagentsforce.com//integrations/llms/symblai_nebula/", "DeepInfra": "https://https://docs.aiagentsforce.com//integrations/llms/deepinfra/", "NLP Cloud": "https://https://docs.aiagentsforce.com//integrations/llms/nlpcloud/", "ForefrontAI": "https://https://docs.aiagentsforce.com//integrations/llms/forefrontai/", "MosaicML": "https://https://docs.aiagentsforce.com//integrations/llms/mosaicml/", "CerebriumAI": "https://https://docs.aiagentsforce.com//integrations/llms/cerebriumai/", "Predibase": "https://https://docs.aiagentsforce.com//integrations/llms/predibase/", "GigaChat": "https://https://docs.aiagentsforce.com//integrations/llms/gigachat/", "OpaquePrompts": "https://https://docs.aiagentsforce.com//integrations/llms/opaqueprompts/", "Aphrodite Engine": "https://https://docs.aiagentsforce.com//integrations/llms/aphrodite/", "Eden AI": "https://https://docs.aiagentsforce.com//integrations/llms/edenai/", "Javelin AI Gateway Tutorial": "https://https://docs.aiagentsforce.com//integrations/llms/javelin/", "C Transformers": "https://https://docs.aiagentsforce.com//integrations/llms/ctransformers/", "vLLM": "https://https://docs.aiagentsforce.com//integrations/llms/vllm/", "Azure ML": "https://https://docs.aiagentsforce.com//integrations/llms/azure_ml/", "Minimax": "https://https://docs.aiagentsforce.com//integrations/llms/minimax/", "Yuan2.0": "https://https://docs.aiagentsforce.com//integrations/llms/yuan2/", "Huggingface Endpoints": "https://https://docs.aiagentsforce.com//integrations/llms/huggingface_endpoint/", "Runhouse": "https://https://docs.aiagentsforce.com//integrations/llms/runhouse/", "Anyscale": "https://https://docs.aiagentsforce.com//integrations/llms/anyscale/", "YandexGPT": "https://https://docs.aiagentsforce.com//integrations/llms/yandex/", "GooseAI": "https://https://docs.aiagentsforce.com//integrations/llms/gooseai/", "OpenLM": "https://https://docs.aiagentsforce.com//integrations/llms/openlm/", "Cloudflare Workers AI": "https://https://docs.aiagentsforce.com//integrations/llms/cloudflare_workersai/", "CTranslate2": "https://https://docs.aiagentsforce.com//integrations/llms/ctranslate2/", "ChatGLM": "https://https://docs.aiagentsforce.com//integrations/llms/chatglm/", "Gradient": "https://https://docs.aiagentsforce.com//integrations/llms/gradient/", "Petals": "https://https://docs.aiagentsforce.com//integrations/llms/petals/", "Replicate": "https://https://docs.aiagentsforce.com//integrations/llms/replicate/", "Summarize Text": "https://https://docs.aiagentsforce.com//tutorials/summarization/"}, "StuffDocumentsChain": {"# Example": "https://https://docs.aiagentsforce.com//versions/migrating_chains/stuff_docs_chain/", "# Basic example (short documents)": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_reduce_chain/"}, "create_stuff_documents_chain": {"# Example": "https://https://docs.aiagentsforce.com//versions/migrating_chains/stuff_docs_chain/", "Load docs": "https://https://docs.aiagentsforce.com//versions/migrating_chains/retrieval_qa/", "How to reorder retrieved results to mitigate the \"lost in the middle\" effect": "https://https://docs.aiagentsforce.com//how_to/long_context_reorder/", "How to stream results from your RAG application": "https://https://docs.aiagentsforce.com//how_to/qa_streaming/", "How to get your RAG application to return sources": "https://https://docs.aiagentsforce.com//how_to/qa_sources/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "How to add retrieval to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_retrieval/", "How to summarize text in a single LLM call": "https://https://docs.aiagentsforce.com//how_to/summarize_stuff/", "RAGatouille": "https://https://docs.aiagentsforce.com//integrations/retrievers/ragatouille/", "ApertureDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/aperturedb/", "Jina Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/jina_rerank/", "Image captions": "https://https://docs.aiagentsforce.com//integrations/document_loaders/image_captions/", "Build a Retrieval Augmented Generation (RAG) App": "https://https://docs.aiagentsforce.com//tutorials/rag/", "Summarize Text": "https://https://docs.aiagentsforce.com//tutorials/summarization/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/", "Build a PDF ingestion and Question/Answering system": "https://https://docs.aiagentsforce.com//tutorials/pdf_qa/"}, "LLMMathChain": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/llm_math_chain/"}, "BaseMessage": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/llm_math_chain/", "How to trim messages": "https://https://docs.aiagentsforce.com//how_to/trim_messages/", "How to use reference examples when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_examples/", "How to propagate callbacks  constructor": "https://https://docs.aiagentsforce.com//how_to/callbacks_constructor/", "How to attach callbacks to a runnable": "https://https://docs.aiagentsforce.com//how_to/callbacks_attach/", "How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/", "How to pass callbacks in at runtime": "https://https://docs.aiagentsforce.com//how_to/callbacks_runtime/", "How to add examples to the prompt for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_few_shot/", "WeChat": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/wechat/", "Discord": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/discord/", "Chat Bot Feedback Template": "https://https://docs.aiagentsforce.com//templates/chat-bot-feedback/"}, "RunnableConfig": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/multi_prompt_chain/", "# Example": "https://https://docs.aiagentsforce.com//versions/migrating_chains/refine_docs_chain/", "How to access the RunnableConfig from a tool": "https://https://docs.aiagentsforce.com//how_to/tool_configure/", "How to summarize text through iterative refinement": "https://https://docs.aiagentsforce.com//how_to/summarize_refine/", "How to handle tool errors": "https://https://docs.aiagentsforce.com//how_to/tools_error/", "How to stream events from a tool": "https://https://docs.aiagentsforce.com//how_to/tool_stream_events/", "How to run custom functions": "https://https://docs.aiagentsforce.com//how_to/functions/", "How to add ad-hoc tool calling capability to LLMs and Chat Models": "https://https://docs.aiagentsforce.com//how_to/tools_prompting/", "AI Agents Force Expression Language Cheatsheet": "https://https://docs.aiagentsforce.com//how_to/lcel_cheatsheet/", "How to dispatch custom callback events": "https://https://docs.aiagentsforce.com//how_to/callbacks_custom_events/", "How to pass runtime secrets to runnables": "https://https://docs.aiagentsforce.com//how_to/runnable_runtime_secrets/", "Tavily Search": "https://https://docs.aiagentsforce.com//integrations/tools/tavily_search/"}, "tool": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/llm_math_chain/", "How to disable parallel tool calling": "https://https://docs.aiagentsforce.com//how_to/tool_calling_parallel/", "How to use tools in a chain": "https://https://docs.aiagentsforce.com//how_to/tools_chain/", "How to access the RunnableConfig from a tool": "https://https://docs.aiagentsforce.com//how_to/tool_configure/", "How to do tool/function calling": "https://https://docs.aiagentsforce.com//how_to/function_calling/", "How to pass run time values to tools": "https://https://docs.aiagentsforce.com//how_to/tool_runtime/", "How to add a human-in-the-loop for tools": "https://https://docs.aiagentsforce.com//how_to/tools_human/", "How to create tools": "https://https://docs.aiagentsforce.com//how_to/custom_tools/", "How to pass multimodal data directly to models": "https://https://docs.aiagentsforce.com//how_to/multimodal_inputs/", "How to force models to call a tool": "https://https://docs.aiagentsforce.com//how_to/tool_choice/", "How to handle tool errors": "https://https://docs.aiagentsforce.com//how_to/tools_error/", "How to stream events from a tool": "https://https://docs.aiagentsforce.com//how_to/tool_stream_events/", "How to stream runnables": "https://https://docs.aiagentsforce.com//how_to/streaming/", "How to pass tool outputs to chat models": "https://https://docs.aiagentsforce.com//how_to/tool_results_pass_to_model/", "How to add ad-hoc tool calling capability to LLMs and Chat Models": "https://https://docs.aiagentsforce.com//how_to/tools_prompting/", "How to return artifacts from a tool": "https://https://docs.aiagentsforce.com//how_to/tool_artifacts/", "How to migrate from legacy AI Agents Force agents to LangGraph": "https://https://docs.aiagentsforce.com//how_to/migrate_agent/", "How to stream tool calls": "https://https://docs.aiagentsforce.com//how_to/tool_streaming/", "How to pass runtime secrets to runnables": "https://https://docs.aiagentsforce.com//how_to/runnable_runtime_secrets/", "How to use few-shot prompting with tool calling": "https://https://docs.aiagentsforce.com//how_to/tools_few_shot/", "FinancialDatasets Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/financial_datasets/", "Exa Search": "https://https://docs.aiagentsforce.com//integrations/tools/exa_search/", "DeepInfra": "https://https://docs.aiagentsforce.com//integrations/chat/deepinfra/", "ChatOllama": "https://https://docs.aiagentsforce.com//integrations/chat/ollama/", "Llama.cpp": "https://https://docs.aiagentsforce.com//integrations/chat/llamacpp/", "Cohere": "https://https://docs.aiagentsforce.com//integrations/providers/cohere/", "Eden AI": "https://https://docs.aiagentsforce.com//integrations/chat/edenai/", "ChatTongyi": "https://https://docs.aiagentsforce.com//integrations/chat/tongyi/", "ChatPremAI": "https://https://docs.aiagentsforce.com//integrations/chat/premai/", "ChatNVIDIA": "https://https://docs.aiagentsforce.com//integrations/chat/nvidia_ai_endpoints/", "LLMonitor": "https://https://docs.aiagentsforce.com//integrations/callbacks/llmonitor/", "PremAI": "https://https://docs.aiagentsforce.com//integrations/providers/premai/", "Log, Trace, and Monitor": "https://https://docs.aiagentsforce.com//integrations/providers/portkey/logging_tracing_portkey/", "Portkey": "https://https://docs.aiagentsforce.com//integrations/providers/portkey/index/", "JSONFormer": "https://https://docs.aiagentsforce.com//integrations/llms/jsonformer_experimental/"}, "MultiPromptChain": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/multi_prompt_chain/"}, "ConversationChain": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/conversation_chain/"}, "ConversationBufferMemory": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/conversation_chain/", "Memorize": "https://https://docs.aiagentsforce.com//integrations/tools/memorize/", "Gradio": "https://https://docs.aiagentsforce.com//integrations/tools/gradio_tools/", "SceneXplain": "https://https://docs.aiagentsforce.com//integrations/tools/sceneXplain/", "Reddit Search ": "https://https://docs.aiagentsforce.com//integrations/tools/reddit_search/", "Xata": "https://https://docs.aiagentsforce.com//integrations/memory/xata_chat_message_history/", "Llama2Chat": "https://https://docs.aiagentsforce.com//integrations/chat/llama2_chat/", "SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sap_hanavector/", "Bittensor": "https://https://docs.aiagentsforce.com//integrations/llms/bittensor/"}, "InMemoryChatMessageHistory": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/conversation_chain/", "How to trim messages": "https://https://docs.aiagentsforce.com//how_to/trim_messages/", "How to migrate from legacy AI Agents Force agents to LangGraph": "https://https://docs.aiagentsforce.com//how_to/migrate_agent/", "ChatNVIDIA": "https://https://docs.aiagentsforce.com//integrations/chat/nvidia_ai_endpoints/", "Build a Chatbot": "https://https://docs.aiagentsforce.com//tutorials/chatbot/"}, "RunnableWithMessageHistory": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/conversation_chain/", "Build an Agent with AgentExecutor (Legacy)": "https://https://docs.aiagentsforce.com//how_to/agent_executor/", "How to trim messages": "https://https://docs.aiagentsforce.com//how_to/trim_messages/", "How to add tools to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_tools/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "How to add message history": "https://https://docs.aiagentsforce.com//how_to/message_history/", "How to add memory to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_memory/", "How to migrate from legacy AI Agents Force agents to LangGraph": "https://https://docs.aiagentsforce.com//how_to/migrate_agent/", "Redis": "https://https://docs.aiagentsforce.com//integrations/memory/redis_chat_message_history/", "Google SQL for MySQL": "https://https://docs.aiagentsforce.com//integrations/memory/google_sql_mysql/", "Google AlloyDB for PostgreSQL": "https://https://docs.aiagentsforce.com//integrations/memory/google_alloydb/", "ZepCloudChatMessageHistory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_cloud_chat_message_history/", "AWS DynamoDB": "https://https://docs.aiagentsforce.com//integrations/memory/aws_dynamodb/", "Couchbase": "https://https://docs.aiagentsforce.com//integrations/memory/couchbase_chat_message_history/", "MongoDB": "https://https://docs.aiagentsforce.com//integrations/memory/mongodb_chat_message_history/", "SQL (SQLAlchemy)": "https://https://docs.aiagentsforce.com//integrations/memory/sql_chat_message_history/", "Streamlit": "https://https://docs.aiagentsforce.com//integrations/memory/streamlit_chat_message_history/", "Google El Carro Oracle": "https://https://docs.aiagentsforce.com//integrations/memory/google_el_carro/", "SQLite": "https://https://docs.aiagentsforce.com//integrations/memory/sqlite/", "Google SQL for PostgreSQL": "https://https://docs.aiagentsforce.com//integrations/memory/google_sql_pg/", "Google SQL for SQL Server": "https://https://docs.aiagentsforce.com//integrations/memory/google_sql_mssql/", "TiDB": "https://https://docs.aiagentsforce.com//integrations/memory/tidb_chat_message_history/", "ChatNVIDIA": "https://https://docs.aiagentsforce.com//integrations/chat/nvidia_ai_endpoints/", "Build a Chatbot": "https://https://docs.aiagentsforce.com//tutorials/chatbot/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/"}, "BaseChatMessageHistory": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/conversation_chain/", "Build an Agent with AgentExecutor (Legacy)": "https://https://docs.aiagentsforce.com//how_to/agent_executor/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "Build a Chatbot": "https://https://docs.aiagentsforce.com//tutorials/chatbot/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/"}, "ConstitutionalChain": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/constitutional_chain/"}, "ConstitutionalPrinciple": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/constitutional_chain/"}, "OpenAI": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/constitutional_chain/", "# Example": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_rerank_docs_chain/", "How to use output parsers to parse an LLM response into structured format": "https://https://docs.aiagentsforce.com//how_to/output_parser_structured/", "How to reorder retrieved results to mitigate the \"lost in the middle\" effect": "https://https://docs.aiagentsforce.com//how_to/long_context_reorder/", "How to add fallbacks to a runnable": "https://https://docs.aiagentsforce.com//how_to/fallbacks/", "How to do retrieval with contextual compression": "https://https://docs.aiagentsforce.com//how_to/contextual_compression/", "How to retry when a parsing error occurs": "https://https://docs.aiagentsforce.com//how_to/output_parser_retry/", "How to stream responses from an LLM": "https://https://docs.aiagentsforce.com//how_to/streaming_llm/", "How to cache LLM responses": "https://https://docs.aiagentsforce.com//how_to/llm_caching/", "How to track token usage for LLMs": "https://https://docs.aiagentsforce.com//how_to/llm_token_usage_tracking/", "Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "Milvus": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/milvus_self_query/", "PGVector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/pgvector_self_query/", "Weaviate": "https://https://docs.aiagentsforce.com//integrations/vectorstores/weaviate/", "Databricks Vector Search": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/databricks_vector_search/", "DingoDB": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/dingo/", "OpenSearch": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/opensearch_self_query/", "Elasticsearch": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/elasticsearch_self_query/", "Chroma": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/chroma_self_query/", "Timescale Vector (Postgres) ": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/timescalevector_self_query/", "Astra DB (Cassandra)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/astradb/", "Pinecone": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/pinecone/", "Supabase (Postgres)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/supabase_self_query/", "Redis": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/redis_self_query/", "Deep Lake": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/activeloop_deeplake_self_query/", "MongoDB Atlas": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/mongodb_atlas/", "Qdrant": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/qdrant_self_query/", "OpenAI": "https://https://docs.aiagentsforce.com//integrations/llms/openai/", "Jira Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/jira/", "Google Jobs": "https://https://docs.aiagentsforce.com//integrations/tools/google_jobs/", "Google Serper": "https://https://docs.aiagentsforce.com//integrations/tools/google_serper/", "Azure Cognitive Services Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/azure_cognitive_services/", "Human as a tool": "https://https://docs.aiagentsforce.com//integrations/tools/human_tools/", "Natural Language API Toolkits": "https://https://docs.aiagentsforce.com//integrations/tools/openapi_nla/", "Steam Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/steam/", "JSON Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/json/", "Google Finance": "https://https://docs.aiagentsforce.com//integrations/tools/google_finance/", "ClickUp Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/clickup/", "AWS Lambda": "https://https://docs.aiagentsforce.com//integrations/tools/awslambda/", "Google Drive": "https://https://docs.aiagentsforce.com//integrations/tools/google_drive/", "OpenWeatherMap": "https://https://docs.aiagentsforce.com//integrations/tools/openweathermap/", "Eleven Labs Text2Speech": "https://https://docs.aiagentsforce.com//integrations/tools/eleven_labs_tts/", "Office365 Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/office365/", "Pandas Dataframe": "https://https://docs.aiagentsforce.com//integrations/tools/pandas/", "Zapier Natural Language Actions": "https://https://docs.aiagentsforce.com//integrations/tools/zapier/", "Lemon Agent": "https://https://docs.aiagentsforce.com//integrations/tools/lemonai/", "NASA Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/nasa/", "GraphQL": "https://https://docs.aiagentsforce.com//integrations/tools/graphql/", "SearchApi": "https://https://docs.aiagentsforce.com//integrations/providers/searchapi/", "Gradio": "https://https://docs.aiagentsforce.com//integrations/tools/gradio_tools/", "SceneXplain": "https://https://docs.aiagentsforce.com//integrations/tools/sceneXplain/", "Azure AI Services Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/azure_ai_services/", "OpenAPI Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/openapi/", "Dall-E Image Generator": "https://https://docs.aiagentsforce.com//integrations/tools/dalle_image_generator/", "Gitlab Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/gitlab/", "Ionic Shopping Tool": "https://https://docs.aiagentsforce.com//integrations/tools/ionic_shopping/", "Zep Open Source Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory/", "Mot\u00f6rhead": "https://https://docs.aiagentsforce.com//integrations/memory/motorhead_memory/", "Zep Cloud Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory_cloud/", "Confident": "https://https://docs.aiagentsforce.com//integrations/callbacks/confident/", "LLMonitor": "https://https://docs.aiagentsforce.com//integrations/callbacks/llmonitor/", "Fiddler": "https://https://docs.aiagentsforce.com//integrations/callbacks/fiddler/", "SageMaker Tracking": "https://https://docs.aiagentsforce.com//integrations/callbacks/sagemaker_tracking/", "Label Studio": "https://https://docs.aiagentsforce.com//integrations/callbacks/labelstudio/", "Comet Tracing": "https://https://docs.aiagentsforce.com//integrations/callbacks/comet_tracing/", "Argilla": "https://https://docs.aiagentsforce.com//integrations/callbacks/argilla/", "PromptLayer": "https://https://docs.aiagentsforce.com//integrations/callbacks/promptlayer/", "Streamlit": "https://https://docs.aiagentsforce.com//integrations/callbacks/streamlit/", "Trubrics": "https://https://docs.aiagentsforce.com//integrations/callbacks/trubrics/", "Infino": "https://https://docs.aiagentsforce.com//integrations/callbacks/infino/", "DSPy": "https://https://docs.aiagentsforce.com//integrations/providers/dspy/", "Comet": "https://https://docs.aiagentsforce.com//integrations/providers/comet_tracking/", "Aim": "https://https://docs.aiagentsforce.com//integrations/providers/aim_tracking/", "Weights & Biases": "https://https://docs.aiagentsforce.com//integrations/providers/wandb_tracking/", "Log10": "https://https://docs.aiagentsforce.com//integrations/providers/log10/", "AI Agents Force Decorators \u2728": "https://https://docs.aiagentsforce.com//integrations/providers/langchain_decorators/", "Rebuff": "https://https://docs.aiagentsforce.com//integrations/providers/rebuff/", "Serper - Google Search API": "https://https://docs.aiagentsforce.com//integrations/providers/google_serper/", "Helicone": "https://https://docs.aiagentsforce.com//integrations/providers/helicone/", "Shale Protocol": "https://https://docs.aiagentsforce.com//integrations/providers/shaleprotocol/", "WhyLabs": "https://https://docs.aiagentsforce.com//integrations/providers/whylabs_profiling/", "WandB Tracing": "https://https://docs.aiagentsforce.com//integrations/providers/wandb_tracing/", "ClearML": "https://https://docs.aiagentsforce.com//integrations/providers/clearml_tracking/", "Ray Serve": "https://https://docs.aiagentsforce.com//integrations/providers/ray_serve/", "Identity-enabled RAG using PebbloRetrievalQA": "https://https://docs.aiagentsforce.com//integrations/providers/pebblo/pebblo_retrieval_qa/", "Apache Doris": "https://https://docs.aiagentsforce.com//integrations/vectorstores/apache_doris/", "Jaguar Vector Database": "https://https://docs.aiagentsforce.com//integrations/vectorstores/jaguar/", "StarRocks": "https://https://docs.aiagentsforce.com//integrations/vectorstores/starrocks/", "Marqo": "https://https://docs.aiagentsforce.com//integrations/vectorstores/marqo/", "Timescale Vector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/timescalevector/", "Amazon Document DB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/documentdb/", "VoyageAI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/voyageai-reranker/", "Apify Dataset": "https://https://docs.aiagentsforce.com//integrations/document_loaders/apify_dataset/", "Psychic": "https://https://docs.aiagentsforce.com//integrations/document_loaders/psychic/", "Docugami": "https://https://docs.aiagentsforce.com//integrations/document_loaders/docugami/", "Amazon Textract ": "https://https://docs.aiagentsforce.com//integrations/document_loaders/amazon_textract/", "NetworkX": "https://https://docs.aiagentsforce.com//integrations/graphs/networkx/", "OpaquePrompts": "https://https://docs.aiagentsforce.com//integrations/llms/opaqueprompts/", "Layerup Security": "https://https://docs.aiagentsforce.com//integrations/llms/layerup_security/", "Generate Synthetic Data": "https://https://docs.aiagentsforce.com//tutorials/data_generation/"}, "CRITIQUE_PROMPT": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/constitutional_chain/"}, "REVISION_PROMPT": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/constitutional_chain/"}, "WebBaseLoader": {"Load docs": "https://https://docs.aiagentsforce.com//versions/migrating_chains/retrieval_qa/", "# Basic example (short documents)": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_reduce_chain/", "Build an Agent with AgentExecutor (Legacy)": "https://https://docs.aiagentsforce.com//how_to/agent_executor/", "How to stream results from your RAG application": "https://https://docs.aiagentsforce.com//how_to/qa_streaming/", "How to get your RAG application to return sources": "https://https://docs.aiagentsforce.com//how_to/qa_sources/", "How to summarize text through parallelization": "https://https://docs.aiagentsforce.com//how_to/summarize_map_reduce/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "How to add retrieval to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_retrieval/", "How to use the MultiQueryRetriever": "https://https://docs.aiagentsforce.com//how_to/MultiQueryRetriever/", "RePhraseQuery": "https://https://docs.aiagentsforce.com//integrations/retrievers/re_phrase/", "Infino": "https://https://docs.aiagentsforce.com//integrations/callbacks/infino/", "ApertureDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/aperturedb/", "Zep Cloud": "https://https://docs.aiagentsforce.com//integrations/vectorstores/zep_cloud/", "Zep": "https://https://docs.aiagentsforce.com//integrations/vectorstores/zep/", "Google Cloud Vertex AI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/google_cloud_vertexai_rerank/", "Merge Documents Loader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/merge_doc/", "WebBaseLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/web_base/", "Build a Retrieval Augmented Generation (RAG) App": "https://https://docs.aiagentsforce.com//tutorials/rag/", "Build a Local RAG Application": "https://https://docs.aiagentsforce.com//tutorials/local_rag/", "Summarize Text": "https://https://docs.aiagentsforce.com//tutorials/summarization/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/"}, "FAISS": {"Load docs": "https://https://docs.aiagentsforce.com//versions/migrating_chains/retrieval_qa/", "Build an Agent with AgentExecutor (Legacy)": "https://https://docs.aiagentsforce.com//how_to/agent_executor/", "How to handle long text when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_long_text/", "How to load PDFs": "https://https://docs.aiagentsforce.com//how_to/document_loader_pdf/", "How to better prompt when doing SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_prompting/", "How to add values to a chain's state": "https://https://docs.aiagentsforce.com//how_to/assign/", "How to inspect runnables": "https://https://docs.aiagentsforce.com//how_to/inspect/", "How to deal with large databases when doing SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_large_db/", "How to stream runnables": "https://https://docs.aiagentsforce.com//how_to/streaming/", "How to invoke runnables in parallel": "https://https://docs.aiagentsforce.com//how_to/parallel/", "How to pass through arguments from one step to the next": "https://https://docs.aiagentsforce.com//how_to/passthrough/", "How to do retrieval with contextual compression": "https://https://docs.aiagentsforce.com//how_to/contextual_compression/", "How to use a time-weighted vector store retriever": "https://https://docs.aiagentsforce.com//how_to/time_weighted_vectorstore/", "How to create and query vector stores": "https://https://docs.aiagentsforce.com//how_to/vectorstores/", "How to use a vectorstore as a retriever": "https://https://docs.aiagentsforce.com//how_to/vectorstore_retriever/", "Caching": "https://https://docs.aiagentsforce.com//how_to/caching_embeddings/", "How to combine results from multiple retrievers": "https://https://docs.aiagentsforce.com//how_to/ensemble_retriever/", "How to select examples by maximal marginal relevance (MMR)": "https://https://docs.aiagentsforce.com//how_to/example_selectors_mmr/", "NVIDIA NIMs ": "https://https://docs.aiagentsforce.com//integrations/text_embedding/nvidia_ai_endpoints/", "Fleet AI Context": "https://https://docs.aiagentsforce.com//integrations/retrievers/fleet_context/", "LLMLingua Document Compressor": "https://https://docs.aiagentsforce.com//integrations/retrievers/llmlingua/", "Cohere reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/cohere-reranker/", "FlashRank reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/flashrank-reranker/", "UpTrain": "https://https://docs.aiagentsforce.com//integrations/callbacks/uptrain/", "RAGatouille": "https://https://docs.aiagentsforce.com//integrations/providers/ragatouille/", "Facebook - Meta": "https://https://docs.aiagentsforce.com//integrations/providers/facebook/", "Faiss (Async)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/faiss_async/", "Faiss": "https://https://docs.aiagentsforce.com//integrations/vectorstores/faiss/", "VoyageAI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/voyageai-reranker/", "RankLLM Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/rankllm-reranker/", "Volcengine Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/volcengine_rerank/", "OpenVINO Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/openvino_rerank/", "Cross Encoder Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/cross_encoder_reranker/", "Jina Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/jina_rerank/", "DashScope Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/dashscope_rerank/", "YouTube audio": "https://https://docs.aiagentsforce.com//integrations/document_loaders/youtube_audio/", "Build a Question/Answering system over SQL data": "https://https://docs.aiagentsforce.com//tutorials/sql_qa/"}, "OpenAIEmbeddings": {"Load docs": "https://https://docs.aiagentsforce.com//versions/migrating_chains/retrieval_qa/", "Build an Agent with AgentExecutor (Legacy)": "https://https://docs.aiagentsforce.com//how_to/agent_executor/", "How to handle long text when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_long_text/", "How to load PDFs": "https://https://docs.aiagentsforce.com//how_to/document_loader_pdf/", "How to better prompt when doing SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_prompting/", "How to add values to a chain's state": "https://https://docs.aiagentsforce.com//how_to/assign/", "How to route between sub-chains": "https://https://docs.aiagentsforce.com//how_to/routing/", "How to do per-user retrieval": "https://https://docs.aiagentsforce.com//how_to/qa_per_user/", "How to use few shot examples": "https://https://docs.aiagentsforce.com//how_to/few_shot_examples/", "How to inspect runnables": "https://https://docs.aiagentsforce.com//how_to/inspect/", "How to handle cases where no queries are generated": "https://https://docs.aiagentsforce.com//how_to/query_no_queries/", "How to use few shot examples in chat models": "https://https://docs.aiagentsforce.com//how_to/few_shot_examples_chat/", "How to select examples by similarity": "https://https://docs.aiagentsforce.com//how_to/example_selectors_similarity/", "Text embedding models": "https://https://docs.aiagentsforce.com//how_to/embed_text/", "How to deal with large databases when doing SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_large_db/", "How to handle multiple queries when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_queries/", "How to stream results from your RAG application": "https://https://docs.aiagentsforce.com//how_to/qa_streaming/", "How to get your RAG application to return sources": "https://https://docs.aiagentsforce.com//how_to/qa_sources/", "How to use the AI Agents Force indexing API": "https://https://docs.aiagentsforce.com//how_to/indexing/", "How to split text based on semantic similarity": "https://https://docs.aiagentsforce.com//how_to/semantic-chunker/", "How to convert Runnables as Tools": "https://https://docs.aiagentsforce.com//how_to/convert_runnable_to_tool/", "How to stream runnables": "https://https://docs.aiagentsforce.com//how_to/streaming/", "How to invoke runnables in parallel": "https://https://docs.aiagentsforce.com//how_to/parallel/", "How to pass through arguments from one step to the next": "https://https://docs.aiagentsforce.com//how_to/passthrough/", "How to retrieve using multiple vectors per document": "https://https://docs.aiagentsforce.com//how_to/multi_vector/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "How to add retrieval to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_retrieval/", "How to do retrieval with contextual compression": "https://https://docs.aiagentsforce.com//how_to/contextual_compression/", "How to handle multiple retrievers when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_retrievers/", "How to use a time-weighted vector store retriever": "https://https://docs.aiagentsforce.com//how_to/time_weighted_vectorstore/", "How to create and query vector stores": "https://https://docs.aiagentsforce.com//how_to/vectorstores/", "How to get a RAG application to add citations": "https://https://docs.aiagentsforce.com//how_to/qa_citations/", "How to use the MultiQueryRetriever": "https://https://docs.aiagentsforce.com//how_to/MultiQueryRetriever/", "How to best prompt for Graph-RAG": "https://https://docs.aiagentsforce.com//how_to/graph_prompting/", "How to use the Parent Document Retriever": "https://https://docs.aiagentsforce.com//how_to/parent_document_retriever/", "How deal with high cardinality categoricals when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_high_cardinality/", "How to use a vectorstore as a retriever": "https://https://docs.aiagentsforce.com//how_to/vectorstore_retriever/", "Caching": "https://https://docs.aiagentsforce.com//how_to/caching_embeddings/", "How to combine results from multiple retrievers": "https://https://docs.aiagentsforce.com//how_to/ensemble_retriever/", "How to select examples by maximal marginal relevance (MMR)": "https://https://docs.aiagentsforce.com//how_to/example_selectors_mmr/", "How to do \"self-querying\" retrieval": "https://https://docs.aiagentsforce.com//how_to/self_query/", "Hybrid Search": "https://https://docs.aiagentsforce.com//how_to/hybrid/", "How to add scores to retriever results": "https://https://docs.aiagentsforce.com//how_to/add_scores_retriever/", "Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "OpenAIEmbeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/openai/", "AzureAISearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/azure_ai_search/", "RePhraseQuery": "https://https://docs.aiagentsforce.com//integrations/retrievers/re_phrase/", "Kinetica Vectorstore based Retriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/kinetica/", "JaguarDB Vector Database": "https://https://docs.aiagentsforce.com//integrations/retrievers/jaguar/", "Fleet AI Context": "https://https://docs.aiagentsforce.com//integrations/retrievers/fleet_context/", "LLMLingua Document Compressor": "https://https://docs.aiagentsforce.com//integrations/retrievers/llmlingua/", "SingleStoreDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/singlestoredb/", "kNN": "https://https://docs.aiagentsforce.com//integrations/retrievers/knn/", "DocArray": "https://https://docs.aiagentsforce.com//integrations/retrievers/docarray_retriever/", "SVM": "https://https://docs.aiagentsforce.com//integrations/retrievers/svm/", "Pinecone Hybrid Search": "https://https://docs.aiagentsforce.com//integrations/retrievers/pinecone_hybrid_search/", "Activeloop Deep Memory": "https://https://docs.aiagentsforce.com//integrations/retrievers/activeloop/", "Milvus Hybrid Search Retriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/milvus_hybrid_search/", "FlashRank reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/flashrank-reranker/", "LOTR (Merger Retriever)": "https://https://docs.aiagentsforce.com//integrations/retrievers/merger_retriever/", "Milvus": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/milvus_self_query/", "PGVector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/pgvector_self_query/", "Weaviate": "https://https://docs.aiagentsforce.com//integrations/vectorstores/weaviate/", "SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sap_hanavector/", "Databricks Vector Search": "https://https://docs.aiagentsforce.com//integrations/vectorstores/databricks_vector_search/", "DingoDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/dingo/", "OpenSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/opensearch/", "Elasticsearch": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/elasticsearch_self_query/", "Chroma": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/chroma_self_query/", "Timescale Vector (Postgres) ": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/timescalevector_self_query/", "Astra DB (Cassandra)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/astradb/", "Pinecone": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/pinecone/", "Supabase (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/supabase/", "Redis": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/redis_self_query/", "MyScale": "https://https://docs.aiagentsforce.com//integrations/vectorstores/myscale/", "Deep Lake": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/activeloop_deeplake_self_query/", "MongoDB Atlas": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/mongodb_atlas/", "Qdrant": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/qdrant_self_query/", "OpenAI": "https://https://docs.aiagentsforce.com//integrations/providers/openai/", "Xata": "https://https://docs.aiagentsforce.com//integrations/vectorstores/xata/", "Confident": "https://https://docs.aiagentsforce.com//integrations/callbacks/confident/", "UpTrain": "https://https://docs.aiagentsforce.com//integrations/callbacks/uptrain/", "RAGatouille": "https://https://docs.aiagentsforce.com//integrations/providers/ragatouille/", "Upstash Vector": "https://https://docs.aiagentsforce.com//integrations/vectorstores/upstash/", "Javelin AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/javelin_ai_gateway/", "Identity-enabled RAG using PebbloRetrievalQA": "https://https://docs.aiagentsforce.com//integrations/providers/pebblo/pebblo_retrieval_qa/", "LanceDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/lancedb/", "Apache Doris": "https://https://docs.aiagentsforce.com//integrations/vectorstores/apache_doris/", "Kinetica Vectorstore API": "https://https://docs.aiagentsforce.com//integrations/vectorstores/kinetica/", "Yellowbrick": "https://https://docs.aiagentsforce.com//integrations/vectorstores/yellowbrick/", "Jaguar Vector Database": "https://https://docs.aiagentsforce.com//integrations/vectorstores/jaguar/", "Hippo": "https://https://docs.aiagentsforce.com//integrations/vectorstores/hippo/", "Rockset": "https://https://docs.aiagentsforce.com//integrations/vectorstores/rockset/", "Zilliz": "https://https://docs.aiagentsforce.com//integrations/vectorstores/zilliz/", "Azure Cosmos DB Mongo vCore": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azure_cosmos_db/", "viking DB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vikingdb/", "Typesense": "https://https://docs.aiagentsforce.com//integrations/vectorstores/typesense/", "Momento Vector Index (MVI)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/momento_vector_index/", "TiDB Vector": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tidb_vector/", "Activeloop Deep Lake": "https://https://docs.aiagentsforce.com//integrations/vectorstores/activeloop_deeplake/", "Neo4j Vector Index": "https://https://docs.aiagentsforce.com//integrations/vectorstores/neo4jvector/", "Lantern": "https://https://docs.aiagentsforce.com//integrations/vectorstores/lantern/", "DuckDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/duckdb/", "Alibaba Cloud OpenSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/alibabacloud_opensearch/", "StarRocks": "https://https://docs.aiagentsforce.com//integrations/vectorstores/starrocks/", "scikit-learn": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sklearn/", "Tencent Cloud VectorDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tencentvectordb/", "DocArray HnswSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/docarray_hnsw/", "Tigris": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tigris/", "China Mobile ECloud ElasticSearch VectorSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/ecloud_vector_search/", "Faiss (Async)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/faiss_async/", "Azure AI Search": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azuresearch/", "Apache Cassandra": "https://https://docs.aiagentsforce.com//integrations/vectorstores/cassandra/", "USearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/usearch/", "KDB.AI": "https://https://docs.aiagentsforce.com//integrations/vectorstores/kdbai/", "DocArray InMemorySearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/docarray_in_memory/", "Postgres Embedding": "https://https://docs.aiagentsforce.com//integrations/vectorstores/pgembedding/", "Timescale Vector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/timescalevector/", "Epsilla": "https://https://docs.aiagentsforce.com//integrations/vectorstores/epsilla/", "Amazon Document DB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/documentdb/", "AnalyticDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/analyticdb/", "Hologres": "https://https://docs.aiagentsforce.com//integrations/vectorstores/hologres/", "Meilisearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/meilisearch/", "RankLLM Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/rankllm-reranker/", "YouTube audio": "https://https://docs.aiagentsforce.com//integrations/document_loaders/youtube_audio/", "Image captions": "https://https://docs.aiagentsforce.com//integrations/document_loaders/image_captions/", "Apify Dataset": "https://https://docs.aiagentsforce.com//integrations/document_loaders/apify_dataset/", "Psychic": "https://https://docs.aiagentsforce.com//integrations/document_loaders/psychic/", "Docugami": "https://https://docs.aiagentsforce.com//integrations/document_loaders/docugami/", "Build a Retrieval Augmented Generation (RAG) App": "https://https://docs.aiagentsforce.com//tutorials/rag/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/", "Build a Query Analysis System": "https://https://docs.aiagentsforce.com//tutorials/query_analysis/", "Build a Question/Answering system over SQL data": "https://https://docs.aiagentsforce.com//tutorials/sql_qa/", "Build a PDF ingestion and Question/Answering system": "https://https://docs.aiagentsforce.com//tutorials/pdf_qa/", "Vector stores and retrievers": "https://https://docs.aiagentsforce.com//tutorials/retrievers/"}, "RecursiveCharacterTextSplitter": {"Load docs": "https://https://docs.aiagentsforce.com//versions/migrating_chains/retrieval_qa/", "Build an Agent with AgentExecutor (Legacy)": "https://https://docs.aiagentsforce.com//how_to/agent_executor/", "How to split code": "https://https://docs.aiagentsforce.com//how_to/code_splitter/", "How to handle cases where no queries are generated": "https://https://docs.aiagentsforce.com//how_to/query_no_queries/", "How to recursively split text by characters": "https://https://docs.aiagentsforce.com//how_to/recursive_text_splitter/", "How to handle multiple queries when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_queries/", "How to stream results from your RAG application": "https://https://docs.aiagentsforce.com//how_to/qa_streaming/", "How to get your RAG application to return sources": "https://https://docs.aiagentsforce.com//how_to/qa_sources/", "How to retrieve using multiple vectors per document": "https://https://docs.aiagentsforce.com//how_to/multi_vector/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "How to add retrieval to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_retrieval/", "How to handle multiple retrievers when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_retrievers/", "How to split text by tokens ": "https://https://docs.aiagentsforce.com//how_to/split_by_token/", "How to get a RAG application to add citations": "https://https://docs.aiagentsforce.com//how_to/qa_citations/", "How to use the MultiQueryRetriever": "https://https://docs.aiagentsforce.com//how_to/MultiQueryRetriever/", "How to use the Parent Document Retriever": "https://https://docs.aiagentsforce.com//how_to/parent_document_retriever/", "How to split Markdown by Headers": "https://https://docs.aiagentsforce.com//how_to/markdown_header_metadata_splitter/", "How to split by HTML header ": "https://https://docs.aiagentsforce.com//how_to/HTML_header_metadata_splitter/", "How to split by HTML sections": "https://https://docs.aiagentsforce.com//how_to/HTML_section_aware_splitter/", "How to add scores to retriever results": "https://https://docs.aiagentsforce.com//how_to/add_scores_retriever/", "RePhraseQuery": "https://https://docs.aiagentsforce.com//integrations/retrievers/re_phrase/", "LLMLingua Document Compressor": "https://https://docs.aiagentsforce.com//integrations/retrievers/llmlingua/", "Cohere reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/cohere-reranker/", "Activeloop Deep Memory": "https://https://docs.aiagentsforce.com//integrations/retrievers/activeloop/", "FlashRank reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/flashrank-reranker/", "Maritalk": "https://https://docs.aiagentsforce.com//integrations/chat/maritalk/", "UpTrain": "https://https://docs.aiagentsforce.com//integrations/callbacks/uptrain/", "RAGatouille": "https://https://docs.aiagentsforce.com//integrations/providers/ragatouille/", "Yellowbrick": "https://https://docs.aiagentsforce.com//integrations/vectorstores/yellowbrick/", "Google Vertex AI Vector Search": "https://https://docs.aiagentsforce.com//integrations/vectorstores/google_vertex_ai_vector_search/", "viking DB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vikingdb/", "ApertureDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/aperturedb/", "Azure Cosmos DB No SQL": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azure_cosmos_db_no_sql/", "Zep Cloud": "https://https://docs.aiagentsforce.com//integrations/vectorstores/zep_cloud/", "Apache Cassandra": "https://https://docs.aiagentsforce.com//integrations/vectorstores/cassandra/", "Zep": "https://https://docs.aiagentsforce.com//integrations/vectorstores/zep/", "Vearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vearch/", "VoyageAI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/voyageai-reranker/", "RankLLM Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/rankllm-reranker/", "Volcengine Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/volcengine_rerank/", "OpenVINO Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/openvino_rerank/", "Google Cloud Vertex AI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/google_cloud_vertexai_rerank/", "Cross Encoder Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/cross_encoder_reranker/", "Jina Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/jina_rerank/", "DashScope Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/dashscope_rerank/", "YouTube audio": "https://https://docs.aiagentsforce.com//integrations/document_loaders/youtube_audio/", "Image captions": "https://https://docs.aiagentsforce.com//integrations/document_loaders/image_captions/", "Source Code": "https://https://docs.aiagentsforce.com//integrations/document_loaders/source_code/", "Build a Retrieval Augmented Generation (RAG) App": "https://https://docs.aiagentsforce.com//tutorials/rag/", "Build a Local RAG Application": "https://https://docs.aiagentsforce.com//tutorials/local_rag/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/", "Build a Query Analysis System": "https://https://docs.aiagentsforce.com//tutorials/query_analysis/", "Build a PDF ingestion and Question/Answering system": "https://https://docs.aiagentsforce.com//tutorials/pdf_qa/"}, "ConversationalRetrievalChain": {"Load docs": "https://https://docs.aiagentsforce.com//versions/migrating_chains/conversation_retrieval_chain/", "Outline": "https://https://docs.aiagentsforce.com//integrations/retrievers/outline/", "SEC filing": "https://https://docs.aiagentsforce.com//integrations/retrievers/sec_filings/", "Rememberizer": "https://https://docs.aiagentsforce.com//integrations/retrievers/rememberizer/", "Kay.ai": "https://https://docs.aiagentsforce.com//integrations/retrievers/kay/", "SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sap_hanavector/"}, "create_history_aware_retriever": {"Load docs": "https://https://docs.aiagentsforce.com//versions/migrating_chains/conversation_retrieval_chain/", "How to stream results from your RAG application": "https://https://docs.aiagentsforce.com//how_to/qa_streaming/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/"}, "create_retrieval_chain": {"Load docs": "https://https://docs.aiagentsforce.com//versions/migrating_chains/retrieval_qa/", "How to stream results from your RAG application": "https://https://docs.aiagentsforce.com//how_to/qa_streaming/", "How to get your RAG application to return sources": "https://https://docs.aiagentsforce.com//how_to/qa_sources/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "RAGatouille": "https://https://docs.aiagentsforce.com//integrations/retrievers/ragatouille/", "ApertureDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/aperturedb/", "Jina Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/jina_rerank/", "Image captions": "https://https://docs.aiagentsforce.com//integrations/document_loaders/image_captions/", "Build a Retrieval Augmented Generation (RAG) App": "https://https://docs.aiagentsforce.com//tutorials/rag/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/", "Build a PDF ingestion and Question/Answering system": "https://https://docs.aiagentsforce.com//tutorials/pdf_qa/"}, "MapReduceDocumentsChain": {"# Basic example (short documents)": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_reduce_chain/"}, "ReduceDocumentsChain": {"# Basic example (short documents)": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_reduce_chain/"}, "CharacterTextSplitter": {"# Basic example (short documents)": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_reduce_chain/", "How to handle long text when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_long_text/", "How to split by character": "https://https://docs.aiagentsforce.com//how_to/character_text_splitter/", "How to summarize text through parallelization": "https://https://docs.aiagentsforce.com//how_to/summarize_map_reduce/", "How to use the AI Agents Force indexing API": "https://https://docs.aiagentsforce.com//how_to/indexing/", "How to do retrieval with contextual compression": "https://https://docs.aiagentsforce.com//how_to/contextual_compression/", "How to create and query vector stores": "https://https://docs.aiagentsforce.com//how_to/vectorstores/", "How to split text by tokens ": "https://https://docs.aiagentsforce.com//how_to/split_by_token/", "How to use a vectorstore as a retriever": "https://https://docs.aiagentsforce.com//how_to/vectorstore_retriever/", "Caching": "https://https://docs.aiagentsforce.com//how_to/caching_embeddings/", "Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "AzureAISearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/azure_ai_search/", "Kinetica Vectorstore based Retriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/kinetica/", "JaguarDB Vector Database": "https://https://docs.aiagentsforce.com//integrations/retrievers/jaguar/", "SingleStoreDB": "https://https://docs.aiagentsforce.com//integrations/retrievers/singlestoredb/", "OpenAI": "https://https://docs.aiagentsforce.com//integrations/providers/openai/", "Confident": "https://https://docs.aiagentsforce.com//integrations/callbacks/confident/", "Upstash Vector": "https://https://docs.aiagentsforce.com//integrations/vectorstores/upstash/", "VDMS": "https://https://docs.aiagentsforce.com//integrations/providers/vdms/", "LanceDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/lancedb/", "Kinetica Vectorstore API": "https://https://docs.aiagentsforce.com//integrations/vectorstores/kinetica/", "SQLite-VSS": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sqlitevss/", "Vald": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vald/", "Weaviate": "https://https://docs.aiagentsforce.com//integrations/vectorstores/weaviate/", "Jaguar Vector Database": "https://https://docs.aiagentsforce.com//integrations/vectorstores/jaguar/", "SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sap_hanavector/", "DashVector": "https://https://docs.aiagentsforce.com//integrations/vectorstores/dashvector/", "Databricks Vector Search": "https://https://docs.aiagentsforce.com//integrations/vectorstores/databricks_vector_search/", "ScaNN": "https://https://docs.aiagentsforce.com//integrations/vectorstores/scann/", "Xata": "https://https://docs.aiagentsforce.com//integrations/vectorstores/xata/", "Hippo": "https://https://docs.aiagentsforce.com//integrations/vectorstores/hippo/", "Vespa": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vespa/", "Rockset": "https://https://docs.aiagentsforce.com//integrations/vectorstores/rockset/", "DingoDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/dingo/", "Zilliz": "https://https://docs.aiagentsforce.com//integrations/vectorstores/zilliz/", "Azure Cosmos DB Mongo vCore": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azure_cosmos_db/", "Annoy": "https://https://docs.aiagentsforce.com//integrations/vectorstores/annoy/", "Couchbase ": "https://https://docs.aiagentsforce.com//integrations/vectorstores/couchbase/", "Typesense": "https://https://docs.aiagentsforce.com//integrations/vectorstores/typesense/", "Momento Vector Index (MVI)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/momento_vector_index/", "TiDB Vector": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tidb_vector/", "Relyt": "https://https://docs.aiagentsforce.com//integrations/vectorstores/relyt/", "Activeloop Deep Lake": "https://https://docs.aiagentsforce.com//integrations/vectorstores/activeloop_deeplake/", "vlite": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vlite/", "Neo4j Vector Index": "https://https://docs.aiagentsforce.com//integrations/vectorstores/neo4jvector/", "Lantern": "https://https://docs.aiagentsforce.com//integrations/vectorstores/lantern/", "Tair": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tair/", "DuckDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/duckdb/", "Alibaba Cloud OpenSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/alibabacloud_opensearch/", "Clarifai": "https://https://docs.aiagentsforce.com//integrations/vectorstores/clarifai/", "scikit-learn": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sklearn/", "Tencent Cloud VectorDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tencentvectordb/", "DocArray HnswSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/docarray_hnsw/", "MyScale": "https://https://docs.aiagentsforce.com//integrations/vectorstores/myscale/", "TileDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tiledb/", "Google Memorystore for Redis": "https://https://docs.aiagentsforce.com//integrations/vectorstores/google_memorystore_redis/", "Tigris": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tigris/", "China Mobile ECloud ElasticSearch VectorSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/ecloud_vector_search/", "Bagel": "https://https://docs.aiagentsforce.com//integrations/vectorstores/bagel/", "Baidu Cloud ElasticSearch VectorSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/baiducloud_vector_search/", "AwaDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/awadb/", "Supabase (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/supabase/", "SurrealDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/surrealdb/", "OpenSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/opensearch/", "Faiss (Async)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/faiss_async/", "BagelDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/bageldb/", "ManticoreSearch VectorStore": "https://https://docs.aiagentsforce.com//integrations/vectorstores/manticore_search/", "Azure AI Search": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azuresearch/", "USearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/usearch/", "PGVecto.rs": "https://https://docs.aiagentsforce.com//integrations/vectorstores/pgvecto_rs/", "Marqo": "https://https://docs.aiagentsforce.com//integrations/vectorstores/marqo/", "DocArray InMemorySearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/docarray_in_memory/", "Postgres Embedding": "https://https://docs.aiagentsforce.com//integrations/vectorstores/pgembedding/", "Intel's Visual Data Management System (VDMS)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vdms/", "Timescale Vector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/timescalevector/", "Epsilla": "https://https://docs.aiagentsforce.com//integrations/vectorstores/epsilla/", "Amazon Document DB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/documentdb/", "SemaDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/semadb/", "AnalyticDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/analyticdb/", "Hologres": "https://https://docs.aiagentsforce.com//integrations/vectorstores/hologres/", "Baidu VectorDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/baiduvectordb/", "Meilisearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/meilisearch/", "Psychic": "https://https://docs.aiagentsforce.com//integrations/document_loaders/psychic/", "Manifest": "https://https://docs.aiagentsforce.com//integrations/llms/manifest/", "Summarize Text": "https://https://docs.aiagentsforce.com//tutorials/summarization/"}, "acollapse_docs": {"# Basic example (short documents)": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_reduce_chain/", "How to summarize text through parallelization": "https://https://docs.aiagentsforce.com//how_to/summarize_map_reduce/", "Summarize Text": "https://https://docs.aiagentsforce.com//tutorials/summarization/"}, "split_list_of_docs": {"# Basic example (short documents)": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_reduce_chain/", "How to summarize text through parallelization": "https://https://docs.aiagentsforce.com//how_to/summarize_map_reduce/", "Summarize Text": "https://https://docs.aiagentsforce.com//tutorials/summarization/"}, "RefineDocumentsChain": {"# Example": "https://https://docs.aiagentsforce.com//versions/migrating_chains/refine_docs_chain/"}, "RetrievalQA": {"Load docs": "https://https://docs.aiagentsforce.com//versions/migrating_chains/retrieval_qa/", "LLMLingua Document Compressor": "https://https://docs.aiagentsforce.com//integrations/retrievers/llmlingua/", "Bedrock (Knowledge Bases) Retriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/bedrock/", "Cohere reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/cohere-reranker/", "Activeloop Deep Memory": "https://https://docs.aiagentsforce.com//integrations/retrievers/activeloop/", "FlashRank reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/flashrank-reranker/", "Confident": "https://https://docs.aiagentsforce.com//integrations/callbacks/confident/", "UpTrain": "https://https://docs.aiagentsforce.com//integrations/callbacks/uptrain/", "Apache Doris": "https://https://docs.aiagentsforce.com//integrations/vectorstores/apache_doris/", "ScaNN": "https://https://docs.aiagentsforce.com//integrations/vectorstores/scann/", "Google Vertex AI Vector Search": "https://https://docs.aiagentsforce.com//integrations/vectorstores/google_vertex_ai_vector_search/", "Momento Vector Index (MVI)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/momento_vector_index/", "Activeloop Deep Lake": "https://https://docs.aiagentsforce.com//integrations/vectorstores/activeloop_deeplake/", "StarRocks": "https://https://docs.aiagentsforce.com//integrations/vectorstores/starrocks/", "KDB.AI": "https://https://docs.aiagentsforce.com//integrations/vectorstores/kdbai/", "Timescale Vector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/timescalevector/", "Amazon Document DB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/documentdb/", "VoyageAI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/voyageai-reranker/", "RankLLM Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/rankllm-reranker/", "YouTube audio": "https://https://docs.aiagentsforce.com//integrations/document_loaders/youtube_audio/", "Docugami": "https://https://docs.aiagentsforce.com//integrations/document_loaders/docugami/"}, "RunnablePassthrough": {"Load docs": "https://https://docs.aiagentsforce.com//versions/migrating_chains/retrieval_qa/", "# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/llm_router_chain/", "How to add values to a chain's state": "https://https://docs.aiagentsforce.com//how_to/assign/", "How to route between sub-chains": "https://https://docs.aiagentsforce.com//how_to/routing/", "How to do per-user retrieval": "https://https://docs.aiagentsforce.com//how_to/qa_per_user/", "How to inspect runnables": "https://https://docs.aiagentsforce.com//how_to/inspect/", "How to handle cases where no queries are generated": "https://https://docs.aiagentsforce.com//how_to/query_no_queries/", "How to do tool/function calling": "https://https://docs.aiagentsforce.com//how_to/function_calling/", "How to add a human-in-the-loop for tools": "https://https://docs.aiagentsforce.com//how_to/tools_human/", "How to deal with large databases when doing SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_large_db/", "How to handle multiple queries when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_queries/", "How to map values to a graph database": "https://https://docs.aiagentsforce.com//how_to/graph_mapping/", "How to do question answering over CSVs": "https://https://docs.aiagentsforce.com//how_to/sql_csv/", "How to get your RAG application to return sources": "https://https://docs.aiagentsforce.com//how_to/qa_sources/", "How to add default invocation args to a Runnable": "https://https://docs.aiagentsforce.com//how_to/binding/", "How to convert Runnables as Tools": "https://https://docs.aiagentsforce.com//how_to/convert_runnable_to_tool/", "How to create a dynamic (self-constructing) chain": "https://https://docs.aiagentsforce.com//how_to/dynamic_chain/", "How to stream runnables": "https://https://docs.aiagentsforce.com//how_to/streaming/", "How to invoke runnables in parallel": "https://https://docs.aiagentsforce.com//how_to/parallel/", "How to pass through arguments from one step to the next": "https://https://docs.aiagentsforce.com//how_to/passthrough/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "How to add retrieval to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_retrieval/", "How to handle multiple retrievers when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_retrievers/", "How to get a RAG application to add citations": "https://https://docs.aiagentsforce.com//how_to/qa_citations/", "How to add memory to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_memory/", "How deal with high cardinality categoricals when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_high_cardinality/", "How to add ad-hoc tool calling capability to LLMs and Chat Models": "https://https://docs.aiagentsforce.com//how_to/tools_prompting/", "AI Agents Force Expression Language Cheatsheet": "https://https://docs.aiagentsforce.com//how_to/lcel_cheatsheet/", "Hybrid Search": "https://https://docs.aiagentsforce.com//how_to/hybrid/", "How to use few-shot prompting with tool calling": "https://https://docs.aiagentsforce.com//how_to/tools_few_shot/", "How to add examples to the prompt for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_few_shot/", "NVIDIA NIMs ": "https://https://docs.aiagentsforce.com//integrations/text_embedding/nvidia_ai_endpoints/", "AzureAISearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/azure_ai_search/", "You.com": "https://https://docs.aiagentsforce.com//integrations/retrievers/you-retriever/", "Fleet AI Context": "https://https://docs.aiagentsforce.com//integrations/retrievers/fleet_context/", "AskNews": "https://https://docs.aiagentsforce.com//integrations/retrievers/asknews/", "WikipediaRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/wikipedia/", "TavilySearchAPIRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/tavily/", "ArxivRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/arxiv/", "ElasticsearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/elasticsearch_retriever/", "Milvus Hybrid Search Retriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/milvus_hybrid_search/", "Google Vertex AI Search": "https://https://docs.aiagentsforce.com//integrations/retrievers/google_vertex_ai_search/", "UpTrain": "https://https://docs.aiagentsforce.com//integrations/callbacks/uptrain/", "DSPy": "https://https://docs.aiagentsforce.com//integrations/providers/dspy/", "Weaviate": "https://https://docs.aiagentsforce.com//integrations/vectorstores/weaviate/", "Jaguar Vector Database": "https://https://docs.aiagentsforce.com//integrations/vectorstores/jaguar/", "Apache Cassandra": "https://https://docs.aiagentsforce.com//integrations/vectorstores/cassandra/", "Google Cloud Vertex AI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/google_cloud_vertexai_rerank/", "OpaquePrompts": "https://https://docs.aiagentsforce.com//integrations/llms/opaqueprompts/", "Build a Retrieval Augmented Generation (RAG) App": "https://https://docs.aiagentsforce.com//tutorials/rag/", "Build a Local RAG Application": "https://https://docs.aiagentsforce.com//tutorials/local_rag/", "Build a Chatbot": "https://https://docs.aiagentsforce.com//tutorials/chatbot/", "Build a Query Analysis System": "https://https://docs.aiagentsforce.com//tutorials/query_analysis/", "Build a Question/Answering system over SQL data": "https://https://docs.aiagentsforce.com//tutorials/sql_qa/", "Vector stores and retrievers": "https://https://docs.aiagentsforce.com//tutorials/retrievers/"}, "LLMRouterChain": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/llm_router_chain/"}, "RouterOutputParser": {"# Legacy": "https://https://docs.aiagentsforce.com//versions/migrating_chains/llm_router_chain/"}, "MapRerankDocumentsChain": {"# Example": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_rerank_docs_chain/"}, "RegexParser": {"# Example": "https://https://docs.aiagentsforce.com//versions/migrating_chains/map_rerank_docs_chain/"}, "TavilySearchResults": {"Build an Agent with AgentExecutor (Legacy)": "https://https://docs.aiagentsforce.com//how_to/agent_executor/", "How to add tools to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_tools/", "How to debug your LLM apps": "https://https://docs.aiagentsforce.com//how_to/debugging/", "Tavily Search": "https://https://docs.aiagentsforce.com//integrations/tools/tavily_search/", "ZHIPU AI": "https://https://docs.aiagentsforce.com//integrations/chat/zhipuai/", "Cohere": "https://https://docs.aiagentsforce.com//integrations/providers/cohere/", "Build an Agent": "https://https://docs.aiagentsforce.com//tutorials/agents/"}, "create_retriever_tool": {"Build an Agent with AgentExecutor (Legacy)": "https://https://docs.aiagentsforce.com//how_to/agent_executor/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "Xata": "https://https://docs.aiagentsforce.com//integrations/memory/xata_chat_message_history/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/", "Build a Question/Answering system over SQL data": "https://https://docs.aiagentsforce.com//tutorials/sql_qa/"}, "create_tool_calling_agent": {"Build an Agent with AgentExecutor (Legacy)": "https://https://docs.aiagentsforce.com//how_to/agent_executor/", "How to use tools in a chain": "https://https://docs.aiagentsforce.com//how_to/tools_chain/", "How to track token usage in ChatModels": "https://https://docs.aiagentsforce.com//how_to/chat_token_usage_tracking/", "How to add tools to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_tools/", "How to debug your LLM apps": "https://https://docs.aiagentsforce.com//how_to/debugging/", "How to migrate from legacy AI Agents Force agents to LangGraph": "https://https://docs.aiagentsforce.com//how_to/migrate_agent/", "Azure Container Apps dynamic sessions": "https://https://docs.aiagentsforce.com//integrations/tools/azure_dynamic_sessions/", "FinancialDatasets Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/financial_datasets/", "Databricks Unity Catalog (UC)": "https://https://docs.aiagentsforce.com//integrations/tools/databricks/", "Riza Code Interpreter": "https://https://docs.aiagentsforce.com//integrations/tools/riza/", "Bing Search": "https://https://docs.aiagentsforce.com//integrations/tools/bing_search/"}, "AgentExecutor": {"Build an Agent with AgentExecutor (Legacy)": "https://https://docs.aiagentsforce.com//how_to/agent_executor/", "How to add a semantic layer over graph database": "https://https://docs.aiagentsforce.com//how_to/graph_semantic/", "How to use tools in a chain": "https://https://docs.aiagentsforce.com//how_to/tools_chain/", "How to track token usage in ChatModels": "https://https://docs.aiagentsforce.com//how_to/chat_token_usage_tracking/", "How to add tools to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_tools/", "How to debug your LLM apps": "https://https://docs.aiagentsforce.com//how_to/debugging/", "How to migrate from legacy AI Agents Force agents to LangGraph": "https://https://docs.aiagentsforce.com//how_to/migrate_agent/", "Infobip": "https://https://docs.aiagentsforce.com//integrations/tools/infobip/", "AskNews": "https://https://docs.aiagentsforce.com//integrations/tools/asknews/", "Azure Container Apps dynamic sessions": "https://https://docs.aiagentsforce.com//integrations/tools/azure_dynamic_sessions/", "FinancialDatasets Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/financial_datasets/", "Cassandra Database Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/cassandra_database/", "Polygon IO Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/polygon_toolkit/", "Semantic Scholar API Tool": "https://https://docs.aiagentsforce.com//integrations/tools/semanticscholar/", "Databricks Unity Catalog (UC)": "https://https://docs.aiagentsforce.com//integrations/tools/databricks/", "Passio NutritionAI": "https://https://docs.aiagentsforce.com//integrations/tools/passio_nutrition_ai/", "Memorize": "https://https://docs.aiagentsforce.com//integrations/tools/memorize/", "Riza Code Interpreter": "https://https://docs.aiagentsforce.com//integrations/tools/riza/", "ArXiv": "https://https://docs.aiagentsforce.com//integrations/tools/arxiv/", "Robocorp Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/robocorp/", "MultiOn Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/multion/", "Exa Search": "https://https://docs.aiagentsforce.com//integrations/tools/exa_search/", "Amadeus Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/amadeus/", "Reddit Search ": "https://https://docs.aiagentsforce.com//integrations/tools/reddit_search/", "You.com Search": "https://https://docs.aiagentsforce.com//integrations/tools/you/", "Bing Search": "https://https://docs.aiagentsforce.com//integrations/tools/bing_search/", "Azure AI Services Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/azure_ai_services/", "Polygon IO Toolkit and Tools": "https://https://docs.aiagentsforce.com//integrations/tools/polygon/", "Ionic Shopping Tool": "https://https://docs.aiagentsforce.com//integrations/tools/ionic_shopping/", "MLX": "https://https://docs.aiagentsforce.com//integrations/chat/mlx/", "ZHIPU AI": "https://https://docs.aiagentsforce.com//integrations/chat/zhipuai/", "LLMonitor": "https://https://docs.aiagentsforce.com//integrations/callbacks/llmonitor/", "Streamlit": "https://https://docs.aiagentsforce.com//integrations/callbacks/streamlit/", "Cohere": "https://https://docs.aiagentsforce.com//integrations/providers/cohere/", "Dataherald": "https://https://docs.aiagentsforce.com//integrations/providers/dataherald/", "Log, Trace, and Monitor": "https://https://docs.aiagentsforce.com//integrations/providers/portkey/logging_tracing_portkey/", "Portkey": "https://https://docs.aiagentsforce.com//integrations/providers/portkey/index/", "Bittensor": "https://https://docs.aiagentsforce.com//integrations/llms/bittensor/"}, "AIMessage": {"Build an Agent with AgentExecutor (Legacy)": "https://https://docs.aiagentsforce.com//how_to/agent_executor/", "How to add a semantic layer over graph database": "https://https://docs.aiagentsforce.com//how_to/graph_semantic/", "How to merge consecutive messages of the same type": "https://https://docs.aiagentsforce.com//how_to/merge_message_runs/", "How to trim messages": "https://https://docs.aiagentsforce.com//how_to/trim_messages/", "How to do tool/function calling": "https://https://docs.aiagentsforce.com//how_to/function_calling/", "How to add a human-in-the-loop for tools": "https://https://docs.aiagentsforce.com//how_to/tools_human/", "How to use prompting alone (no tool calling) to do extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_parse/", "How to use reference examples when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_examples/", "How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/", "How to filter messages": "https://https://docs.aiagentsforce.com//how_to/filter_messages/", "How to handle tool errors": "https://https://docs.aiagentsforce.com//how_to/tools_error/", "How to add tools to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_tools/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "How to add retrieval to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_retrieval/", "How to create a custom Output Parser": "https://https://docs.aiagentsforce.com//how_to/output_parser_custom/", "How to return structured data from a model": "https://https://docs.aiagentsforce.com//how_to/structured_output/", "How to compose prompts together": "https://https://docs.aiagentsforce.com//how_to/prompts_composition/", "How to use few-shot prompting with tool calling": "https://https://docs.aiagentsforce.com//how_to/tools_few_shot/", "How to add examples to the prompt for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_few_shot/", "Twitter (via Apify)": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/twitter/", "Zep Open Source": "https://https://docs.aiagentsforce.com//integrations/retrievers/zep_memorystore/", "Zep Cloud": "https://https://docs.aiagentsforce.com//integrations/retrievers/zep_cloud_memorystore/", "Google Imagen": "https://https://docs.aiagentsforce.com//integrations/tools/google_imagen/", "Zep Open Source Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory/", "ZepCloudChatMessageHistory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_cloud_chat_message_history/", "Zep Cloud Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory_cloud/", "ChatOllama": "https://https://docs.aiagentsforce.com//integrations/chat/ollama/", "ChatOCIGenAI": "https://https://docs.aiagentsforce.com//integrations/chat/oci_generative_ai/", "ZHIPU AI": "https://https://docs.aiagentsforce.com//integrations/chat/zhipuai/", "Yuan2.0": "https://https://docs.aiagentsforce.com//integrations/chat/yuan2/", "Google Cloud Vertex AI": "https://https://docs.aiagentsforce.com//integrations/llms/google_vertex_ai_palm/", "ChatGLM": "https://https://docs.aiagentsforce.com//integrations/llms/chatglm/", "Chat Bot Feedback Template": "https://https://docs.aiagentsforce.com//templates/chat-bot-feedback/", "Build a Chatbot": "https://https://docs.aiagentsforce.com//tutorials/chatbot/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/"}, "ChatMessageHistory": {"Build an Agent with AgentExecutor (Legacy)": "https://https://docs.aiagentsforce.com//how_to/agent_executor/", "How to add tools to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_tools/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "How to add memory to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_memory/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/"}, "Neo4jGraph": {"How to add a semantic layer over graph database": "https://https://docs.aiagentsforce.com//how_to/graph_semantic/", "How to map values to a graph database": "https://https://docs.aiagentsforce.com//how_to/graph_mapping/", "How to construct knowledge graphs": "https://https://docs.aiagentsforce.com//how_to/graph_constructing/", "How to best prompt for Graph-RAG": "https://https://docs.aiagentsforce.com//how_to/graph_prompting/", "Neo4j": "https://https://docs.aiagentsforce.com//integrations/graphs/neo4j_cypher/", "Diffbot": "https://https://docs.aiagentsforce.com//integrations/graphs/diffbot/", "Build a Question Answering application over a Graph Database": "https://https://docs.aiagentsforce.com//tutorials/graph/"}, "AsyncCallbackManagerForToolRun": {"How to add a semantic layer over graph database": "https://https://docs.aiagentsforce.com//how_to/graph_semantic/", "How to create tools": "https://https://docs.aiagentsforce.com//how_to/custom_tools/"}, "CallbackManagerForToolRun": {"How to add a semantic layer over graph database": "https://https://docs.aiagentsforce.com//how_to/graph_semantic/", "How to create tools": "https://https://docs.aiagentsforce.com//how_to/custom_tools/"}, "BaseTool": {"How to add a semantic layer over graph database": "https://https://docs.aiagentsforce.com//how_to/graph_semantic/", "How to use AI Agents Force with different Pydantic versions": "https://https://docs.aiagentsforce.com//how_to/pydantic_compatibility/", "How to pass run time values to tools": "https://https://docs.aiagentsforce.com//how_to/tool_runtime/", "How to create tools": "https://https://docs.aiagentsforce.com//how_to/custom_tools/", "How to return artifacts from a tool": "https://https://docs.aiagentsforce.com//how_to/tool_artifacts/"}, "format_to_openai_function_messages": {"How to add a semantic layer over graph database": "https://https://docs.aiagentsforce.com//how_to/graph_semantic/"}, "OpenAIFunctionsAgentOutputParser": {"How to add a semantic layer over graph database": "https://https://docs.aiagentsforce.com//how_to/graph_semantic/"}, "convert_to_openai_function": {"How to add a semantic layer over graph database": "https://https://docs.aiagentsforce.com//how_to/graph_semantic/", "How to convert tools to OpenAI Functions": "https://https://docs.aiagentsforce.com//how_to/tools_as_openai_functions/"}, "BSHTMLLoader": {"How to handle long text when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_long_text/", "How to load HTML": "https://https://docs.aiagentsforce.com//how_to/document_loader_html/", "BSHTMLLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/bshtml/"}, "TokenTextSplitter": {"How to handle long text when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_long_text/", "How to split text by tokens ": "https://https://docs.aiagentsforce.com//how_to/split_by_token/", "AzureAISearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/azure_ai_search/", "Apache Doris": "https://https://docs.aiagentsforce.com//integrations/vectorstores/apache_doris/", "StarRocks": "https://https://docs.aiagentsforce.com//integrations/vectorstores/starrocks/"}, "PyPDFLoader": {"How to load PDFs": "https://https://docs.aiagentsforce.com//how_to/document_loader_pdf/", "Google Vertex AI Vector Search": "https://https://docs.aiagentsforce.com//integrations/vectorstores/google_vertex_ai_vector_search/", "Azure Cosmos DB No SQL": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azure_cosmos_db_no_sql/", "Apache Cassandra": "https://https://docs.aiagentsforce.com//integrations/vectorstores/cassandra/", "KDB.AI": "https://https://docs.aiagentsforce.com//integrations/vectorstores/kdbai/", "PyPDFLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/pypdfloader/", "Merge Documents Loader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/merge_doc/", "Google Cloud Storage File": "https://https://docs.aiagentsforce.com//integrations/document_loaders/google_cloud_storage_file/", "Build a PDF ingestion and Question/Answering system": "https://https://docs.aiagentsforce.com//tutorials/pdf_qa/"}, "SQLDatabase": {"How to better prompt when doing SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_prompting/", "How to deal with large databases when doing SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_large_db/", "How to do question answering over CSVs": "https://https://docs.aiagentsforce.com//how_to/sql_csv/", "How to do query validation as part of SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_query_checking/", "SQLDatabase Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/sql_database/", "CnosDB": "https://https://docs.aiagentsforce.com//integrations/providers/cnosdb/", "Rebuff": "https://https://docs.aiagentsforce.com//integrations/providers/rebuff/", "Build a Question/Answering system over SQL data": "https://https://docs.aiagentsforce.com//tutorials/sql_qa/"}, "create_sql_query_chain": {"How to better prompt when doing SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_prompting/", "How to deal with large databases when doing SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_large_db/", "How to do query validation as part of SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_query_checking/", "Build a Question/Answering system over SQL data": "https://https://docs.aiagentsforce.com//tutorials/sql_qa/"}, "FewShotPromptTemplate": {"How to better prompt when doing SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_prompting/", "How to select examples by n-gram overlap": "https://https://docs.aiagentsforce.com//how_to/example_selectors_ngram/", "How to select examples by length": "https://https://docs.aiagentsforce.com//how_to/example_selectors_length_based/", "How to use example selectors": "https://https://docs.aiagentsforce.com//how_to/example_selectors/", "How to use few shot examples": "https://https://docs.aiagentsforce.com//how_to/few_shot_examples/", "How to select examples by similarity": "https://https://docs.aiagentsforce.com//how_to/example_selectors_similarity/", "How to best prompt for Graph-RAG": "https://https://docs.aiagentsforce.com//how_to/graph_prompting/", "How to select examples by maximal marginal relevance (MMR)": "https://https://docs.aiagentsforce.com//how_to/example_selectors_mmr/", "Generate Synthetic Data": "https://https://docs.aiagentsforce.com//tutorials/data_generation/"}, "SemanticSimilarityExampleSelector": {"How to better prompt when doing SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_prompting/", "How to use few shot examples": "https://https://docs.aiagentsforce.com//how_to/few_shot_examples/", "How to use few shot examples in chat models": "https://https://docs.aiagentsforce.com//how_to/few_shot_examples_chat/", "How to select examples by similarity": "https://https://docs.aiagentsforce.com//how_to/example_selectors_similarity/", "How to best prompt for Graph-RAG": "https://https://docs.aiagentsforce.com//how_to/graph_prompting/", "How to select examples by maximal marginal relevance (MMR)": "https://https://docs.aiagentsforce.com//how_to/example_selectors_mmr/"}, "PydanticOutputParser": {"How to use output parsers to parse an LLM response into structured format": "https://https://docs.aiagentsforce.com//how_to/output_parser_structured/", "How to use prompting alone (no tool calling) to do extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_parse/", "How to use the output-fixing parser": "https://https://docs.aiagentsforce.com//how_to/output_parser_fixing/", "How to retry when a parsing error occurs": "https://https://docs.aiagentsforce.com//how_to/output_parser_retry/", "How to return structured data from a model": "https://https://docs.aiagentsforce.com//how_to/structured_output/", "Generate Synthetic Data": "https://https://docs.aiagentsforce.com//tutorials/data_generation/"}, "AsyncCallbackHandler": {"How to use callbacks in async environments": "https://https://docs.aiagentsforce.com//how_to/callbacks_async/", "How to dispatch custom callback events": "https://https://docs.aiagentsforce.com//how_to/callbacks_custom_events/", "Bedrock": "https://https://docs.aiagentsforce.com//integrations/llms/bedrock/"}, "BaseCallbackHandler": {"How to use callbacks in async environments": "https://https://docs.aiagentsforce.com//how_to/callbacks_async/", "How to propagate callbacks  constructor": "https://https://docs.aiagentsforce.com//how_to/callbacks_constructor/", "How to attach callbacks to a runnable": "https://https://docs.aiagentsforce.com//how_to/callbacks_attach/", "How to create custom callback handlers": "https://https://docs.aiagentsforce.com//how_to/custom_callbacks/", "How to dispatch custom callback events": "https://https://docs.aiagentsforce.com//how_to/callbacks_custom_events/", "How to pass callbacks in at runtime": "https://https://docs.aiagentsforce.com//how_to/callbacks_runtime/", "GPT4All": "https://https://docs.aiagentsforce.com//integrations/llms/gpt4all/"}, "LLMResult": {"How to use callbacks in async environments": "https://https://docs.aiagentsforce.com//how_to/callbacks_async/", "How to propagate callbacks  constructor": "https://https://docs.aiagentsforce.com//how_to/callbacks_constructor/", "How to attach callbacks to a runnable": "https://https://docs.aiagentsforce.com//how_to/callbacks_attach/", "How to pass callbacks in at runtime": "https://https://docs.aiagentsforce.com//how_to/callbacks_runtime/", "Google Cloud Vertex AI": "https://https://docs.aiagentsforce.com//integrations/llms/google_vertex_ai_palm/"}, "RunnableParallel": {"How to add values to a chain's state": "https://https://docs.aiagentsforce.com//how_to/assign/", "How to invoke runnables in parallel": "https://https://docs.aiagentsforce.com//how_to/parallel/", "How to pass through arguments from one step to the next": "https://https://docs.aiagentsforce.com//how_to/passthrough/", "How to add message history": "https://https://docs.aiagentsforce.com//how_to/message_history/", "How to retry when a parsing error occurs": "https://https://docs.aiagentsforce.com//how_to/output_parser_retry/", "How to get a RAG application to add citations": "https://https://docs.aiagentsforce.com//how_to/qa_citations/", "AI Agents Force Expression Language Cheatsheet": "https://https://docs.aiagentsforce.com//how_to/lcel_cheatsheet/", "How to chain runnables": "https://https://docs.aiagentsforce.com//how_to/sequence/", "ZepCloudChatMessageHistory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_cloud_chat_message_history/", "Google Cloud Vertex AI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/google_cloud_vertexai_rerank/"}, "RunnableBranch": {"How to route between sub-chains": "https://https://docs.aiagentsforce.com//how_to/routing/", "How to add retrieval to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_retrieval/"}, "cosine_similarity": {"How to route between sub-chains": "https://https://docs.aiagentsforce.com//how_to/routing/"}, "ConfigurableField": {"How to do per-user retrieval": "https://https://docs.aiagentsforce.com//how_to/qa_per_user/", "How to configure runtime chain internals": "https://https://docs.aiagentsforce.com//how_to/configure/", "AI Agents Force Expression Language Cheatsheet": "https://https://docs.aiagentsforce.com//how_to/lcel_cheatsheet/", "How to combine results from multiple retrievers": "https://https://docs.aiagentsforce.com//how_to/ensemble_retriever/", "Hybrid Search": "https://https://docs.aiagentsforce.com//how_to/hybrid/"}, "NGramOverlapExampleSelector": {"How to select examples by n-gram overlap": "https://https://docs.aiagentsforce.com//how_to/example_selectors_ngram/"}, "get_openai_callback": {"How to track token usage in ChatModels": "https://https://docs.aiagentsforce.com//how_to/chat_token_usage_tracking/", "How to run custom functions": "https://https://docs.aiagentsforce.com//how_to/functions/", "How to track token usage for LLMs": "https://https://docs.aiagentsforce.com//how_to/llm_token_usage_tracking/", "AzureChatOpenAI": "https://https://docs.aiagentsforce.com//integrations/chat/azure_chat_openai/"}, "load_tools": {"How to track token usage in ChatModels": "https://https://docs.aiagentsforce.com//how_to/chat_token_usage_tracking/", "Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "ChatGPT Plugins": "https://https://docs.aiagentsforce.com//integrations/tools/chatgpt_plugins/", "Google Jobs": "https://https://docs.aiagentsforce.com//integrations/tools/google_jobs/", "Human as a tool": "https://https://docs.aiagentsforce.com//integrations/tools/human_tools/", "Google Finance": "https://https://docs.aiagentsforce.com//integrations/tools/google_finance/", "AWS Lambda": "https://https://docs.aiagentsforce.com//integrations/tools/awslambda/", "Google Drive": "https://https://docs.aiagentsforce.com//integrations/tools/google_drive/", "OpenWeatherMap": "https://https://docs.aiagentsforce.com//integrations/providers/openweathermap/", "Memorize": "https://https://docs.aiagentsforce.com//integrations/tools/memorize/", "Eleven Labs Text2Speech": "https://https://docs.aiagentsforce.com//integrations/tools/eleven_labs_tts/", "ArXiv": "https://https://docs.aiagentsforce.com//integrations/tools/arxiv/", "GraphQL": "https://https://docs.aiagentsforce.com//integrations/tools/graphql/", "SceneXplain": "https://https://docs.aiagentsforce.com//integrations/tools/sceneXplain/", "Dall-E Image Generator": "https://https://docs.aiagentsforce.com//integrations/tools/dalle_image_generator/", "MLX": "https://https://docs.aiagentsforce.com//integrations/chat/mlx/", "LLMonitor": "https://https://docs.aiagentsforce.com//integrations/callbacks/llmonitor/", "SageMaker Tracking": "https://https://docs.aiagentsforce.com//integrations/callbacks/sagemaker_tracking/", "Comet Tracing": "https://https://docs.aiagentsforce.com//integrations/callbacks/comet_tracing/", "Argilla": "https://https://docs.aiagentsforce.com//integrations/callbacks/argilla/", "Streamlit": "https://https://docs.aiagentsforce.com//integrations/callbacks/streamlit/", "SerpAPI": "https://https://docs.aiagentsforce.com//integrations/providers/serpapi/", "SearchApi": "https://https://docs.aiagentsforce.com//integrations/providers/searchapi/", "Comet": "https://https://docs.aiagentsforce.com//integrations/providers/comet_tracking/", "Aim": "https://https://docs.aiagentsforce.com//integrations/providers/aim_tracking/", "Golden": "https://https://docs.aiagentsforce.com//integrations/providers/golden/", "Weights & Biases": "https://https://docs.aiagentsforce.com//integrations/providers/wandb_tracking/", "Wolfram Alpha": "https://https://docs.aiagentsforce.com//integrations/providers/wolfram_alpha/", "MLflow": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow_tracking/", "DataForSEO": "https://https://docs.aiagentsforce.com//integrations/providers/dataforseo/", "SearxNG Search API": "https://https://docs.aiagentsforce.com//integrations/providers/searx/", "Serper - Google Search API": "https://https://docs.aiagentsforce.com//integrations/providers/google_serper/", "Stack Exchange": "https://https://docs.aiagentsforce.com//integrations/providers/stackexchange/", "Flyte": "https://https://docs.aiagentsforce.com//integrations/providers/flyte/", "WandB Tracing": "https://https://docs.aiagentsforce.com//integrations/providers/wandb_tracing/", "ClearML": "https://https://docs.aiagentsforce.com//integrations/providers/clearml_tracking/", "Dataherald": "https://https://docs.aiagentsforce.com//integrations/providers/dataherald/", "Amazon API Gateway": "https://https://docs.aiagentsforce.com//integrations/llms/amazon_api_gateway/"}, "ChatBedrock": {"How to track token usage in ChatModels": "https://https://docs.aiagentsforce.com//how_to/chat_token_usage_tracking/", "Response metadata": "https://https://docs.aiagentsforce.com//how_to/response_metadata/", "AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "ChatBedrock": "https://https://docs.aiagentsforce.com//integrations/chat/bedrock/", "Amazon Neptune with SPARQL": "https://https://docs.aiagentsforce.com//integrations/graphs/amazon_neptune_sparql/"}, "get_bedrock_anthropic_callback": {"How to track token usage in ChatModels": "https://https://docs.aiagentsforce.com//how_to/chat_token_usage_tracking/"}, "CallbackManagerForLLMRun": {"How to create a custom LLM class": "https://https://docs.aiagentsforce.com//how_to/custom_llm/", "How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/"}, "LLM": {"How to create a custom LLM class": "https://https://docs.aiagentsforce.com//how_to/custom_llm/"}, "GenerationChunk": {"How to create a custom LLM class": "https://https://docs.aiagentsforce.com//how_to/custom_llm/"}, "BaseLoader": {"How to create a custom Document Loader": "https://https://docs.aiagentsforce.com//how_to/document_loader_custom/", "How to use the AI Agents Force indexing API": "https://https://docs.aiagentsforce.com//how_to/indexing/"}, "BaseBlobParser": {"How to create a custom Document Loader": "https://https://docs.aiagentsforce.com//how_to/document_loader_custom/"}, "Blob": {"How to create a custom Document Loader": "https://https://docs.aiagentsforce.com//how_to/document_loader_custom/", "Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "Google Cloud Document AI": "https://https://docs.aiagentsforce.com//integrations/document_transformers/google_docai/"}, "FileSystemBlobLoader": {"How to create a custom Document Loader": "https://https://docs.aiagentsforce.com//how_to/document_loader_custom/"}, "GenericLoader": {"How to create a custom Document Loader": "https://https://docs.aiagentsforce.com//how_to/document_loader_custom/", "Grobid": "https://https://docs.aiagentsforce.com//integrations/document_loaders/grobid/", "YouTube audio": "https://https://docs.aiagentsforce.com//integrations/document_loaders/youtube_audio/", "Source Code": "https://https://docs.aiagentsforce.com//integrations/document_loaders/source_code/"}, "LengthBasedExampleSelector": {"How to select examples by length": "https://https://docs.aiagentsforce.com//how_to/example_selectors_length_based/"}, "BaseExampleSelector": {"How to use example selectors": "https://https://docs.aiagentsforce.com//how_to/example_selectors/"}, "Language": {"How to split code": "https://https://docs.aiagentsforce.com//how_to/code_splitter/", "Source Code": "https://https://docs.aiagentsforce.com//integrations/document_loaders/source_code/"}, "Chroma": {"How to use few shot examples": "https://https://docs.aiagentsforce.com//how_to/few_shot_examples/", "How to handle cases where no queries are generated": "https://https://docs.aiagentsforce.com//how_to/query_no_queries/", "How to use few shot examples in chat models": "https://https://docs.aiagentsforce.com//how_to/few_shot_examples_chat/", "How to select examples by similarity": "https://https://docs.aiagentsforce.com//how_to/example_selectors_similarity/", "How to reorder retrieved results to mitigate the \"lost in the middle\" effect": "https://https://docs.aiagentsforce.com//how_to/long_context_reorder/", "How to handle multiple queries when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_queries/", "How to stream results from your RAG application": "https://https://docs.aiagentsforce.com//how_to/qa_streaming/", "How to get your RAG application to return sources": "https://https://docs.aiagentsforce.com//how_to/qa_sources/", "How to retrieve using multiple vectors per document": "https://https://docs.aiagentsforce.com//how_to/multi_vector/", "How to add chat history": "https://https://docs.aiagentsforce.com//how_to/qa_chat_history_how_to/", "How to add retrieval to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_retrieval/", "How to handle multiple retrievers when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_retrievers/", "How to create and query vector stores": "https://https://docs.aiagentsforce.com//how_to/vectorstores/", "How to use the MultiQueryRetriever": "https://https://docs.aiagentsforce.com//how_to/MultiQueryRetriever/", "How to use the Parent Document Retriever": "https://https://docs.aiagentsforce.com//how_to/parent_document_retriever/", "How deal with high cardinality categoricals when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_high_cardinality/", "How to do \"self-querying\" retrieval": "https://https://docs.aiagentsforce.com//how_to/self_query/", "RePhraseQuery": "https://https://docs.aiagentsforce.com//integrations/retrievers/re_phrase/", "LOTR (Merger Retriever)": "https://https://docs.aiagentsforce.com//integrations/retrievers/merger_retriever/", "Chroma": "https://https://docs.aiagentsforce.com//integrations/vectorstores/chroma/", "Confident": "https://https://docs.aiagentsforce.com//integrations/callbacks/confident/", "Google Cloud Vertex AI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/google_cloud_vertexai_rerank/", "Image captions": "https://https://docs.aiagentsforce.com//integrations/document_loaders/image_captions/", "Psychic": "https://https://docs.aiagentsforce.com//integrations/document_loaders/psychic/", "Docugami": "https://https://docs.aiagentsforce.com//integrations/document_loaders/docugami/", "Build a Retrieval Augmented Generation (RAG) App": "https://https://docs.aiagentsforce.com//tutorials/rag/", "Build a Local RAG Application": "https://https://docs.aiagentsforce.com//tutorials/local_rag/", "Conversational RAG": "https://https://docs.aiagentsforce.com//tutorials/qa_chat_history/", "Build a Query Analysis System": "https://https://docs.aiagentsforce.com//tutorials/query_analysis/", "Build a PDF ingestion and Question/Answering system": "https://https://docs.aiagentsforce.com//tutorials/pdf_qa/", "Vector stores and retrievers": "https://https://docs.aiagentsforce.com//tutorials/retrievers/"}, "merge_message_runs": {"How to merge consecutive messages of the same type": "https://https://docs.aiagentsforce.com//how_to/merge_message_runs/"}, "PydanticToolsParser": {"How to handle cases where no queries are generated": "https://https://docs.aiagentsforce.com//how_to/query_no_queries/", "How to do tool/function calling": "https://https://docs.aiagentsforce.com//how_to/function_calling/", "How to deal with large databases when doing SQL question-answering": "https://https://docs.aiagentsforce.com//how_to/sql_large_db/", "How to handle multiple queries when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_queries/", "How to use chat models to call tools": "https://https://docs.aiagentsforce.com//how_to/tool_calling/", "How to handle multiple retrievers when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_retrievers/", "ChatPremAI": "https://https://docs.aiagentsforce.com//integrations/chat/premai/", "PremAI": "https://https://docs.aiagentsforce.com//integrations/providers/premai/"}, "chain": {"How to handle cases where no queries are generated": "https://https://docs.aiagentsforce.com//how_to/query_no_queries/", "How to pass run time values to tools": "https://https://docs.aiagentsforce.com//how_to/tool_runtime/", "How to handle multiple queries when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_queries/", "How to create a dynamic (self-constructing) chain": "https://https://docs.aiagentsforce.com//how_to/dynamic_chain/", "How to stream runnables": "https://https://docs.aiagentsforce.com//how_to/streaming/", "How to handle multiple retrievers when doing query analysis": "https://https://docs.aiagentsforce.com//how_to/query_multiple_retrievers/", "How to run custom functions": "https://https://docs.aiagentsforce.com//how_to/functions/", "How to add scores to retriever results": "https://https://docs.aiagentsforce.com//how_to/add_scores_retriever/", "Tavily Search": "https://https://docs.aiagentsforce.com//integrations/tools/tavily_search/"}, "trim_messages": {"How to trim messages": "https://https://docs.aiagentsforce.com//how_to/trim_messages/", "How to add memory to chatbots": "https://https://docs.aiagentsforce.com//how_to/chatbots_memory/", "Build a Chatbot": "https://https://docs.aiagentsforce.com//tutorials/chatbot/"}, "ToolMessage": {"How to trim messages": "https://https://docs.aiagentsforce.com//how_to/trim_messages/", "How to do tool/function calling": "https://https://docs.aiagentsforce.com//how_to/function_calling/", "How to use reference examples when doing extraction": "https://https://docs.aiagentsforce.com//how_to/extraction_examples/", "How to do question answering over CSVs": "https://https://docs.aiagentsforce.com//how_to/sql_csv/", "How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/", "How to handle tool errors": "https://https://docs.aiagentsforce.com//how_to/tools_error/", "How to return structured data from a model": "https://https://docs.aiagentsforce.com//how_to/structured_output/", "How to use few-shot prompting with tool calling": "https://https://docs.aiagentsforce.com//how_to/tools_few_shot/", "How to add examples to the prompt for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_few_shot/", "Cohere": "https://https://docs.aiagentsforce.com//integrations/providers/cohere/", "Eden AI": "https://https://docs.aiagentsforce.com//integrations/chat/edenai/", "ChatPremAI": "https://https://docs.aiagentsforce.com//integrations/chat/premai/", "PremAI": "https://https://docs.aiagentsforce.com//integrations/providers/premai/"}, "RecursiveJsonSplitter": {"How to split JSON data": "https://https://docs.aiagentsforce.com//how_to/recursive_json_splitter/"}, "FewShotChatMessagePromptTemplate": {"How to use few shot examples in chat models": "https://https://docs.aiagentsforce.com//how_to/few_shot_examples_chat/", "Fiddler": "https://https://docs.aiagentsforce.com//integrations/callbacks/fiddler/"}, "XMLOutputParser": {"How to parse XML output": "https://https://docs.aiagentsforce.com//how_to/output_parser_xml/", "How to get a RAG application to add citations": "https://https://docs.aiagentsforce.com//how_to/qa_citations/"}, "InjectedToolArg": {"How to pass run time values to tools": "https://https://docs.aiagentsforce.com//how_to/tool_runtime/"}, "Runnable": {"How to add a human-in-the-loop for tools": "https://https://docs.aiagentsforce.com//how_to/tools_human/", "How to handle tool errors": "https://https://docs.aiagentsforce.com//how_to/tools_error/", "How to create a dynamic (self-constructing) chain": "https://https://docs.aiagentsforce.com//how_to/dynamic_chain/"}, "StructuredTool": {"How to create tools": "https://https://docs.aiagentsforce.com//how_to/custom_tools/", "Infobip": "https://https://docs.aiagentsforce.com//integrations/tools/infobip/"}, "GenericFakeChatModel": {"How to create tools": "https://https://docs.aiagentsforce.com//how_to/custom_tools/"}, "ToolException": {"How to create tools": "https://https://docs.aiagentsforce.com//how_to/custom_tools/"}, "AzureAIDocumentIntelligenceLoader": {"How to load Microsoft Office files": "https://https://docs.aiagentsforce.com//how_to/document_loader_office_file/", "Microsoft Word": "https://https://docs.aiagentsforce.com//integrations/document_loaders/microsoft_word/", "Microsoft Excel": "https://https://docs.aiagentsforce.com//integrations/document_loaders/microsoft_excel/", "Microsoft PowerPoint": "https://https://docs.aiagentsforce.com//integrations/document_loaders/microsoft_powerpoint/", "Azure AI Document Intelligence": "https://https://docs.aiagentsforce.com//integrations/document_loaders/azure_document_intelligence/"}, "InMemoryRateLimiter": {"How to handle rate limits": "https://https://docs.aiagentsforce.com//how_to/chat_model_rate_limiting/"}, "LongContextReorder": {"How to reorder retrieved results to mitigate the \"lost in the middle\" effect": "https://https://docs.aiagentsforce.com//how_to/long_context_reorder/", "LOTR (Merger Retriever)": "https://https://docs.aiagentsforce.com//integrations/retrievers/merger_retriever/"}, "DatetimeOutputParser": {"How to add fallbacks to a runnable": "https://https://docs.aiagentsforce.com//how_to/fallbacks/"}, "CypherQueryCorrector": {"How to map values to a graph database": "https://https://docs.aiagentsforce.com//how_to/graph_mapping/"}, "Schema": {"How to map values to a graph database": "https://https://docs.aiagentsforce.com//how_to/graph_mapping/"}, "dumpd": {"How to save and load AI Agents Force objects": "https://https://docs.aiagentsforce.com//how_to/serialization/"}, "dumps": {"How to save and load AI Agents Force objects": "https://https://docs.aiagentsforce.com//how_to/serialization/"}, "load": {"How to save and load AI Agents Force objects": "https://https://docs.aiagentsforce.com//how_to/serialization/"}, "loads": {"How to save and load AI Agents Force objects": "https://https://docs.aiagentsforce.com//how_to/serialization/"}, "set_llm_cache": {"How to cache chat model responses": "https://https://docs.aiagentsforce.com//how_to/chat_model_caching/", "How to cache LLM responses": "https://https://docs.aiagentsforce.com//how_to/llm_caching/", "Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "DSPy": "https://https://docs.aiagentsforce.com//integrations/providers/dspy/", "MongoDB Atlas": "https://https://docs.aiagentsforce.com//integrations/providers/mongodb_atlas/", "Astra DB": "https://https://docs.aiagentsforce.com//integrations/providers/astradb/", "Couchbase": "https://https://docs.aiagentsforce.com//integrations/providers/couchbase/", "Redis": "https://https://docs.aiagentsforce.com//integrations/providers/redis/", "Cassandra": "https://https://docs.aiagentsforce.com//integrations/providers/cassandra/", "Momento": "https://https://docs.aiagentsforce.com//integrations/providers/momento/"}, "InMemoryCache": {"How to cache chat model responses": "https://https://docs.aiagentsforce.com//how_to/chat_model_caching/", "How to cache LLM responses": "https://https://docs.aiagentsforce.com//how_to/llm_caching/", "Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/"}, "SQLiteCache": {"How to cache chat model responses": "https://https://docs.aiagentsforce.com//how_to/chat_model_caching/", "How to cache LLM responses": "https://https://docs.aiagentsforce.com//how_to/llm_caching/", "Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "DSPy": "https://https://docs.aiagentsforce.com//integrations/providers/dspy/"}, "create_sql_agent": {"How to do question answering over CSVs": "https://https://docs.aiagentsforce.com//how_to/sql_csv/", "CnosDB": "https://https://docs.aiagentsforce.com//integrations/providers/cnosdb/"}, "PythonAstREPLTool": {"How to do question answering over CSVs": "https://https://docs.aiagentsforce.com//how_to/sql_csv/"}, "JsonOutputKeyToolsParser": {"How to do question answering over CSVs": "https://https://docs.aiagentsforce.com//how_to/sql_csv/"}, "create_pandas_dataframe_agent": {"How to do question answering over CSVs": "https://https://docs.aiagentsforce.com//how_to/sql_csv/", "Pandas Dataframe": "https://https://docs.aiagentsforce.com//integrations/tools/pandas/"}, "OutputFixingParser": {"How to use the output-fixing parser": "https://https://docs.aiagentsforce.com//how_to/output_parser_fixing/", "How to retry when a parsing error occurs": "https://https://docs.aiagentsforce.com//how_to/output_parser_retry/"}, "FunctionMessage": {"How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/"}, "AIMessageChunk": {"How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/", "How to create a custom Output Parser": "https://https://docs.aiagentsforce.com//how_to/output_parser_custom/", "Google Cloud Vertex AI": "https://https://docs.aiagentsforce.com//integrations/llms/google_vertex_ai_palm/"}, "FunctionMessageChunk": {"How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/"}, "HumanMessageChunk": {"How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/"}, "SystemMessageChunk": {"How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/"}, "ToolMessageChunk": {"How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/"}, "AsyncCallbackManagerForLLMRun": {"How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/"}, "SimpleChatModel": {"How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/"}, "ChatGeneration": {"How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/", "How to create a custom Output Parser": "https://https://docs.aiagentsforce.com//how_to/output_parser_custom/"}, "ChatGenerationChunk": {"How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/"}, "ChatResult": {"How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/"}, "run_in_executor": {"How to create a custom chat model class": "https://https://docs.aiagentsforce.com//how_to/custom_chat_model/"}, "MoveFileTool": {"How to convert tools to OpenAI Functions": "https://https://docs.aiagentsforce.com//how_to/tools_as_openai_functions/"}, "filter_messages": {"How to filter messages": "https://https://docs.aiagentsforce.com//how_to/filter_messages/"}, "ToolCall": {"How to handle tool errors": "https://https://docs.aiagentsforce.com//how_to/tools_error/"}, "SQLRecordManager": {"How to use the AI Agents Force indexing API": "https://https://docs.aiagentsforce.com//how_to/indexing/"}, "index": {"How to use the AI Agents Force indexing API": "https://https://docs.aiagentsforce.com//how_to/indexing/"}, "SemanticChunker": {"How to split text based on semantic similarity": "https://https://docs.aiagentsforce.com//how_to/semantic-chunker/"}, "InMemoryVectorStore": {"How to convert Runnables as Tools": "https://https://docs.aiagentsforce.com//how_to/convert_runnable_to_tool/", "FireworksEmbeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/fireworks/", "OpenAIEmbeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/openai/", "OllamaEmbeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/ollama/", "MistralAIEmbeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/mistralai/", "AI21Embeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/ai21/", "TogetherEmbeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/together/", "CohereEmbeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/cohere/", "AzureOpenAIEmbeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/azureopenai/", "NomicEmbeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/nomic/", "AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "Amazon MemoryDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/memorydb/"}, "JsonOutputParser": {"How to stream runnables": "https://https://docs.aiagentsforce.com//how_to/streaming/", "How to add ad-hoc tool calling capability to LLMs and Chat Models": "https://https://docs.aiagentsforce.com//how_to/tools_prompting/", "How to parse JSON output": "https://https://docs.aiagentsforce.com//how_to/output_parser_json/"}, "InMemoryByteStore": {"How to retrieve using multiple vectors per document": "https://https://docs.aiagentsforce.com//how_to/multi_vector/", "Caching": "https://https://docs.aiagentsforce.com//how_to/caching_embeddings/", "InMemoryByteStore": "https://https://docs.aiagentsforce.com//integrations/stores/in_memory/"}, "TextLoader": {"How to retrieve using multiple vectors per document": "https://https://docs.aiagentsforce.com//how_to/multi_vector/", "How to do retrieval with contextual compression": "https://https://docs.aiagentsforce.com//how_to/contextual_compression/", "How to load documents from a directory": "https://https://docs.aiagentsforce.com//how_to/document_loader_directory/", "How to create and query vector stores": "https://https://docs.aiagentsforce.com//how_to/vectorstores/", "How to use the Parent Document Retriever": "https://https://docs.aiagentsforce.com//how_to/parent_document_retriever/", "How to use a vectorstore as a retriever": "https://https://docs.aiagentsforce.com//how_to/vectorstore_retriever/", "Caching": "https://https://docs.aiagentsforce.com//how_to/caching_embeddings/", "AzureAISearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/azure_ai_search/", "Kinetica Vectorstore based Retriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/kinetica/", "JaguarDB Vector Database": "https://https://docs.aiagentsforce.com//integrations/retrievers/jaguar/", "LLMLingua Document Compressor": "https://https://docs.aiagentsforce.com//integrations/retrievers/llmlingua/", "Cohere reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/cohere-reranker/", "SingleStoreDB": "https://https://docs.aiagentsforce.com//integrations/retrievers/singlestoredb/", "FlashRank reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/flashrank-reranker/", "Confident": "https://https://docs.aiagentsforce.com//integrations/callbacks/confident/", "UpTrain": "https://https://docs.aiagentsforce.com//integrations/callbacks/uptrain/", "Upstash Vector": "https://https://docs.aiagentsforce.com//integrations/vectorstores/upstash/", "VDMS": "https://https://docs.aiagentsforce.com//integrations/providers/vdms/", "Vectara Chat": "https://https://docs.aiagentsforce.com//integrations/providers/vectara/vectara_chat/", "LanceDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/lancedb/", "Kinetica Vectorstore API": "https://https://docs.aiagentsforce.com//integrations/vectorstores/kinetica/", "SQLite-VSS": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sqlitevss/", "Vald": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vald/", "Weaviate": "https://https://docs.aiagentsforce.com//integrations/vectorstores/weaviate/", "Jaguar Vector Database": "https://https://docs.aiagentsforce.com//integrations/vectorstores/jaguar/", "SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sap_hanavector/", "DashVector": "https://https://docs.aiagentsforce.com//integrations/vectorstores/dashvector/", "Databricks Vector Search": "https://https://docs.aiagentsforce.com//integrations/vectorstores/databricks_vector_search/", "ScaNN": "https://https://docs.aiagentsforce.com//integrations/vectorstores/scann/", "Xata": "https://https://docs.aiagentsforce.com//integrations/vectorstores/xata/", "Hippo": "https://https://docs.aiagentsforce.com//integrations/vectorstores/hippo/", "Vespa": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vespa/", "Rockset": "https://https://docs.aiagentsforce.com//integrations/vectorstores/rockset/", "DingoDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/dingo/", "Zilliz": "https://https://docs.aiagentsforce.com//integrations/vectorstores/zilliz/", "Azure Cosmos DB Mongo vCore": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azure_cosmos_db/", "viking DB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vikingdb/", "Annoy": "https://https://docs.aiagentsforce.com//integrations/vectorstores/annoy/", "Couchbase ": "https://https://docs.aiagentsforce.com//integrations/vectorstores/couchbase/", "Typesense": "https://https://docs.aiagentsforce.com//integrations/vectorstores/typesense/", "Momento Vector Index (MVI)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/momento_vector_index/", "TiDB Vector": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tidb_vector/", "Relyt": "https://https://docs.aiagentsforce.com//integrations/vectorstores/relyt/", "Atlas": "https://https://docs.aiagentsforce.com//integrations/vectorstores/atlas/", "Activeloop Deep Lake": "https://https://docs.aiagentsforce.com//integrations/vectorstores/activeloop_deeplake/", "vlite": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vlite/", "Neo4j Vector Index": "https://https://docs.aiagentsforce.com//integrations/vectorstores/neo4jvector/", "Lantern": "https://https://docs.aiagentsforce.com//integrations/vectorstores/lantern/", "Tair": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tair/", "DuckDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/duckdb/", "Alibaba Cloud OpenSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/alibabacloud_opensearch/", "Clarifai": "https://https://docs.aiagentsforce.com//integrations/vectorstores/clarifai/", "scikit-learn": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sklearn/", "Tencent Cloud VectorDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tencentvectordb/", "DocArray HnswSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/docarray_hnsw/", "MyScale": "https://https://docs.aiagentsforce.com//integrations/vectorstores/myscale/", "TileDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tiledb/", "Google Memorystore for Redis": "https://https://docs.aiagentsforce.com//integrations/vectorstores/google_memorystore_redis/", "Tigris": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tigris/", "China Mobile ECloud ElasticSearch VectorSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/ecloud_vector_search/", "Bagel": "https://https://docs.aiagentsforce.com//integrations/vectorstores/bagel/", "Baidu Cloud ElasticSearch VectorSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/baiducloud_vector_search/", "AwaDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/awadb/", "Supabase (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/supabase/", "SurrealDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/surrealdb/", "OpenSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/opensearch/", "Faiss (Async)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/faiss_async/", "BagelDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/bageldb/", "ManticoreSearch VectorStore": "https://https://docs.aiagentsforce.com//integrations/vectorstores/manticore_search/", "Azure AI Search": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azuresearch/", "USearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/usearch/", "PGVecto.rs": "https://https://docs.aiagentsforce.com//integrations/vectorstores/pgvecto_rs/", "Marqo": "https://https://docs.aiagentsforce.com//integrations/vectorstores/marqo/", "DocArray InMemorySearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/docarray_in_memory/", "Postgres Embedding": "https://https://docs.aiagentsforce.com//integrations/vectorstores/pgembedding/", "Intel's Visual Data Management System (VDMS)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vdms/", "Timescale Vector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/timescalevector/", "Epsilla": "https://https://docs.aiagentsforce.com//integrations/vectorstores/epsilla/", "Amazon Document DB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/documentdb/", "SemaDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/semadb/", "AnalyticDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/analyticdb/", "Hologres": "https://https://docs.aiagentsforce.com//integrations/vectorstores/hologres/", "Baidu VectorDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/baiduvectordb/", "Vearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vearch/", "Meilisearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/meilisearch/", "VoyageAI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/voyageai-reranker/", "RankLLM Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/rankllm-reranker/", "Volcengine Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/volcengine_rerank/", "OpenVINO Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/openvino_rerank/", "Cross Encoder Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/cross_encoder_reranker/", "Jina Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/jina_rerank/", "DashScope Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/dashscope_rerank/"}, "MultiVectorRetriever": {"How to retrieve using multiple vectors per document": "https://https://docs.aiagentsforce.com//how_to/multi_vector/", "How to add scores to retriever results": "https://https://docs.aiagentsforce.com//how_to/add_scores_retriever/", "Fleet AI Context": "https://https://docs.aiagentsforce.com//integrations/retrievers/fleet_context/", "Docugami": "https://https://docs.aiagentsforce.com//integrations/document_loaders/docugami/"}, "SearchType": {"How to retrieve using multiple vectors per document": "https://https://docs.aiagentsforce.com//how_to/multi_vector/", "Zep Open Source": "https://https://docs.aiagentsforce.com//integrations/retrievers/zep_memorystore/", "Docugami": "https://https://docs.aiagentsforce.com//integrations/document_loaders/docugami/"}, "init_chat_model": {"How to init any model in one line": "https://https://docs.aiagentsforce.com//how_to/chat_models_universal_init/", "How to select examples from a LangSmith dataset": "https://https://docs.aiagentsforce.com//how_to/example_selectors_langsmith/"}, "SQLChatMessageHistory": {"How to add message history": "https://https://docs.aiagentsforce.com//how_to/message_history/", "SQL (SQLAlchemy)": "https://https://docs.aiagentsforce.com//integrations/memory/sql_chat_message_history/", "SQLite": "https://https://docs.aiagentsforce.com//integrations/providers/sqlite/"}, "ConfigurableFieldSpec": {"How to add message history": "https://https://docs.aiagentsforce.com//how_to/message_history/"}, "LlamaCpp": {"Run models locally": "https://https://docs.aiagentsforce.com//how_to/local_llms/", "Llama2Chat": "https://https://docs.aiagentsforce.com//integrations/chat/llama2_chat/", "Llama.cpp": "https://https://docs.aiagentsforce.com//integrations/llms/llamacpp/"}, "CallbackManager": {"Run models locally": "https://https://docs.aiagentsforce.com//how_to/local_llms/", "ChatLiteLLM": "https://https://docs.aiagentsforce.com//integrations/chat/litellm/", "GPTRouter": "https://https://docs.aiagentsforce.com//integrations/chat/gpt_router/", "ChatLiteLLMRouter": "https://https://docs.aiagentsforce.com//integrations/chat/litellm_router/", "ZHIPU AI": "https://https://docs.aiagentsforce.com//integrations/chat/zhipuai/", "Llama.cpp": "https://https://docs.aiagentsforce.com//integrations/llms/llamacpp/", "Titan Takeoff": "https://https://docs.aiagentsforce.com//integrations/llms/titan_takeoff/"}, "StreamingStdOutCallbackHandler": {"Run models locally": "https://https://docs.aiagentsforce.com//how_to/local_llms/", "DeepInfra": "https://https://docs.aiagentsforce.com//integrations/chat/deepinfra/", "ChatLiteLLM": "https://https://docs.aiagentsforce.com//integrations/chat/litellm/", "ChatEverlyAI": "https://https://docs.aiagentsforce.com//integrations/chat/everlyai/", "GPTRouter": "https://https://docs.aiagentsforce.com//integrations/chat/gpt_router/", "ChatLiteLLMRouter": "https://https://docs.aiagentsforce.com//integrations/chat/litellm_router/", "ZHIPU AI": "https://https://docs.aiagentsforce.com//integrations/chat/zhipuai/", "Yuan2.0": "https://https://docs.aiagentsforce.com//integrations/chat/yuan2/", "GPT4All": "https://https://docs.aiagentsforce.com//integrations/providers/gpt4all/", "Arthur": "https://https://docs.aiagentsforce.com//integrations/providers/arthur_tracking/", "TextGen": "https://https://docs.aiagentsforce.com//integrations/llms/textgen/", "Llama.cpp": "https://https://docs.aiagentsforce.com//integrations/llms/llamacpp/", "Titan Takeoff": "https://https://docs.aiagentsforce.com//integrations/llms/titan_takeoff/", "Eden AI": "https://https://docs.aiagentsforce.com//integrations/llms/edenai/", "C Transformers": "https://https://docs.aiagentsforce.com//integrations/llms/ctransformers/", "ExLlamaV2": "https://https://docs.aiagentsforce.com//integrations/llms/exllamav2/", "Huggingface Endpoints": "https://https://docs.aiagentsforce.com//integrations/llms/huggingface_endpoint/", "Replicate": "https://https://docs.aiagentsforce.com//integrations/llms/replicate/"}, "GPT4All": {"Run models locally": "https://https://docs.aiagentsforce.com//how_to/local_llms/", "PromptLayer": "https://https://docs.aiagentsforce.com//integrations/callbacks/promptlayer/", "GPT4All": "https://https://docs.aiagentsforce.com//integrations/llms/gpt4all/"}, "Llamafile": {"Run models locally": "https://https://docs.aiagentsforce.com//how_to/local_llms/", "Llamafile": "https://https://docs.aiagentsforce.com//integrations/llms/llamafile/"}, "ConditionalPromptSelector": {"Run models locally": "https://https://docs.aiagentsforce.com//how_to/local_llms/"}, "HubRunnable": {"How to configure runtime chain internals": "https://https://docs.aiagentsforce.com//how_to/configure/"}, "ContextualCompressionRetriever": {"How to do retrieval with contextual compression": "https://https://docs.aiagentsforce.com//how_to/contextual_compression/", "LLMLingua Document Compressor": "https://https://docs.aiagentsforce.com//integrations/retrievers/llmlingua/", "Cohere reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/cohere-reranker/", "FlashRank reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/flashrank-reranker/", "LOTR (Merger Retriever)": "https://https://docs.aiagentsforce.com//integrations/retrievers/merger_retriever/", "UpTrain": "https://https://docs.aiagentsforce.com//integrations/callbacks/uptrain/", "RAGatouille": "https://https://docs.aiagentsforce.com//integrations/providers/ragatouille/", "VoyageAI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/voyageai-reranker/", "RankLLM Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/rankllm-reranker/", "Volcengine Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/volcengine_rerank/", "OpenVINO Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/openvino_rerank/", "Google Cloud Vertex AI Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/google_cloud_vertexai_rerank/", "Cross Encoder Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/cross_encoder_reranker/", "Jina Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/jina_rerank/", "DashScope Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/dashscope_rerank/"}, "LLMChainExtractor": {"How to do retrieval with contextual compression": "https://https://docs.aiagentsforce.com//how_to/contextual_compression/"}, "LLMChainFilter": {"How to do retrieval with contextual compression": "https://https://docs.aiagentsforce.com//how_to/contextual_compression/"}, "LLMListwiseRerank": {"How to do retrieval with contextual compression": "https://https://docs.aiagentsforce.com//how_to/contextual_compression/"}, "EmbeddingsFilter": {"How to do retrieval with contextual compression": "https://https://docs.aiagentsforce.com//how_to/contextual_compression/", "How to get a RAG application to add citations": "https://https://docs.aiagentsforce.com//how_to/qa_citations/"}, "DocumentCompressorPipeline": {"How to do retrieval with contextual compression": "https://https://docs.aiagentsforce.com//how_to/contextual_compression/"}, "EmbeddingsRedundantFilter": {"How to do retrieval with contextual compression": "https://https://docs.aiagentsforce.com//how_to/contextual_compression/", "LOTR (Merger Retriever)": "https://https://docs.aiagentsforce.com//integrations/retrievers/merger_retriever/"}, "Comparator": {"How to construct filters for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_constructing_filters/"}, "Comparison": {"How to construct filters for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_constructing_filters/"}, "Operation": {"How to construct filters for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_constructing_filters/"}, "Operator": {"How to construct filters for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_constructing_filters/"}, "StructuredQuery": {"How to construct filters for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_constructing_filters/"}, "ChromaTranslator": {"How to construct filters for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_constructing_filters/", "How to do \"self-querying\" retrieval": "https://https://docs.aiagentsforce.com//how_to/self_query/"}, "ElasticsearchTranslator": {"How to construct filters for query analysis": "https://https://docs.aiagentsforce.com//how_to/query_constructing_filters/"}, "WikipediaQueryRun": {"How to use built-in tools and toolkits": "https://https://docs.aiagentsforce.com//how_to/tools_builtin/", "Wikipedia": "https://https://docs.aiagentsforce.com//integrations/tools/wikipedia/"}, "WikipediaAPIWrapper": {"How to use built-in tools and toolkits": "https://https://docs.aiagentsforce.com//how_to/tools_builtin/", "Wikipedia": "https://https://docs.aiagentsforce.com//integrations/tools/wikipedia/", "Zep Open Source Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory/", "Zep Cloud Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory_cloud/"}, "CallbackManagerForRetrieverRun": {"How to create a custom Retriever": "https://https://docs.aiagentsforce.com//how_to/custom_retriever/", "How to add scores to retriever results": "https://https://docs.aiagentsforce.com//how_to/add_scores_retriever/"}, "BaseRetriever": {"How to create a custom Retriever": "https://https://docs.aiagentsforce.com//how_to/custom_retriever/"}, "LLMGraphTransformer": {"How to construct knowledge graphs": "https://https://docs.aiagentsforce.com//how_to/graph_constructing/"}, "RetryOutputParser": {"How to retry when a parsing error occurs": "https://https://docs.aiagentsforce.com//how_to/output_parser_retry/"}, "TimeWeightedVectorStoreRetriever": {"How to use a time-weighted vector store retriever": "https://https://docs.aiagentsforce.com//how_to/time_weighted_vectorstore/"}, "InMemoryDocstore": {"How to use a time-weighted vector store retriever": "https://https://docs.aiagentsforce.com//how_to/time_weighted_vectorstore/", "Annoy": "https://https://docs.aiagentsforce.com//integrations/vectorstores/annoy/", "Faiss": "https://https://docs.aiagentsforce.com//integrations/vectorstores/faiss/"}, "mock_now": {"How to use a time-weighted vector store retriever": "https://https://docs.aiagentsforce.com//how_to/time_weighted_vectorstore/"}, "RunnableGenerator": {"How to create a custom Output Parser": "https://https://docs.aiagentsforce.com//how_to/output_parser_custom/"}, "OutputParserException": {"How to create a custom Output Parser": "https://https://docs.aiagentsforce.com//how_to/output_parser_custom/"}, "BaseOutputParser": {"How to create a custom Output Parser": "https://https://docs.aiagentsforce.com//how_to/output_parser_custom/", "How to use the MultiQueryRetriever": "https://https://docs.aiagentsforce.com//how_to/MultiQueryRetriever/"}, "BaseGenerationOutputParser": {"How to create a custom Output Parser": "https://https://docs.aiagentsforce.com//how_to/output_parser_custom/"}, "Generation": {"How to create a custom Output Parser": "https://https://docs.aiagentsforce.com//how_to/output_parser_custom/"}, "DirectoryLoader": {"How to load documents from a directory": "https://https://docs.aiagentsforce.com//how_to/document_loader_directory/", "AzureAISearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/azure_ai_search/", "Apache Doris": "https://https://docs.aiagentsforce.com//integrations/vectorstores/apache_doris/", "StarRocks": "https://https://docs.aiagentsforce.com//integrations/vectorstores/starrocks/"}, "PythonLoader": {"How to load documents from a directory": "https://https://docs.aiagentsforce.com//how_to/document_loader_directory/"}, "LanceDB": {"How to create and query vector stores": "https://https://docs.aiagentsforce.com//how_to/vectorstores/", "LanceDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/lancedb/"}, "SpacyTextSplitter": {"How to split text by tokens ": "https://https://docs.aiagentsforce.com//how_to/split_by_token/", "spaCy": "https://https://docs.aiagentsforce.com//integrations/providers/spacy/", "Atlas": "https://https://docs.aiagentsforce.com//integrations/vectorstores/atlas/"}, "SentenceTransformersTokenTextSplitter": {"How to split text by tokens ": "https://https://docs.aiagentsforce.com//how_to/split_by_token/"}, "NLTKTextSplitter": {"How to split text by tokens ": "https://https://docs.aiagentsforce.com//how_to/split_by_token/"}, "KonlpyTextSplitter": {"How to split text by tokens ": "https://https://docs.aiagentsforce.com//how_to/split_by_token/"}, "WikipediaRetriever": {"How to get a RAG application to add citations": "https://https://docs.aiagentsforce.com//how_to/qa_citations/", "WikipediaRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/wikipedia/", "Wikipedia": "https://https://docs.aiagentsforce.com//integrations/providers/wikipedia/"}, "UnstructuredHTMLLoader": {"How to load HTML": "https://https://docs.aiagentsforce.com//how_to/document_loader_html/", "Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/"}, "MultiQueryRetriever": {"How to use the MultiQueryRetriever": "https://https://docs.aiagentsforce.com//how_to/MultiQueryRetriever/", "UpTrain": "https://https://docs.aiagentsforce.com//integrations/callbacks/uptrain/", "Vectara": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vectara/"}, "GraphCypherQAChain": {"How to best prompt for Graph-RAG": "https://https://docs.aiagentsforce.com//how_to/graph_prompting/", "Neo4j": "https://https://docs.aiagentsforce.com//integrations/graphs/neo4j_cypher/", "Memgraph": "https://https://docs.aiagentsforce.com//integrations/graphs/memgraph/", "Diffbot": "https://https://docs.aiagentsforce.com//integrations/graphs/diffbot/", "Apache AGE": "https://https://docs.aiagentsforce.com//integrations/graphs/apache_age/", "Build a Question Answering application over a Graph Database": "https://https://docs.aiagentsforce.com//tutorials/graph/"}, "Neo4jVector": {"How to best prompt for Graph-RAG": "https://https://docs.aiagentsforce.com//how_to/graph_prompting/", "Neo4j": "https://https://docs.aiagentsforce.com//integrations/providers/neo4j/", "Neo4j Vector Index": "https://https://docs.aiagentsforce.com//integrations/vectorstores/neo4jvector/"}, "ParentDocumentRetriever": {"How to use the Parent Document Retriever": "https://https://docs.aiagentsforce.com//how_to/parent_document_retriever/"}, "InMemoryStore": {"How to use the Parent Document Retriever": "https://https://docs.aiagentsforce.com//how_to/parent_document_retriever/", "How to add scores to retriever results": "https://https://docs.aiagentsforce.com//how_to/add_scores_retriever/", "Fleet AI Context": "https://https://docs.aiagentsforce.com//integrations/retrievers/fleet_context/", "Docugami": "https://https://docs.aiagentsforce.com//integrations/document_loaders/docugami/"}, "YamlOutputParser": {"How to parse YAML output": "https://https://docs.aiagentsforce.com//how_to/output_parser_yaml/"}, "PipelinePromptTemplate": {"How to compose prompts together": "https://https://docs.aiagentsforce.com//how_to/prompts_composition/"}, "CacheBackedEmbeddings": {"Caching": "https://https://docs.aiagentsforce.com//how_to/caching_embeddings/"}, "LocalFileStore": {"Caching": "https://https://docs.aiagentsforce.com//how_to/caching_embeddings/", "LocalFileStore": "https://https://docs.aiagentsforce.com//integrations/stores/file_system/"}, "Ollama": {"How to add ad-hoc tool calling capability to LLMs and Chat Models": "https://https://docs.aiagentsforce.com//how_to/tools_prompting/", "ApertureDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/aperturedb/"}, "render_text_description": {"How to add ad-hoc tool calling capability to LLMs and Chat Models": "https://https://docs.aiagentsforce.com//how_to/tools_prompting/", "MLX": "https://https://docs.aiagentsforce.com//integrations/chat/mlx/"}, "RunnableSerializable": {"AI Agents Force Expression Language Cheatsheet": "https://https://docs.aiagentsforce.com//how_to/lcel_cheatsheet/"}, "Run": {"AI Agents Force Expression Language Cheatsheet": "https://https://docs.aiagentsforce.com//how_to/lcel_cheatsheet/"}, "MarkdownHeaderTextSplitter": {"How to split Markdown by Headers": "https://https://docs.aiagentsforce.com//how_to/markdown_header_metadata_splitter/"}, "HTMLHeaderTextSplitter": {"How to split by HTML header ": "https://https://docs.aiagentsforce.com//how_to/HTML_header_metadata_splitter/"}, "EnsembleRetriever": {"How to combine results from multiple retrievers": "https://https://docs.aiagentsforce.com//how_to/ensemble_retriever/"}, "BM25Retriever": {"How to combine results from multiple retrievers": "https://https://docs.aiagentsforce.com//how_to/ensemble_retriever/", "BM25": "https://https://docs.aiagentsforce.com//integrations/retrievers/bm25/", "Maritalk": "https://https://docs.aiagentsforce.com//integrations/chat/maritalk/"}, "ChatMistralAI": {"Response metadata": "https://https://docs.aiagentsforce.com//how_to/response_metadata/", "ChatMistralAI": "https://https://docs.aiagentsforce.com//integrations/chat/mistralai/", "MistralAI": "https://https://docs.aiagentsforce.com//integrations/providers/mistralai/", "Build an Extraction Chain": "https://https://docs.aiagentsforce.com//tutorials/extraction/"}, "ChatGroq": {"Response metadata": "https://https://docs.aiagentsforce.com//how_to/response_metadata/", "ChatGroq": "https://https://docs.aiagentsforce.com//integrations/chat/groq/"}, "set_verbose": {"How to debug your LLM apps": "https://https://docs.aiagentsforce.com//how_to/debugging/", "OpaquePrompts": "https://https://docs.aiagentsforce.com//integrations/llms/opaqueprompts/"}, "set_debug": {"How to debug your LLM apps": "https://https://docs.aiagentsforce.com//how_to/debugging/", "Bittensor": "https://https://docs.aiagentsforce.com//integrations/llms/bittensor/", "TextGen": "https://https://docs.aiagentsforce.com//integrations/llms/textgen/", "OpaquePrompts": "https://https://docs.aiagentsforce.com//integrations/llms/opaqueprompts/"}, "MaxMarginalRelevanceExampleSelector": {"How to select examples by maximal marginal relevance (MMR)": "https://https://docs.aiagentsforce.com//how_to/example_selectors_mmr/"}, "AttributeInfo": {"How to do \"self-querying\" retrieval": "https://https://docs.aiagentsforce.com//how_to/self_query/", "How to add scores to retriever results": "https://https://docs.aiagentsforce.com//how_to/add_scores_retriever/", "Milvus": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/milvus_self_query/", "PGVector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/pgvector_self_query/", "Weaviate": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/weaviate_self_query/", "Vectara self-querying ": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/vectara_self_query/", "SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/hanavector_self_query/", "DashVector": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/dashvector/", "Databricks Vector Search": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/databricks_vector_search/", "DingoDB": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/dingo/", "OpenSearch": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/opensearch_self_query/", "Elasticsearch": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/elasticsearch_self_query/", "Chroma": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/chroma_self_query/", "Tencent Cloud VectorDB": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/tencentvectordb/", "Timescale Vector (Postgres) ": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/timescalevector_self_query/", "Astra DB (Cassandra)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/astradb/", "Pinecone": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/pinecone/", "Supabase (Postgres)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/supabase_self_query/", "Redis": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/redis_self_query/", "MyScale": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/myscale_self_query/", "Deep Lake": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/activeloop_deeplake_self_query/", "MongoDB Atlas": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/mongodb_atlas/", "Qdrant": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/qdrant_self_query/", "Timescale Vector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/timescalevector/", "Docugami": "https://https://docs.aiagentsforce.com//integrations/document_loaders/docugami/", "self-query-qdrant": "https://https://docs.aiagentsforce.com//templates/self-query-qdrant/"}, "SelfQueryRetriever": {"How to do \"self-querying\" retrieval": "https://https://docs.aiagentsforce.com//how_to/self_query/", "How to add scores to retriever results": "https://https://docs.aiagentsforce.com//how_to/add_scores_retriever/", "Milvus": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/milvus_self_query/", "PGVector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/pgvector_self_query/", "Weaviate": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/weaviate_self_query/", "Vectara self-querying ": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/vectara_self_query/", "SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/hanavector_self_query/", "DashVector": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/dashvector/", "Databricks Vector Search": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/databricks_vector_search/", "DingoDB": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/dingo/", "OpenSearch": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/opensearch_self_query/", "Elasticsearch": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/elasticsearch_self_query/", "Chroma": "https://https://docs.aiagentsforce.com//integrations/providers/chroma/", "Tencent Cloud VectorDB": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/tencentvectordb/", "Timescale Vector (Postgres) ": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/timescalevector_self_query/", "Astra DB (Cassandra)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/astradb/", "Pinecone": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/pinecone/", "Supabase (Postgres)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/supabase_self_query/", "Redis": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/redis_self_query/", "MyScale": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/myscale_self_query/", "Deep Lake": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/activeloop_deeplake_self_query/", "MongoDB Atlas": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/mongodb_atlas/", "Qdrant": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/qdrant_self_query/", "Astra DB": "https://https://docs.aiagentsforce.com//integrations/providers/astradb/", "Timescale Vector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/timescalevector/", "Docugami": "https://https://docs.aiagentsforce.com//integrations/document_loaders/docugami/"}, "StructuredQueryOutputParser": {"How to do \"self-querying\" retrieval": "https://https://docs.aiagentsforce.com//how_to/self_query/", "SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/hanavector_self_query/"}, "get_query_constructor_prompt": {"How to do \"self-querying\" retrieval": "https://https://docs.aiagentsforce.com//how_to/self_query/", "SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/hanavector_self_query/"}, "add": {"How to select examples from a LangSmith dataset": "https://https://docs.aiagentsforce.com//how_to/example_selectors_langsmith/"}, "cos": {"How to select examples from a LangSmith dataset": "https://https://docs.aiagentsforce.com//how_to/example_selectors_langsmith/"}, "divide": {"How to select examples from a LangSmith dataset": "https://https://docs.aiagentsforce.com//how_to/example_selectors_langsmith/"}, "log": {"How to select examples from a LangSmith dataset": "https://https://docs.aiagentsforce.com//how_to/example_selectors_langsmith/"}, "multiply": {"How to select examples from a LangSmith dataset": "https://https://docs.aiagentsforce.com//how_to/example_selectors_langsmith/"}, "negate": {"How to select examples from a LangSmith dataset": "https://https://docs.aiagentsforce.com//how_to/example_selectors_langsmith/"}, "pi": {"How to select examples from a LangSmith dataset": "https://https://docs.aiagentsforce.com//how_to/example_selectors_langsmith/"}, "power": {"How to select examples from a LangSmith dataset": "https://https://docs.aiagentsforce.com//how_to/example_selectors_langsmith/"}, "sin": {"How to select examples from a LangSmith dataset": "https://https://docs.aiagentsforce.com//how_to/example_selectors_langsmith/"}, "subtract": {"How to select examples from a LangSmith dataset": "https://https://docs.aiagentsforce.com//how_to/example_selectors_langsmith/"}, "adispatch_custom_event": {"How to dispatch custom callback events": "https://https://docs.aiagentsforce.com//how_to/callbacks_custom_events/"}, "dispatch_custom_event": {"How to dispatch custom callback events": "https://https://docs.aiagentsforce.com//how_to/callbacks_custom_events/"}, "Cassandra": {"Hybrid Search": "https://https://docs.aiagentsforce.com//how_to/hybrid/", "Cassandra": "https://https://docs.aiagentsforce.com//integrations/providers/cassandra/", "Apache Cassandra": "https://https://docs.aiagentsforce.com//integrations/vectorstores/cassandra/"}, "HTMLSectionSplitter": {"How to split by HTML sections": "https://https://docs.aiagentsforce.com//how_to/HTML_section_aware_splitter/"}, "JSONLoader": {"How to load JSON": "https://https://docs.aiagentsforce.com//how_to/document_loader_json/", "Timescale Vector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/timescalevector/", "JSONLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/json/"}, "UpstashRedisCache": {"Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "Upstash Vector": "https://https://docs.aiagentsforce.com//integrations/providers/upstash/"}, "RedisCache": {"Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "Redis": "https://https://docs.aiagentsforce.com//integrations/providers/redis/"}, "RedisSemanticCache": {"Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "Redis": "https://https://docs.aiagentsforce.com//integrations/providers/redis/"}, "GPTCache": {"Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/"}, "MomentoCache": {"Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "Momento": "https://https://docs.aiagentsforce.com//integrations/providers/momento/"}, "SQLAlchemyCache": {"Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/"}, "CassandraCache": {"Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "Cassandra": "https://https://docs.aiagentsforce.com//integrations/providers/cassandra/"}, "CassandraSemanticCache": {"Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "Cassandra": "https://https://docs.aiagentsforce.com//integrations/providers/cassandra/"}, "AzureCosmosDBSemanticCache": {"Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/"}, "CosmosDBSimilarityType": {"Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "Azure Cosmos DB Mongo vCore": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azure_cosmos_db/"}, "CosmosDBVectorSearchType": {"Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "Azure Cosmos DB Mongo vCore": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azure_cosmos_db/"}, "load_summarize_chain": {"Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/", "Infino": "https://https://docs.aiagentsforce.com//integrations/callbacks/infino/", "LarkSuite (FeiShu)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/larksuite/"}, "OpenSearchSemanticCache": {"Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/"}, "SingleStoreDBSemanticCache": {"Model caches": "https://https://docs.aiagentsforce.com//integrations/llm_caching/"}, "map_ai_messages": {"WeChat": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/wechat/", "Facebook Messenger": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/facebook/", "GMail": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/gmail/", "Slack": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/slack/", "WhatsApp": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/whatsapp/", "iMessage": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/imessage/", "Telegram": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/telegram/", "Discord": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/discord/"}, "merge_chat_runs": {"WeChat": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/wechat/", "Facebook Messenger": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/facebook/", "Slack": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/slack/", "WhatsApp": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/whatsapp/", "iMessage": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/imessage/", "Telegram": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/telegram/", "Discord": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/discord/"}, "ChatSession": {"WeChat": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/wechat/", "Slack": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/slack/", "WhatsApp": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/whatsapp/", "iMessage": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/imessage/", "Telegram": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/telegram/", "Discord": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/discord/"}, "FolderFacebookMessengerChatLoader": {"Facebook Messenger": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/facebook/", "Facebook - Meta": "https://https://docs.aiagentsforce.com//integrations/providers/facebook/"}, "SingleFileFacebookMessengerChatLoader": {"Facebook Messenger": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/facebook/", "Facebook - Meta": "https://https://docs.aiagentsforce.com//integrations/providers/facebook/"}, "convert_messages_for_finetuning": {"Facebook Messenger": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/facebook/", "LangSmith LLM Runs": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/langsmith_llm_runs/", "LangSmith Chat Datasets": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/langsmith_dataset/", "iMessage": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/imessage/"}, "convert_message_to_dict": {"Twitter (via Apify)": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/twitter/"}, "convert_pydantic_to_openai_function": {"LangSmith LLM Runs": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/langsmith_llm_runs/"}, "PydanticOutputFunctionsParser": {"LangSmith LLM Runs": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/langsmith_llm_runs/"}, "LangSmithRunChatLoader": {"LangSmith LLM Runs": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/langsmith_llm_runs/"}, "GMailLoader": {"GMail": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/gmail/"}, "SlackChatLoader": {"Slack": "https://https://docs.aiagentsforce.com//integrations/providers/slack/"}, "WhatsAppChatLoader": {"WhatsApp": "https://https://docs.aiagentsforce.com//integrations/providers/whatsapp/", "Facebook - Meta": "https://https://docs.aiagentsforce.com//integrations/providers/facebook/", "WhatsApp Chat": "https://https://docs.aiagentsforce.com//integrations/document_loaders/whatsapp_chat/"}, "LangSmithDatasetChatLoader": {"LangSmith Chat Datasets": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/langsmith_dataset/"}, "IMessageChatLoader": {"iMessage": "https://https://docs.aiagentsforce.com//integrations/chat_loaders/imessage/"}, "TelegramChatLoader": {"Telegram": "https://https://docs.aiagentsforce.com//integrations/providers/telegram/"}, "BookendEmbeddings": {"Bookend AI": "https://https://docs.aiagentsforce.com//integrations/text_embedding/bookend/"}, "SolarEmbeddings": {"Solar": "https://https://docs.aiagentsforce.com//integrations/text_embedding/solar/"}, "HuggingFaceBgeEmbeddings": {"BGE on Hugging Face": "https://https://docs.aiagentsforce.com//integrations/text_embedding/bge_huggingface/", "Hugging Face": "https://https://docs.aiagentsforce.com//integrations/providers/huggingface/"}, "IpexLLMBgeEmbeddings": {"Local BGE Embeddings with IPEX-LLM on Intel CPU": "https://https://docs.aiagentsforce.com//integrations/text_embedding/ipex_llm/", "Local BGE Embeddings with IPEX-LLM on Intel GPU": "https://https://docs.aiagentsforce.com//integrations/text_embedding/ipex_llm_gpu/"}, "QuantizedBiEncoderEmbeddings": {"Embedding Documents using Optimized and Quantized Embedders": "https://https://docs.aiagentsforce.com//integrations/text_embedding/optimum_intel/", "Intel": "https://https://docs.aiagentsforce.com//integrations/providers/intel/"}, "XinferenceEmbeddings": {"Xorbits inference (Xinference)": "https://https://docs.aiagentsforce.com//integrations/text_embedding/xinference/"}, "LLMRailsEmbeddings": {"LLMRails": "https://https://docs.aiagentsforce.com//integrations/text_embedding/llm_rails/"}, "AscendEmbeddings": {"# Related": "https://https://docs.aiagentsforce.com//integrations/text_embedding/ascend/", "Ascend": "https://https://docs.aiagentsforce.com//integrations/providers/ascend/"}, "DeepInfraEmbeddings": {"DeepInfra": "https://https://docs.aiagentsforce.com//integrations/providers/deepinfra/"}, "HuggingFaceInferenceAPIEmbeddings": {"Hugging Face": "https://https://docs.aiagentsforce.com//integrations/text_embedding/huggingfacehub/"}, "GPT4AllEmbeddings": {"GPT4All": "https://https://docs.aiagentsforce.com//integrations/text_embedding/gpt4all/", "ManticoreSearch VectorStore": "https://https://docs.aiagentsforce.com//integrations/vectorstores/manticore_search/"}, "MosaicMLInstructorEmbeddings": {"MosaicML": "https://https://docs.aiagentsforce.com//integrations/text_embedding/mosaicml/"}, "QuantizedBgeEmbeddings": {"Intel\u00ae Extension for Transformers Quantized Text Embeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/itrex/", "Intel": "https://https://docs.aiagentsforce.com//integrations/providers/intel/"}, "BedrockEmbeddings": {"Bedrock": "https://https://docs.aiagentsforce.com//integrations/text_embedding/bedrock/", "AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "Amazon MemoryDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/memorydb/"}, "GigaChatEmbeddings": {"GigaChat": "https://https://docs.aiagentsforce.com//integrations/text_embedding/gigachat/", "Salute Devices": "https://https://docs.aiagentsforce.com//integrations/providers/salute_devices/"}, "OCIGenAIEmbeddings": {"Oracle Cloud Infrastructure Generative AI": "https://https://docs.aiagentsforce.com//integrations/text_embedding/oci_generative_ai/", "Oracle Cloud Infrastructure (OCI)": "https://https://docs.aiagentsforce.com//integrations/providers/oci/"}, "OVHCloudEmbeddings": {"OVHcloud": "https://https://docs.aiagentsforce.com//integrations/text_embedding/ovhcloud/"}, "FastEmbedEmbeddings": {"FastEmbed by Qdrant": "https://https://docs.aiagentsforce.com//integrations/text_embedding/fastembed/"}, "LlamaCppEmbeddings": {"Llama.cpp": "https://https://docs.aiagentsforce.com//integrations/providers/llamacpp/"}, "NLPCloudEmbeddings": {"NLP Cloud": "https://https://docs.aiagentsforce.com//integrations/text_embedding/nlp_cloud/", "NLPCloud": "https://https://docs.aiagentsforce.com//integrations/providers/nlpcloud/"}, "TextEmbedEmbeddings": {"TextEmbed - Embedding Inference Server": "https://https://docs.aiagentsforce.com//integrations/text_embedding/textembed/"}, "LaserEmbeddings": {"LASER Language-Agnostic SEntence Representations Embeddings by Meta AI": "https://https://docs.aiagentsforce.com//integrations/text_embedding/laser/", "Facebook - Meta": "https://https://docs.aiagentsforce.com//integrations/providers/facebook/"}, "OpenCLIPEmbeddings": {"OpenClip": "https://https://docs.aiagentsforce.com//integrations/text_embedding/open_clip/", "LanceDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/lancedb/", "SingleStoreDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/singlestoredb/"}, "TitanTakeoffEmbed": {"Titan Takeoff": "https://https://docs.aiagentsforce.com//integrations/text_embedding/titan_takeoff/"}, "MistralAIEmbeddings": {"MistralAIEmbeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/mistralai/", "MistralAI": "https://https://docs.aiagentsforce.com//integrations/providers/mistralai/"}, "SpacyEmbeddings": {"SpaCy": "https://https://docs.aiagentsforce.com//integrations/text_embedding/spacy_embedding/", "NanoPQ (Product Quantization)": "https://https://docs.aiagentsforce.com//integrations/retrievers/nanopq/", "spaCy": "https://https://docs.aiagentsforce.com//integrations/providers/spacy/"}, "DatabricksEmbeddings": {"Databricks": "https://https://docs.aiagentsforce.com//integrations/text_embedding/databricks/"}, "BaichuanTextEmbeddings": {"Baichuan Text Embeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/baichuan/", "Baichuan": "https://https://docs.aiagentsforce.com//integrations/providers/baichuan/"}, "TogetherEmbeddings": {"TogetherEmbeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/together/"}, "HuggingFaceInstructEmbeddings": {"Instruct Embeddings on Hugging Face": "https://https://docs.aiagentsforce.com//integrations/text_embedding/instruct_embeddings/", "Hugging Face": "https://https://docs.aiagentsforce.com//integrations/providers/huggingface/"}, "OracleEmbeddings": {"Oracle AI Vector Search: Generate Embeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/oracleai/", "OracleAI Vector Search": "https://https://docs.aiagentsforce.com//integrations/providers/oracleai/"}, "QianfanEmbeddingsEndpoint": {"Baidu Qianfan": "https://https://docs.aiagentsforce.com//integrations/text_embedding/baidu_qianfan_endpoint/", "ERNIE": "https://https://docs.aiagentsforce.com//integrations/text_embedding/ernie/", "Baidu": "https://https://docs.aiagentsforce.com//integrations/providers/baidu/", "Baidu Cloud ElasticSearch VectorSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/baiducloud_vector_search/"}, "EdenAiEmbeddings": {"EDEN AI": "https://https://docs.aiagentsforce.com//integrations/text_embedding/edenai/", "Eden AI": "https://https://docs.aiagentsforce.com//integrations/providers/edenai/"}, "JohnSnowLabsEmbeddings": {"John Snow Labs": "https://https://docs.aiagentsforce.com//integrations/text_embedding/johnsnowlabs_embedding/"}, "ErnieEmbeddings": {"ERNIE": "https://https://docs.aiagentsforce.com//integrations/text_embedding/ernie/"}, "ClarifaiEmbeddings": {"Clarifai": "https://https://docs.aiagentsforce.com//integrations/providers/clarifai/"}, "AzureOpenAIEmbeddings": {"AzureOpenAIEmbeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/azureopenai/", "AzureAISearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/azure_ai_search/", "Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Azure Cosmos DB No SQL": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azure_cosmos_db_no_sql/", "Azure AI Search": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azuresearch/"}, "InfinityEmbeddings": {"Infinity": "https://https://docs.aiagentsforce.com//integrations/providers/infinity/"}, "InfinityEmbeddingsLocal": {"Infinity": "https://https://docs.aiagentsforce.com//integrations/text_embedding/infinity/"}, "AwaEmbeddings": {"AwaDB": "https://https://docs.aiagentsforce.com//integrations/providers/awadb/"}, "VolcanoEmbeddings": {"Volc Engine": "https://https://docs.aiagentsforce.com//integrations/text_embedding/volcengine/"}, "MiniMaxEmbeddings": {"MiniMax": "https://https://docs.aiagentsforce.com//integrations/text_embedding/minimax/", "Minimax": "https://https://docs.aiagentsforce.com//integrations/providers/minimax/"}, "FakeEmbeddings": {"Fake Embeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/fake/", "DocArray": "https://https://docs.aiagentsforce.com//integrations/retrievers/docarray_retriever/", "Relyt": "https://https://docs.aiagentsforce.com//integrations/vectorstores/relyt/", "Tair": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tair/", "Tencent Cloud VectorDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tencentvectordb/", "Google Memorystore for Redis": "https://https://docs.aiagentsforce.com//integrations/vectorstores/google_memorystore_redis/", "PGVecto.rs": "https://https://docs.aiagentsforce.com//integrations/vectorstores/pgvecto_rs/", "Baidu VectorDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/baiduvectordb/"}, "ClovaEmbeddings": {"Clova Embeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/clova/"}, "NeMoEmbeddings": {"NVIDIA NeMo embeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/nemo/"}, "SparkLLMTextEmbeddings": {"SparkLLM Text Embeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/sparkllm/", "iFlytek": "https://https://docs.aiagentsforce.com//integrations/providers/iflytek/"}, "PremAIEmbeddings": {"PremAI": "https://https://docs.aiagentsforce.com//integrations/text_embedding/premai/"}, "KNNRetriever": {"Voyage AI": "https://https://docs.aiagentsforce.com//integrations/text_embedding/voyageai/", "kNN": "https://https://docs.aiagentsforce.com//integrations/retrievers/knn/"}, "SelfHostedEmbeddings": {"Self Hosted": "https://https://docs.aiagentsforce.com//integrations/text_embedding/self-hosted/"}, "SelfHostedHuggingFaceEmbeddings": {"Self Hosted": "https://https://docs.aiagentsforce.com//integrations/text_embedding/self-hosted/"}, "SelfHostedHuggingFaceInstructEmbeddings": {"Self Hosted": "https://https://docs.aiagentsforce.com//integrations/text_embedding/self-hosted/"}, "AnyscaleEmbeddings": {"Anyscale": "https://https://docs.aiagentsforce.com//integrations/providers/anyscale/"}, "EmbaasEmbeddings": {"Embaas": "https://https://docs.aiagentsforce.com//integrations/text_embedding/embaas/"}, "YandexGPTEmbeddings": {"YandexGPT": "https://https://docs.aiagentsforce.com//integrations/text_embedding/yandex/"}, "JinaEmbeddings": {"Jina": "https://https://docs.aiagentsforce.com//integrations/providers/jina/", "Jina Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/jina_rerank/"}, "AlephAlphaAsymmetricSemanticEmbedding": {"Aleph Alpha": "https://https://docs.aiagentsforce.com//integrations/providers/aleph_alpha/"}, "AlephAlphaSymmetricSemanticEmbedding": {"Aleph Alpha": "https://https://docs.aiagentsforce.com//integrations/providers/aleph_alpha/"}, "CloudflareWorkersAIEmbeddings": {"Cloudflare Workers AI": "https://https://docs.aiagentsforce.com//integrations/text_embedding/cloudflare_workersai/", "Cloudflare": "https://https://docs.aiagentsforce.com//integrations/providers/cloudflare/"}, "DashScopeEmbeddings": {"DashScope": "https://https://docs.aiagentsforce.com//integrations/text_embedding/dashscope/", "DashVector": "https://https://docs.aiagentsforce.com//integrations/vectorstores/dashvector/", "DashScope Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/dashscope_rerank/"}, "TensorflowHubEmbeddings": {"TensorFlow Hub": "https://https://docs.aiagentsforce.com//integrations/text_embedding/tensorflowhub/"}, "LlamafileEmbeddings": {"llamafile": "https://https://docs.aiagentsforce.com//integrations/text_embedding/llamafile/"}, "GradientEmbeddings": {"Gradient": "https://https://docs.aiagentsforce.com//integrations/providers/gradient/"}, "ModelScopeEmbeddings": {"ModelScope": "https://https://docs.aiagentsforce.com//integrations/providers/modelscope/"}, "SagemakerEndpointEmbeddings": {"SageMaker": "https://https://docs.aiagentsforce.com//integrations/text_embedding/sagemaker-endpoint/", "AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/"}, "EmbeddingsContentHandler": {"SageMaker": "https://https://docs.aiagentsforce.com//integrations/text_embedding/sagemaker-endpoint/"}, "DocArrayInMemorySearch": {"UpstageEmbeddings": "https://https://docs.aiagentsforce.com//integrations/text_embedding/upstage/", "DocArray InMemorySearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/docarray_in_memory/"}, "SambaStudioEmbeddings": {"SambaNova": "https://https://docs.aiagentsforce.com//integrations/text_embedding/sambanova/"}, "OpenVINOEmbeddings": {"OpenVINO": "https://https://docs.aiagentsforce.com//integrations/text_embedding/openvino/", "OpenVINO Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/openvino_rerank/"}, "OpenVINOBgeEmbeddings": {"OpenVINO": "https://https://docs.aiagentsforce.com//integrations/text_embedding/openvino/"}, "LocalAIEmbeddings": {"LocalAI": "https://https://docs.aiagentsforce.com//integrations/text_embedding/localai/"}, "AzureAISearchRetriever": {"AzureAISearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/azure_ai_search/", "Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/"}, "AzureSearch": {"AzureAISearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/azure_ai_search/", "Azure AI Search": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azuresearch/"}, "RePhraseQueryRetriever": {"RePhraseQuery": "https://https://docs.aiagentsforce.com//integrations/retrievers/re_phrase/"}, "YouSearchAPIWrapper": {"You.com": "https://https://docs.aiagentsforce.com//integrations/retrievers/you-retriever/", "You.com Search": "https://https://docs.aiagentsforce.com//integrations/tools/you/"}, "YouRetriever": {"You.com": "https://https://docs.aiagentsforce.com//integrations/retrievers/you-retriever/"}, "Kinetica": {"Kinetica Vectorstore based Retriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/kinetica/", "Kinetica": "https://https://docs.aiagentsforce.com//integrations/providers/kinetica/", "Kinetica Vectorstore API": "https://https://docs.aiagentsforce.com//integrations/vectorstores/kinetica/"}, "KineticaSettings": {"Kinetica Vectorstore based Retriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/kinetica/", "Kinetica Vectorstore API": "https://https://docs.aiagentsforce.com//integrations/vectorstores/kinetica/", "Kinetica": "https://https://docs.aiagentsforce.com//integrations/document_loaders/kinetica/"}, "Jaguar": {"JaguarDB Vector Database": "https://https://docs.aiagentsforce.com//integrations/retrievers/jaguar/", "Jaguar": "https://https://docs.aiagentsforce.com//integrations/providers/jaguar/", "Jaguar Vector Database": "https://https://docs.aiagentsforce.com//integrations/vectorstores/jaguar/"}, "BaseStore": {"Fleet AI Context": "https://https://docs.aiagentsforce.com//integrations/retrievers/fleet_context/"}, "VectorStore": {"Fleet AI Context": "https://https://docs.aiagentsforce.com//integrations/retrievers/fleet_context/"}, "AskNewsRetriever": {"AskNews": "https://https://docs.aiagentsforce.com//integrations/retrievers/asknews/"}, "LLMLinguaCompressor": {"LLMLingua Document Compressor": "https://https://docs.aiagentsforce.com//integrations/retrievers/llmlingua/"}, "ElasticSearchBM25Retriever": {"ElasticSearch BM25": "https://https://docs.aiagentsforce.com//integrations/retrievers/elastic_search_bm25/"}, "OutlineRetriever": {"Outline": "https://https://docs.aiagentsforce.com//integrations/providers/outline/"}, "ZepMemory": {"Zep Open Source": "https://https://docs.aiagentsforce.com//integrations/retrievers/zep_memorystore/", "Zep Open Source Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory/"}, "SearchScope": {"Zep Open Source": "https://https://docs.aiagentsforce.com//integrations/retrievers/zep_memorystore/"}, "ZepRetriever": {"Zep Open Source": "https://https://docs.aiagentsforce.com//integrations/retrievers/zep_memorystore/", "Zep Open Source Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory/"}, "VespaRetriever": {"Vespa": "https://https://docs.aiagentsforce.com//integrations/providers/vespa/"}, "AmazonKendraRetriever": {"Amazon Kendra": "https://https://docs.aiagentsforce.com//integrations/retrievers/amazon_kendra_retriever/", "AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/"}, "AmazonKnowledgeBasesRetriever": {"Bedrock (Knowledge Bases) Retriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/bedrock/", "AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/"}, "Bedrock": {"Bedrock (Knowledge Bases) Retriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/bedrock/"}, "CohereEmbeddings": {"Cohere reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/cohere-reranker/"}, "Cohere": {"Cohere reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/cohere-reranker/", "self-query-qdrant": "https://https://docs.aiagentsforce.com//templates/self-query-qdrant/"}, "ZepCloudMemory": {"Zep Cloud": "https://https://docs.aiagentsforce.com//integrations/retrievers/zep_cloud_memorystore/", "ZepCloudChatMessageHistory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_cloud_chat_message_history/", "Zep Cloud Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory_cloud/"}, "ZepCloudRetriever": {"Zep Cloud": "https://https://docs.aiagentsforce.com//integrations/retrievers/zep_cloud_memorystore/", "Zep Cloud Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory_cloud/", "Zep": "https://https://docs.aiagentsforce.com//integrations/providers/zep/"}, "NeuralDBRetriever": {"**NeuralDB**": "https://https://docs.aiagentsforce.com//integrations/retrievers/thirdai_neuraldb/"}, "SingleStoreDB": {"SingleStoreDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/singlestoredb/"}, "MetalRetriever": {"Metal": "https://https://docs.aiagentsforce.com//integrations/providers/metal/"}, "BreebsRetriever": {"BREEBS (Open Knowledge)": "https://https://docs.aiagentsforce.com//integrations/retrievers/breebs/"}, "NanoPQRetriever": {"NanoPQ (Product Quantization)": "https://https://docs.aiagentsforce.com//integrations/retrievers/nanopq/"}, "ChatGPTPluginRetriever": {"ChatGPT plugin": "https://https://docs.aiagentsforce.com//integrations/retrievers/chatgpt-plugin/", "OpenAI": "https://https://docs.aiagentsforce.com//integrations/providers/openai/"}, "KayAiRetriever": {"SEC filing": "https://https://docs.aiagentsforce.com//integrations/retrievers/sec_filings/", "Kay.ai": "https://https://docs.aiagentsforce.com//integrations/retrievers/kay/"}, "DriaRetriever": {"Dria": "https://https://docs.aiagentsforce.com//integrations/retrievers/dria_index/"}, "DocArrayRetriever": {"DocArray": "https://https://docs.aiagentsforce.com//integrations/retrievers/docarray_retriever/"}, "SVMRetriever": {"SVM": "https://https://docs.aiagentsforce.com//integrations/retrievers/svm/", "scikit-learn": "https://https://docs.aiagentsforce.com//integrations/providers/sklearn/"}, "TavilySearchAPIRetriever": {"TavilySearchAPIRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/tavily/"}, "PineconeHybridSearchRetriever": {"Pinecone Hybrid Search": "https://https://docs.aiagentsforce.com//integrations/retrievers/pinecone_hybrid_search/", "Pinecone": "https://https://docs.aiagentsforce.com//integrations/providers/pinecone/"}, "DeepLake": {"Activeloop Deep Memory": "https://https://docs.aiagentsforce.com//integrations/retrievers/activeloop/", "Deep Lake": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/activeloop_deeplake_self_query/", "Activeloop Deep Lake": "https://https://docs.aiagentsforce.com//integrations/vectorstores/activeloop_deeplake/"}, "AsyncHtmlLoader": {"Activeloop Deep Memory": "https://https://docs.aiagentsforce.com//integrations/retrievers/activeloop/", "HTML to text": "https://https://docs.aiagentsforce.com//integrations/document_transformers/html2text/", "Markdownify": "https://https://docs.aiagentsforce.com//integrations/document_transformers/markdownify/", "AsyncHtml": "https://https://docs.aiagentsforce.com//integrations/document_loaders/async_html/"}, "Html2TextTransformer": {"Activeloop Deep Memory": "https://https://docs.aiagentsforce.com//integrations/retrievers/activeloop/", "HTML to text": "https://https://docs.aiagentsforce.com//integrations/document_transformers/html2text/", "Async Chromium": "https://https://docs.aiagentsforce.com//integrations/document_loaders/async_chromium/"}, "create_structured_output_chain": {"Activeloop Deep Memory": "https://https://docs.aiagentsforce.com//integrations/retrievers/activeloop/"}, "HumanMessagePromptTemplate": {"Activeloop Deep Memory": "https://https://docs.aiagentsforce.com//integrations/retrievers/activeloop/", "JinaChat": "https://https://docs.aiagentsforce.com//integrations/chat/jinachat/", "Llama2Chat": "https://https://docs.aiagentsforce.com//integrations/chat/llama2_chat/", "vLLM Chat": "https://https://docs.aiagentsforce.com//integrations/chat/vllm/", "Context": "https://https://docs.aiagentsforce.com//integrations/callbacks/context/", "Yellowbrick": "https://https://docs.aiagentsforce.com//integrations/vectorstores/yellowbrick/", "Figma": "https://https://docs.aiagentsforce.com//integrations/document_loaders/figma/"}, "PubMedRetriever": {"PubMed": "https://https://docs.aiagentsforce.com//integrations/providers/pubmed/"}, "WeaviateHybridSearchRetriever": {"Weaviate Hybrid Search": "https://https://docs.aiagentsforce.com//integrations/retrievers/weaviate-hybrid/"}, "EmbedchainRetriever": {"Embedchain": "https://https://docs.aiagentsforce.com//integrations/retrievers/embedchain/"}, "ArxivRetriever": {"ArxivRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/arxiv/", "Arxiv": "https://https://docs.aiagentsforce.com//integrations/providers/arxiv/"}, "QdrantSparseVectorRetriever": {"Qdrant Sparse Vector": "https://https://docs.aiagentsforce.com//integrations/retrievers/qdrant-sparse/"}, "DeterministicFakeEmbedding": {"ElasticsearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/elasticsearch_retriever/"}, "Embeddings": {"ElasticsearchRetriever": "https://https://docs.aiagentsforce.com//integrations/retrievers/elasticsearch_retriever/", "Infinispan": "https://https://docs.aiagentsforce.com//integrations/vectorstores/infinispanvs/"}, "RememberizerRetriever": {"Rememberizer": "https://https://docs.aiagentsforce.com//integrations/retrievers/rememberizer/"}, "ArceeRetriever": {"Arcee": "https://https://docs.aiagentsforce.com//integrations/providers/arcee/"}, "FlashrankRerank": {"FlashRank reranker": "https://https://docs.aiagentsforce.com//integrations/retrievers/flashrank-reranker/", "UpTrain": "https://https://docs.aiagentsforce.com//integrations/callbacks/uptrain/"}, "ChaindeskRetriever": {"Chaindesk": "https://https://docs.aiagentsforce.com//integrations/providers/chaindesk/"}, "MergerRetriever": {"LOTR (Merger Retriever)": "https://https://docs.aiagentsforce.com//integrations/retrievers/merger_retriever/"}, "EmbeddingsClusteringFilter": {"LOTR (Merger Retriever)": "https://https://docs.aiagentsforce.com//integrations/retrievers/merger_retriever/"}, "TFIDFRetriever": {"TF-IDF": "https://https://docs.aiagentsforce.com//integrations/retrievers/tf_idf/"}, "PGVector": {"PGVector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/pgvector_self_query/", "PGVector": "https://https://docs.aiagentsforce.com//integrations/providers/pgvector/"}, "Weaviate": {"Weaviate": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/weaviate_self_query/"}, "Vectara": {"Vectara self-querying ": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/vectara_self_query/", "Vectara": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vectara/", "Vectara Chat": "https://https://docs.aiagentsforce.com//integrations/providers/vectara/vectara_chat/"}, "HanaDB": {"SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sap_hanavector/", "SAP": "https://https://docs.aiagentsforce.com//integrations/providers/sap/"}, "HanaTranslator": {"SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/hanavector_self_query/"}, "DashVector": {"DashVector": "https://https://docs.aiagentsforce.com//integrations/vectorstores/dashvector/"}, "Tongyi": {"DashVector": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/dashvector/", "Alibaba Cloud": "https://https://docs.aiagentsforce.com//integrations/providers/alibaba_cloud/", "Tongyi Qwen": "https://https://docs.aiagentsforce.com//integrations/llms/tongyi/"}, "DatabricksVectorSearch": {"Databricks Vector Search": "https://https://docs.aiagentsforce.com//integrations/vectorstores/databricks_vector_search/"}, "Dingo": {"DingoDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/dingo/"}, "OpenSearchVectorSearch": {"OpenSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/opensearch/", "AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/"}, "ConnectionParams": {"Tencent Cloud VectorDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tencentvectordb/", "Baidu VectorDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/baiduvectordb/"}, "MetaField": {"Tencent Cloud VectorDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tencentvectordb/"}, "TencentVectorDB": {"Tencent Cloud VectorDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tencentvectordb/", "Tencent": "https://https://docs.aiagentsforce.com//integrations/providers/tencent/"}, "TimescaleVector": {"Timescale Vector (Postgres) ": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/timescalevector_self_query/", "Timescale Vector (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/timescalevector/"}, "AstraDB": {"Astra DB (Cassandra)": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/astradb/"}, "SupabaseVectorStore": {"Supabase (Postgres)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/supabase/"}, "Redis": {"Redis": "https://https://docs.aiagentsforce.com//integrations/vectorstores/redis/"}, "MyScale": {"MyScale": "https://https://docs.aiagentsforce.com//integrations/vectorstores/myscale/"}, "MongoDBAtlasVectorSearch": {"MongoDB Atlas": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/mongodb_atlas/"}, "Qdrant": {"Qdrant": "https://https://docs.aiagentsforce.com//integrations/retrievers/self_query/qdrant_self_query/", "Identity-enabled RAG using PebbloRetrievalQA": "https://https://docs.aiagentsforce.com//integrations/providers/pebblo/pebblo_retrieval_qa/"}, "AzureChatOpenAI": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "OpenAI": "https://https://docs.aiagentsforce.com//integrations/providers/openai/", "Bing Search": "https://https://docs.aiagentsforce.com//integrations/tools/bing_search/", "AzureChatOpenAI": "https://https://docs.aiagentsforce.com//integrations/chat/azure_chat_openai/", "Azure Cosmos DB for Apache Gremlin": "https://https://docs.aiagentsforce.com//integrations/graphs/azure_cosmosdb_gremlin/"}, "AzureMLOnlineEndpoint": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Azure ML": "https://https://docs.aiagentsforce.com//integrations/llms/azure_ml/"}, "AzureOpenAI": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "OpenAI": "https://https://docs.aiagentsforce.com//integrations/providers/openai/", "Azure OpenAI": "https://https://docs.aiagentsforce.com//integrations/llms/azure_openai/"}, "AzureAIDataLoader": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Azure AI Data": "https://https://docs.aiagentsforce.com//integrations/document_loaders/azure_ai_data/"}, "AzureBlobStorageContainerLoader": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Azure Blob Storage Container": "https://https://docs.aiagentsforce.com//integrations/document_loaders/azure_blob_storage_container/"}, "AzureBlobStorageFileLoader": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Azure Blob Storage File": "https://https://docs.aiagentsforce.com//integrations/document_loaders/azure_blob_storage_file/"}, "OneDriveLoader": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Microsoft OneDrive": "https://https://docs.aiagentsforce.com//integrations/document_loaders/microsoft_onedrive/"}, "OneDriveFileLoader": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/"}, "UnstructuredWordDocumentLoader": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "Microsoft Word": "https://https://docs.aiagentsforce.com//integrations/document_loaders/microsoft_word/"}, "UnstructuredExcelLoader": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "Microsoft Excel": "https://https://docs.aiagentsforce.com//integrations/document_loaders/microsoft_excel/"}, "SharePointLoader": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Microsoft SharePoint": "https://https://docs.aiagentsforce.com//integrations/document_loaders/microsoft_sharepoint/"}, "UnstructuredPowerPointLoader": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "Microsoft PowerPoint": "https://https://docs.aiagentsforce.com//integrations/document_loaders/microsoft_powerpoint/"}, "OneNoteLoader": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Microsoft OneNote": "https://https://docs.aiagentsforce.com//integrations/document_loaders/microsoft_onenote/"}, "AzureCosmosDBVectorSearch": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Azure Cosmos DB Mongo vCore": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azure_cosmos_db/"}, "BingSearchResults": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Bing Search": "https://https://docs.aiagentsforce.com//integrations/tools/bing_search/"}, "BingSearchAPIWrapper": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Bing Search": "https://https://docs.aiagentsforce.com//integrations/tools/bing_search/"}, "O365Toolkit": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Office365 Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/office365/"}, "PowerBIToolkit": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "PowerBI Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/powerbi/"}, "PowerBIDataset": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "PowerBI Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/powerbi/"}, "PlayWrightBrowserToolkit": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "PlayWright Browser Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/playwright/"}, "GremlinGraph": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Azure Cosmos DB for Apache Gremlin": "https://https://docs.aiagentsforce.com//integrations/graphs/azure_cosmosdb_gremlin/"}, "GraphDocument": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Azure Cosmos DB for Apache Gremlin": "https://https://docs.aiagentsforce.com//integrations/graphs/azure_cosmosdb_gremlin/"}, "Node": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Azure Cosmos DB for Apache Gremlin": "https://https://docs.aiagentsforce.com//integrations/graphs/azure_cosmosdb_gremlin/"}, "Relationship": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/", "Azure Cosmos DB for Apache Gremlin": "https://https://docs.aiagentsforce.com//integrations/graphs/azure_cosmosdb_gremlin/"}, "PresidioAnonymizer": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/"}, "PresidioReversibleAnonymizer": {"Microsoft": "https://https://docs.aiagentsforce.com//integrations/providers/microsoft/"}, "BedrockLLM": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "Bedrock": "https://https://docs.aiagentsforce.com//integrations/llms/bedrock/"}, "AmazonAPIGateway": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "Amazon API Gateway": "https://https://docs.aiagentsforce.com//integrations/llms/amazon_api_gateway/"}, "SagemakerEndpoint": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "SageMakerEndpoint": "https://https://docs.aiagentsforce.com//integrations/llms/sagemaker/"}, "ContentHandlerBase": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/"}, "S3DirectoryLoader": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "AWS S3 Directory": "https://https://docs.aiagentsforce.com//integrations/document_loaders/aws_s3_directory/"}, "S3FileLoader": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "AWS S3 File": "https://https://docs.aiagentsforce.com//integrations/document_loaders/aws_s3_file/"}, "AmazonTextractPDFLoader": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "Amazon Textract ": "https://https://docs.aiagentsforce.com//integrations/document_loaders/amazon_textract/"}, "AthenaLoader": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "Athena": "https://https://docs.aiagentsforce.com//integrations/document_loaders/athena/"}, "GlueCatalogLoader": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "Glue Catalog": "https://https://docs.aiagentsforce.com//integrations/document_loaders/glue_catalog/"}, "DynamoDBChatMessageHistory": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "AWS DynamoDB": "https://https://docs.aiagentsforce.com//integrations/memory/aws_dynamodb/"}, "NeptuneGraph": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "Amazon Neptune with Cypher": "https://https://docs.aiagentsforce.com//integrations/graphs/amazon_neptune_open_cypher/"}, "NeptuneAnalyticsGraph": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "Amazon Neptune with Cypher": "https://https://docs.aiagentsforce.com//integrations/graphs/amazon_neptune_open_cypher/"}, "NeptuneOpenCypherQAChain": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "Amazon Neptune with Cypher": "https://https://docs.aiagentsforce.com//integrations/graphs/amazon_neptune_open_cypher/"}, "NeptuneRdfGraph": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "Amazon Neptune with SPARQL": "https://https://docs.aiagentsforce.com//integrations/graphs/amazon_neptune_sparql/"}, "NeptuneSparqlQAChain": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "Amazon Neptune with SPARQL": "https://https://docs.aiagentsforce.com//integrations/graphs/amazon_neptune_sparql/"}, "SageMakerCallbackHandler": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/", "SageMaker Tracking": "https://https://docs.aiagentsforce.com//integrations/callbacks/sagemaker_tracking/"}, "AmazonComprehendModerationChain": {"AWS": "https://https://docs.aiagentsforce.com//integrations/providers/aws/"}, "HuggingFaceHubEmbeddings": {"Hugging Face": "https://https://docs.aiagentsforce.com//integrations/providers/huggingface/"}, "HuggingFaceDatasetLoader": {"Hugging Face": "https://https://docs.aiagentsforce.com//integrations/providers/huggingface/", "HuggingFace dataset": "https://https://docs.aiagentsforce.com//integrations/document_loaders/hugging_face_dataset/"}, "load_huggingface_tool": {"Hugging Face": "https://https://docs.aiagentsforce.com//integrations/providers/huggingface/", "HuggingFace Hub Tools": "https://https://docs.aiagentsforce.com//integrations/tools/huggingface_tools/"}, "ChatGPTLoader": {"OpenAI": "https://https://docs.aiagentsforce.com//integrations/providers/openai/", "ChatGPT Data": "https://https://docs.aiagentsforce.com//integrations/document_loaders/chatgpt_loader/"}, "DallEAPIWrapper": {"OpenAI": "https://https://docs.aiagentsforce.com//integrations/providers/openai/", "Dall-E Image Generator": "https://https://docs.aiagentsforce.com//integrations/tools/dalle_image_generator/"}, "OpenAIModerationChain": {"OpenAI": "https://https://docs.aiagentsforce.com//integrations/providers/openai/"}, "GooglePalmEmbeddings": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/"}, "ScaNN": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "ScaNN": "https://https://docs.aiagentsforce.com//integrations/vectorstores/scann/"}, "GoogleVertexAISearchRetriever": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/"}, "GoogleDocumentAIWarehouseRetriever": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/"}, "GoogleFinanceQueryRun": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "Google Finance": "https://https://docs.aiagentsforce.com//integrations/tools/google_finance/"}, "GoogleFinanceAPIWrapper": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "Google Finance": "https://https://docs.aiagentsforce.com//integrations/tools/google_finance/"}, "GoogleJobsQueryRun": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "Google Jobs": "https://https://docs.aiagentsforce.com//integrations/tools/google_jobs/"}, "GoogleLensQueryRun": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "Google Lens": "https://https://docs.aiagentsforce.com//integrations/tools/google_lens/"}, "GoogleLensAPIWrapper": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "Google Lens": "https://https://docs.aiagentsforce.com//integrations/tools/google_lens/"}, "GooglePlacesTool": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "Google Places": "https://https://docs.aiagentsforce.com//integrations/tools/google_places/"}, "GoogleScholarQueryRun": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "Google Scholar": "https://https://docs.aiagentsforce.com//integrations/tools/google_scholar/"}, "GoogleScholarAPIWrapper": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "Google Scholar": "https://https://docs.aiagentsforce.com//integrations/tools/google_scholar/"}, "GoogleTrendsQueryRun": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "Google Trends": "https://https://docs.aiagentsforce.com//integrations/tools/google_trends/"}, "GoogleTrendsAPIWrapper": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "Google Trends": "https://https://docs.aiagentsforce.com//integrations/tools/google_trends/"}, "SearchApiAPIWrapper": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "SearchApi": "https://https://docs.aiagentsforce.com//integrations/providers/searchapi/"}, "SerpAPIWrapper": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "SerpAPI": "https://https://docs.aiagentsforce.com//integrations/providers/serpapi/", "MLX": "https://https://docs.aiagentsforce.com//integrations/chat/mlx/"}, "GoogleSerperAPIWrapper": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "Google Serper": "https://https://docs.aiagentsforce.com//integrations/tools/google_serper/", "Serper - Google Search API": "https://https://docs.aiagentsforce.com//integrations/providers/google_serper/"}, "YouTubeSearchTool": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "YouTube": "https://https://docs.aiagentsforce.com//integrations/tools/youtube/"}, "YoutubeAudioLoader": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "YouTube audio": "https://https://docs.aiagentsforce.com//integrations/document_loaders/youtube_audio/"}, "OpenAIWhisperParser": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "YouTube audio": "https://https://docs.aiagentsforce.com//integrations/document_loaders/youtube_audio/"}, "YoutubeLoader": {"Google": "https://https://docs.aiagentsforce.com//integrations/providers/google/", "YouTube": "https://https://docs.aiagentsforce.com//integrations/providers/youtube/", "YouTube transcripts": "https://https://docs.aiagentsforce.com//integrations/document_loaders/youtube_transcript/", "Build a Query Analysis System": "https://https://docs.aiagentsforce.com//tutorials/query_analysis/"}, "AnthropicLLM": {"Anthropic": "https://https://docs.aiagentsforce.com//integrations/providers/anthropic/", "AnthropicLLM": "https://https://docs.aiagentsforce.com//integrations/llms/anthropic/"}, "AIPluginTool": {"ChatGPT Plugins": "https://https://docs.aiagentsforce.com//integrations/tools/chatgpt_plugins/"}, "AgentType": {"ChatGPT Plugins": "https://https://docs.aiagentsforce.com//integrations/tools/chatgpt_plugins/", "Connery Toolkit and Tools": "https://https://docs.aiagentsforce.com//integrations/tools/connery/", "Jira Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/jira/", "Google Jobs": "https://https://docs.aiagentsforce.com//integrations/tools/google_jobs/", "Google Serper": "https://https://docs.aiagentsforce.com//integrations/tools/google_serper/", "Azure Cognitive Services Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/azure_cognitive_services/", "E2B Data Analysis": "https://https://docs.aiagentsforce.com//integrations/tools/e2b_data_analysis/", "Human as a tool": "https://https://docs.aiagentsforce.com//integrations/tools/human_tools/", "Natural Language API Toolkits": "https://https://docs.aiagentsforce.com//integrations/tools/openapi_nla/", "Steam Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/steam/", "Yahoo Finance News": "https://https://docs.aiagentsforce.com//integrations/tools/yahoo_finance_news/", "Google Finance": "https://https://docs.aiagentsforce.com//integrations/tools/google_finance/", "ClickUp Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/clickup/", "AWS Lambda": "https://https://docs.aiagentsforce.com//integrations/tools/awslambda/", "Google Drive": "https://https://docs.aiagentsforce.com//integrations/tools/google_drive/", "OpenWeatherMap": "https://https://docs.aiagentsforce.com//integrations/tools/openweathermap/", "AINetwork Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/ainetwork/", "Memorize": "https://https://docs.aiagentsforce.com//integrations/tools/memorize/", "PlayWright Browser Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/playwright/", "Eleven Labs Text2Speech": "https://https://docs.aiagentsforce.com//integrations/tools/eleven_labs_tts/", "Office365 Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/office365/", "Bearly Code Interpreter": "https://https://docs.aiagentsforce.com//integrations/tools/bearly/", "Pandas Dataframe": "https://https://docs.aiagentsforce.com//integrations/tools/pandas/", "Zapier Natural Language Actions": "https://https://docs.aiagentsforce.com//integrations/tools/zapier/", "NASA Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/nasa/", "Connery Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/connery_toolkit/", "GraphQL": "https://https://docs.aiagentsforce.com//integrations/tools/graphql/", "SearchApi": "https://https://docs.aiagentsforce.com//integrations/providers/searchapi/", "Eden AI": "https://https://docs.aiagentsforce.com//integrations/tools/edenai_tools/", "Gitlab Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/gitlab/", "Shell (bash)": "https://https://docs.aiagentsforce.com//integrations/tools/bash/", "Zep Open Source Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory/", "Xata": "https://https://docs.aiagentsforce.com//integrations/memory/xata_chat_message_history/", "Zep Cloud Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory_cloud/", "LLMonitor": "https://https://docs.aiagentsforce.com//integrations/callbacks/llmonitor/", "Comet Tracing": "https://https://docs.aiagentsforce.com//integrations/callbacks/comet_tracing/", "Argilla": "https://https://docs.aiagentsforce.com//integrations/callbacks/argilla/", "Aim": "https://https://docs.aiagentsforce.com//integrations/providers/aim_tracking/", "Weights & Biases": "https://https://docs.aiagentsforce.com//integrations/providers/wandb_tracking/", "MLflow": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow_tracking/", "Serper - Google Search API": "https://https://docs.aiagentsforce.com//integrations/providers/google_serper/", "Flyte": "https://https://docs.aiagentsforce.com//integrations/providers/flyte/", "WandB Tracing": "https://https://docs.aiagentsforce.com//integrations/providers/wandb_tracing/", "ClearML": "https://https://docs.aiagentsforce.com//integrations/providers/clearml_tracking/", "Amazon API Gateway": "https://https://docs.aiagentsforce.com//integrations/llms/amazon_api_gateway/"}, "initialize_agent": {"ChatGPT Plugins": "https://https://docs.aiagentsforce.com//integrations/tools/chatgpt_plugins/", "Connery Toolkit and Tools": "https://https://docs.aiagentsforce.com//integrations/tools/connery/", "Jira Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/jira/", "Google Jobs": "https://https://docs.aiagentsforce.com//integrations/tools/google_jobs/", "Google Serper": "https://https://docs.aiagentsforce.com//integrations/tools/google_serper/", "Azure Cognitive Services Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/azure_cognitive_services/", "E2B Data Analysis": "https://https://docs.aiagentsforce.com//integrations/tools/e2b_data_analysis/", "Human as a tool": "https://https://docs.aiagentsforce.com//integrations/tools/human_tools/", "Natural Language API Toolkits": "https://https://docs.aiagentsforce.com//integrations/tools/openapi_nla/", "Steam Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/steam/", "Yahoo Finance News": "https://https://docs.aiagentsforce.com//integrations/tools/yahoo_finance_news/", "Google Finance": "https://https://docs.aiagentsforce.com//integrations/tools/google_finance/", "ClickUp Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/clickup/", "AWS Lambda": "https://https://docs.aiagentsforce.com//integrations/tools/awslambda/", "Google Drive": "https://https://docs.aiagentsforce.com//integrations/tools/google_drive/", "OpenWeatherMap": "https://https://docs.aiagentsforce.com//integrations/tools/openweathermap/", "AINetwork Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/ainetwork/", "Memorize": "https://https://docs.aiagentsforce.com//integrations/tools/memorize/", "PlayWright Browser Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/playwright/", "Eleven Labs Text2Speech": "https://https://docs.aiagentsforce.com//integrations/tools/eleven_labs_tts/", "Office365 Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/office365/", "Bearly Code Interpreter": "https://https://docs.aiagentsforce.com//integrations/tools/bearly/", "Zapier Natural Language Actions": "https://https://docs.aiagentsforce.com//integrations/tools/zapier/", "NASA Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/nasa/", "Connery Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/connery_toolkit/", "GraphQL": "https://https://docs.aiagentsforce.com//integrations/tools/graphql/", "SearchApi": "https://https://docs.aiagentsforce.com//integrations/providers/searchapi/", "Gradio": "https://https://docs.aiagentsforce.com//integrations/tools/gradio_tools/", "SceneXplain": "https://https://docs.aiagentsforce.com//integrations/tools/sceneXplain/", "Eden AI": "https://https://docs.aiagentsforce.com//integrations/tools/edenai_tools/", "Dall-E Image Generator": "https://https://docs.aiagentsforce.com//integrations/tools/dalle_image_generator/", "Gitlab Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/gitlab/", "Shell (bash)": "https://https://docs.aiagentsforce.com//integrations/tools/bash/", "Zep Open Source Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory/", "Xata": "https://https://docs.aiagentsforce.com//integrations/memory/xata_chat_message_history/", "Zep Cloud Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory_cloud/", "LLMonitor": "https://https://docs.aiagentsforce.com//integrations/callbacks/llmonitor/", "SageMaker Tracking": "https://https://docs.aiagentsforce.com//integrations/callbacks/sagemaker_tracking/", "Comet Tracing": "https://https://docs.aiagentsforce.com//integrations/callbacks/comet_tracing/", "Argilla": "https://https://docs.aiagentsforce.com//integrations/callbacks/argilla/", "Comet": "https://https://docs.aiagentsforce.com//integrations/providers/comet_tracking/", "Aim": "https://https://docs.aiagentsforce.com//integrations/providers/aim_tracking/", "Weights & Biases": "https://https://docs.aiagentsforce.com//integrations/providers/wandb_tracking/", "MLflow": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow_tracking/", "Serper - Google Search API": "https://https://docs.aiagentsforce.com//integrations/providers/google_serper/", "Flyte": "https://https://docs.aiagentsforce.com//integrations/providers/flyte/", "WandB Tracing": "https://https://docs.aiagentsforce.com//integrations/providers/wandb_tracing/", "ClearML": "https://https://docs.aiagentsforce.com//integrations/providers/clearml_tracking/", "Amazon API Gateway": "https://https://docs.aiagentsforce.com//integrations/llms/amazon_api_gateway/"}, "DataForSeoAPIWrapper": {"DataForSEO": "https://https://docs.aiagentsforce.com//integrations/providers/dataforseo/"}, "Tool": {"DataForSEO": "https://https://docs.aiagentsforce.com//integrations/tools/dataforseo/", "Python REPL": "https://https://docs.aiagentsforce.com//integrations/tools/python/", "Google Serper": "https://https://docs.aiagentsforce.com//integrations/tools/google_serper/", "SerpAPI": "https://https://docs.aiagentsforce.com//integrations/tools/serpapi/", "SearchApi": "https://https://docs.aiagentsforce.com//integrations/providers/searchapi/", "Google Search": "https://https://docs.aiagentsforce.com//integrations/tools/google_search/", "Reddit Search ": "https://https://docs.aiagentsforce.com//integrations/tools/reddit_search/", "Ionic Shopping Tool": "https://https://docs.aiagentsforce.com//integrations/tools/ionic_shopping/", "Zep Open Source Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory/", "Zep Cloud Memory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_memory_cloud/", "Serper - Google Search API": "https://https://docs.aiagentsforce.com//integrations/providers/google_serper/", "Bittensor": "https://https://docs.aiagentsforce.com//integrations/llms/bittensor/"}, "ConneryToolkit": {"Connery Toolkit and Tools": "https://https://docs.aiagentsforce.com//integrations/tools/connery/", "Connery Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/connery_toolkit/"}, "ConneryService": {"Connery Toolkit and Tools": "https://https://docs.aiagentsforce.com//integrations/tools/connery/", "Connery Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/connery_toolkit/"}, "DataheraldAPIWrapper": {"Dataherald": "https://https://docs.aiagentsforce.com//integrations/providers/dataherald/"}, "SearxSearchWrapper": {"SearxNG Search": "https://https://docs.aiagentsforce.com//integrations/tools/searx_search/", "SearxNG Search API": "https://https://docs.aiagentsforce.com//integrations/providers/searx/"}, "JiraToolkit": {"Jira Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/jira/"}, "JiraAPIWrapper": {"Jira Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/jira/"}, "PythonREPL": {"Python REPL": "https://https://docs.aiagentsforce.com//integrations/tools/python/"}, "GoogleJobsAPIWrapper": {"Google Jobs": "https://https://docs.aiagentsforce.com//integrations/tools/google_jobs/"}, "InfobipAPIWrapper": {"Infobip": "https://https://docs.aiagentsforce.com//integrations/tools/infobip/"}, "create_openai_functions_agent": {"Infobip": "https://https://docs.aiagentsforce.com//integrations/tools/infobip/", "AskNews": "https://https://docs.aiagentsforce.com//integrations/tools/asknews/", "Polygon IO Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/polygon_toolkit/", "Semantic Scholar API Tool": "https://https://docs.aiagentsforce.com//integrations/tools/semanticscholar/", "Passio NutritionAI": "https://https://docs.aiagentsforce.com//integrations/tools/passio_nutrition_ai/", "MultiOn Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/multion/", "You.com Search": "https://https://docs.aiagentsforce.com//integrations/tools/you/", "Polygon IO Toolkit and Tools": "https://https://docs.aiagentsforce.com//integrations/tools/polygon/"}, "AskNewsSearch": {"AskNews": "https://https://docs.aiagentsforce.com//integrations/tools/asknews/"}, "create_pbi_agent": {"PowerBI Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/powerbi/"}, "AzureCognitiveServicesToolkit": {"Azure Cognitive Services Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/azure_cognitive_services/"}, "E2BDataAnalysisTool": {"E2B Data Analysis": "https://https://docs.aiagentsforce.com//integrations/tools/e2b_data_analysis/"}, "SQLDatabaseToolkit": {"SQLDatabase Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/sql_database/", "CnosDB": "https://https://docs.aiagentsforce.com//integrations/providers/cnosdb/", "Build a Question/Answering system over SQL data": "https://https://docs.aiagentsforce.com//tutorials/sql_qa/"}, "HumanInputRun": {"Human as a tool": "https://https://docs.aiagentsforce.com//integrations/tools/human_tools/"}, "FinancialDatasetsToolkit": {"FinancialDatasets Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/financial_datasets/"}, "FinancialDatasetsAPIWrapper": {"FinancialDatasets Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/financial_datasets/"}, "NLAToolkit": {"Natural Language API Toolkits": "https://https://docs.aiagentsforce.com//integrations/tools/openapi_nla/"}, "Requests": {"Natural Language API Toolkits": "https://https://docs.aiagentsforce.com//integrations/tools/openapi_nla/"}, "ZenGuardTool": {"ZenGuard AI": "https://https://docs.aiagentsforce.com//integrations/tools/zenguard/"}, "Detector": {"ZenGuard AI": "https://https://docs.aiagentsforce.com//integrations/tools/zenguard/"}, "SlackToolkit": {"Slack Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/slack/", "Slack": "https://https://docs.aiagentsforce.com//integrations/providers/slack/"}, "SteamToolkit": {"Steam Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/steam/"}, "SteamWebAPIWrapper": {"Steam Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/steam/"}, "create_openai_tools_agent": {"Cassandra Database Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/cassandra_database/", "Log, Trace, and Monitor": "https://https://docs.aiagentsforce.com//integrations/providers/portkey/logging_tracing_portkey/", "Portkey": "https://https://docs.aiagentsforce.com//integrations/providers/portkey/index/"}, "CassandraDatabaseToolkit": {"Cassandra Database Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/cassandra_database/", "Cassandra": "https://https://docs.aiagentsforce.com//integrations/providers/cassandra/"}, "CassandraDatabase": {"Cassandra Database Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/cassandra_database/"}, "NucliaUnderstandingAPI": {"Nuclia Understanding": "https://https://docs.aiagentsforce.com//integrations/tools/nuclia/", "Nuclia": "https://https://docs.aiagentsforce.com//integrations/document_loaders/nuclia/"}, "YahooFinanceNewsTool": {"Yahoo Finance News": "https://https://docs.aiagentsforce.com//integrations/tools/yahoo_finance_news/"}, "JsonToolkit": {"JSON Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/json/"}, "create_json_agent": {"JSON Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/json/"}, "JsonSpec": {"JSON Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/json/", "OpenAPI Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/openapi/"}, "PolygonToolkit": {"Polygon IO Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/polygon_toolkit/", "Polygon IO Toolkit and Tools": "https://https://docs.aiagentsforce.com//integrations/tools/polygon/"}, "PolygonAPIWrapper": {"Polygon IO Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/polygon_toolkit/", "Polygon IO Toolkit and Tools": "https://https://docs.aiagentsforce.com//integrations/tools/polygon/"}, "WikidataAPIWrapper": {"Wikidata": "https://https://docs.aiagentsforce.com//integrations/tools/wikidata/"}, "WikidataQueryRun": {"Wikidata": "https://https://docs.aiagentsforce.com//integrations/tools/wikidata/"}, "TwilioAPIWrapper": {"Twilio": "https://https://docs.aiagentsforce.com//integrations/tools/twilio/"}, "IFTTTWebhook": {"IFTTT WebHooks": "https://https://docs.aiagentsforce.com//integrations/tools/ifttt/"}, "SemanticScholarQueryRun": {"Semantic Scholar API Tool": "https://https://docs.aiagentsforce.com//integrations/tools/semanticscholar/"}, "AlphaVantageAPIWrapper": {"Alpha Vantage": "https://https://docs.aiagentsforce.com//integrations/tools/alpha_vantage/"}, "GitHubToolkit": {"Github Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/github/"}, "GitHubAPIWrapper": {"Github Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/github/"}, "ChatDatabricks": {"Databricks Unity Catalog (UC)": "https://https://docs.aiagentsforce.com//integrations/tools/databricks/", "ChatDatabricks": "https://https://docs.aiagentsforce.com//integrations/chat/databricks/"}, "UCFunctionToolkit": {"Databricks Unity Catalog (UC)": "https://https://docs.aiagentsforce.com//integrations/tools/databricks/"}, "GoogleCloudTextToSpeechTool": {"Google Cloud Text-to-Speech": "https://https://docs.aiagentsforce.com//integrations/tools/google_cloud_texttospeech/"}, "ClickupToolkit": {"ClickUp Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/clickup/"}, "ClickupAPIWrapper": {"ClickUp Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/clickup/"}, "SparkSQLToolkit": {"Spark SQL Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/spark_sql/"}, "create_spark_sql_agent": {"Spark SQL Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/spark_sql/"}, "SparkSQL": {"Spark SQL Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/spark_sql/"}, "OracleSummary": {"Oracle AI Vector Search: Generate Summary": "https://https://docs.aiagentsforce.com//integrations/tools/oracleai/", "OracleAI Vector Search": "https://https://docs.aiagentsforce.com//integrations/providers/oracleai/"}, "StackExchangeAPIWrapper": {"StackExchange": "https://https://docs.aiagentsforce.com//integrations/tools/stackexchange/", "Stack Exchange": "https://https://docs.aiagentsforce.com//integrations/providers/stackexchange/"}, "RequestsToolkit": {"Requests Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/requests/"}, "TextRequestsWrapper": {"Requests Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/requests/"}, "OpenWeatherMapAPIWrapper": {"OpenWeatherMap": "https://https://docs.aiagentsforce.com//integrations/providers/openweathermap/"}, "AINetworkToolkit": {"AINetwork Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/ainetwork/", "AINetwork": "https://https://docs.aiagentsforce.com//integrations/providers/ainetwork/"}, "get_from_env": {"Passio NutritionAI": "https://https://docs.aiagentsforce.com//integrations/tools/passio_nutrition_ai/"}, "NutritionAI": {"Passio NutritionAI": "https://https://docs.aiagentsforce.com//integrations/tools/passio_nutrition_ai/"}, "NutritionAIAPI": {"Passio NutritionAI": "https://https://docs.aiagentsforce.com//integrations/tools/passio_nutrition_ai/"}, "PubmedQueryRun": {"PubMed": "https://https://docs.aiagentsforce.com//integrations/tools/pubmed/"}, "GradientLLM": {"Memorize": "https://https://docs.aiagentsforce.com//integrations/tools/memorize/", "Gradient": "https://https://docs.aiagentsforce.com//integrations/llms/gradient/"}, "create_async_playwright_browser": {"PlayWright Browser Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/playwright/"}, "ElevenLabsText2SpeechTool": {"Eleven Labs Text2Speech": "https://https://docs.aiagentsforce.com//integrations/tools/eleven_labs_tts/", "ElevenLabs": "https://https://docs.aiagentsforce.com//integrations/providers/elevenlabs/"}, "create_conversational_retrieval_agent": {"Cogniswitch Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/cogniswitch/"}, "CogniswitchToolkit": {"Cogniswitch Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/cogniswitch/"}, "BearlyInterpreterTool": {"Bearly Code Interpreter": "https://https://docs.aiagentsforce.com//integrations/tools/bearly/"}, "ExecPython": {"Riza Code Interpreter": "https://https://docs.aiagentsforce.com//integrations/tools/riza/"}, "ZapierToolkit": {"Zapier Natural Language Actions": "https://https://docs.aiagentsforce.com//integrations/tools/zapier/"}, "ZapierNLAWrapper": {"Zapier Natural Language Actions": "https://https://docs.aiagentsforce.com//integrations/tools/zapier/"}, "SimpleSequentialChain": {"Zapier Natural Language Actions": "https://https://docs.aiagentsforce.com//integrations/tools/zapier/", "SageMaker Tracking": "https://https://docs.aiagentsforce.com//integrations/callbacks/sagemaker_tracking/", "Rebuff": "https://https://docs.aiagentsforce.com//integrations/providers/rebuff/", "Predibase": "https://https://docs.aiagentsforce.com//integrations/llms/predibase/", "Eden AI": "https://https://docs.aiagentsforce.com//integrations/llms/edenai/", "Replicate": "https://https://docs.aiagentsforce.com//integrations/llms/replicate/"}, "TransformChain": {"Zapier Natural Language Actions": "https://https://docs.aiagentsforce.com//integrations/tools/zapier/", "Rebuff": "https://https://docs.aiagentsforce.com//integrations/providers/rebuff/"}, "ZapierNLARunAction": {"Zapier Natural Language Actions": "https://https://docs.aiagentsforce.com//integrations/tools/zapier/"}, "RivaASR": {"NVIDIA Riva: ASR and TTS": "https://https://docs.aiagentsforce.com//integrations/tools/nvidia_riva/"}, "RivaTTS": {"NVIDIA Riva: ASR and TTS": "https://https://docs.aiagentsforce.com//integrations/tools/nvidia_riva/"}, "RivaAudioEncoding": {"NVIDIA Riva: ASR and TTS": "https://https://docs.aiagentsforce.com//integrations/tools/nvidia_riva/"}, "AudioStream": {"NVIDIA Riva: ASR and TTS": "https://https://docs.aiagentsforce.com//integrations/tools/nvidia_riva/"}, "GoldenQueryAPIWrapper": {"Golden Query": "https://https://docs.aiagentsforce.com//integrations/tools/golden_query/", "Golden": "https://https://docs.aiagentsforce.com//integrations/providers/golden/"}, "create_react_agent": {"ArXiv": "https://https://docs.aiagentsforce.com//integrations/tools/arxiv/", "Amadeus Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/amadeus/", "Ionic Shopping Tool": "https://https://docs.aiagentsforce.com//integrations/tools/ionic_shopping/", "Streamlit": "https://https://docs.aiagentsforce.com//integrations/callbacks/streamlit/", "Dataherald": "https://https://docs.aiagentsforce.com//integrations/providers/dataherald/", "Bittensor": "https://https://docs.aiagentsforce.com//integrations/llms/bittensor/"}, "ArxivAPIWrapper": {"ArXiv": "https://https://docs.aiagentsforce.com//integrations/tools/arxiv/"}, "OpenAIFunctionsAgent": {"Robocorp Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/robocorp/", "Exa Search": "https://https://docs.aiagentsforce.com//integrations/tools/exa_search/", "LLMonitor": "https://https://docs.aiagentsforce.com//integrations/callbacks/llmonitor/"}, "NasaToolkit": {"NASA Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/nasa/"}, "NasaAPIWrapper": {"NASA Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/nasa/"}, "MultionToolkit": {"MultiOn Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/multion/"}, "DuckDuckGoSearchRun": {"DuckDuckGo Search": "https://https://docs.aiagentsforce.com//integrations/tools/ddg/"}, "DuckDuckGoSearchResults": {"DuckDuckGo Search": "https://https://docs.aiagentsforce.com//integrations/tools/ddg/"}, "DuckDuckGoSearchAPIWrapper": {"DuckDuckGo Search": "https://https://docs.aiagentsforce.com//integrations/tools/ddg/"}, "SceneXplainTool": {"SceneXplain": "https://https://docs.aiagentsforce.com//integrations/tools/sceneXplain/"}, "WolframAlphaAPIWrapper": {"Wolfram Alpha": "https://https://docs.aiagentsforce.com//integrations/providers/wolfram_alpha/"}, "AmadeusToolkit": {"Amadeus Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/amadeus/"}, "HuggingFaceHub": {"Amadeus Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/amadeus/"}, "ReActJsonSingleInputOutputParser": {"Amadeus Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/amadeus/", "MLX": "https://https://docs.aiagentsforce.com//integrations/chat/mlx/"}, "render_text_description_and_args": {"Amadeus Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/amadeus/"}, "EdenAiExplicitImageTool": {"Eden AI": "https://https://docs.aiagentsforce.com//integrations/providers/edenai/"}, "EdenAiObjectDetectionTool": {"Eden AI": "https://https://docs.aiagentsforce.com//integrations/providers/edenai/"}, "EdenAiParsingIDTool": {"Eden AI": "https://https://docs.aiagentsforce.com//integrations/providers/edenai/"}, "EdenAiParsingInvoiceTool": {"Eden AI": "https://https://docs.aiagentsforce.com//integrations/providers/edenai/"}, "EdenAiSpeechToTextTool": {"Eden AI": "https://https://docs.aiagentsforce.com//integrations/providers/edenai/"}, "EdenAiTextModerationTool": {"Eden AI": "https://https://docs.aiagentsforce.com//integrations/providers/edenai/"}, "EdenAiTextToSpeechTool": {"Eden AI": "https://https://docs.aiagentsforce.com//integrations/providers/edenai/"}, "EdenAI": {"Eden AI": "https://https://docs.aiagentsforce.com//integrations/llms/edenai/"}, "MojeekSearch": {"Mojeek Search": "https://https://docs.aiagentsforce.com//integrations/tools/mojeek_search/"}, "RedditSearchRun": {"Reddit Search ": "https://https://docs.aiagentsforce.com//integrations/tools/reddit_search/"}, "RedditSearchAPIWrapper": {"Reddit Search ": "https://https://docs.aiagentsforce.com//integrations/tools/reddit_search/"}, "RedditSearchSchema": {"Reddit Search ": "https://https://docs.aiagentsforce.com//integrations/tools/reddit_search/"}, "StructuredChatAgent": {"Reddit Search ": "https://https://docs.aiagentsforce.com//integrations/tools/reddit_search/"}, "ReadOnlySharedMemory": {"Reddit Search ": "https://https://docs.aiagentsforce.com//integrations/tools/reddit_search/"}, "YouSearchTool": {"You.com Search": "https://https://docs.aiagentsforce.com//integrations/tools/you/"}, "AzureAiServicesToolkit": {"Azure AI Services Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/azure_ai_services/"}, "create_structured_chat_agent": {"Azure AI Services Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/azure_ai_services/"}, "reduce_openapi_spec": {"OpenAPI Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/openapi/"}, "RequestsWrapper": {"OpenAPI Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/openapi/"}, "OpenAPIToolkit": {"OpenAPI Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/openapi/"}, "create_openapi_agent": {"OpenAPI Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/openapi/"}, "GitLabToolkit": {"Gitlab Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/gitlab/"}, "GitLabAPIWrapper": {"Gitlab Toolkit": "https://https://docs.aiagentsforce.com//integrations/tools/gitlab/"}, "ShellTool": {"Shell (bash)": "https://https://docs.aiagentsforce.com//integrations/tools/bash/"}, "PolygonAggregates": {"Polygon IO Toolkit and Tools": "https://https://docs.aiagentsforce.com//integrations/tools/polygon/"}, "PolygonFinancials": {"Polygon IO Toolkit and Tools": "https://https://docs.aiagentsforce.com//integrations/tools/polygon/"}, "PolygonLastQuote": {"Polygon IO Toolkit and Tools": "https://https://docs.aiagentsforce.com//integrations/tools/polygon/"}, "PolygonTickerNews": {"Polygon IO Toolkit and Tools": "https://https://docs.aiagentsforce.com//integrations/tools/polygon/"}, "FileManagementToolkit": {"File System": "https://https://docs.aiagentsforce.com//integrations/tools/filesystem/"}, "BraveSearch": {"Brave Search": "https://https://docs.aiagentsforce.com//integrations/providers/brave_search/"}, "RedisChatMessageHistory": {"Redis": "https://https://docs.aiagentsforce.com//integrations/memory/redis_chat_message_history/"}, "KafkaChatMessageHistory": {"Kafka": "https://https://docs.aiagentsforce.com//integrations/memory/kafka_chat_message_history/"}, "ElasticsearchChatMessageHistory": {"Elasticsearch": "https://https://docs.aiagentsforce.com//integrations/memory/elasticsearch_chat_message_history/"}, "UpstashRedisChatMessageHistory": {"Upstash Redis": "https://https://docs.aiagentsforce.com//integrations/memory/upstash_redis_chat_message_history/", "Upstash Vector": "https://https://docs.aiagentsforce.com//integrations/providers/upstash/"}, "ZepCloudChatMessageHistory": {"ZepCloudChatMessageHistory": "https://https://docs.aiagentsforce.com//integrations/memory/zep_cloud_chat_message_history/", "Zep": "https://https://docs.aiagentsforce.com//integrations/providers/zep/"}, "SingleStoreDBChatMessageHistory": {"SingleStoreDB": "https://https://docs.aiagentsforce.com//integrations/providers/singlestoredb/"}, "PostgresChatMessageHistory": {"Postgres": "https://https://docs.aiagentsforce.com//integrations/memory/postgres_chat_message_history/"}, "MomentoChatMessageHistory": {"Momento Cache": "https://https://docs.aiagentsforce.com//integrations/memory/momento_chat_message_history/", "Momento": "https://https://docs.aiagentsforce.com//integrations/providers/momento/"}, "XataChatMessageHistory": {"Xata": "https://https://docs.aiagentsforce.com//integrations/providers/xata/"}, "XataVectorStore": {"Xata": "https://https://docs.aiagentsforce.com//integrations/vectorstores/xata/"}, "CassandraChatMessageHistory": {"Cassandra ": "https://https://docs.aiagentsforce.com//integrations/memory/cassandra_chat_message_history/", "Cassandra": "https://https://docs.aiagentsforce.com//integrations/providers/cassandra/"}, "MotorheadMemory": {"Mot\u00f6rhead": "https://https://docs.aiagentsforce.com//integrations/memory/motorhead_memory/"}, "AstraDBChatMessageHistory": {"Astra DB ": "https://https://docs.aiagentsforce.com//integrations/memory/astradb_chat_message_history/"}, "StreamlitChatMessageHistory": {"Streamlit": "https://https://docs.aiagentsforce.com//integrations/providers/streamlit/"}, "Neo4jChatMessageHistory": {"Neo4j": "https://https://docs.aiagentsforce.com//integrations/memory/neo4j_chat_message_history/"}, "TiDBChatMessageHistory": {"TiDB": "https://https://docs.aiagentsforce.com//integrations/providers/tidb/"}, "RocksetChatMessageHistory": {"Rockset": "https://https://docs.aiagentsforce.com//integrations/providers/rockset/"}, "ChatSnowflakeCortex": {"Snowflake Cortex": "https://https://docs.aiagentsforce.com//integrations/chat/snowflake/"}, "SolarChat": {"# Related": "https://https://docs.aiagentsforce.com//integrations/chat/solar/"}, "AzureMLChatOnlineEndpoint": {"AzureMLChatOnlineEndpoint": "https://https://docs.aiagentsforce.com//integrations/chat/azureml_chat_endpoint/"}, "AzureMLEndpointApiType": {"AzureMLChatOnlineEndpoint": "https://https://docs.aiagentsforce.com//integrations/chat/azureml_chat_endpoint/", "Azure ML": "https://https://docs.aiagentsforce.com//integrations/llms/azure_ml/"}, "CustomOpenAIChatContentFormatter": {"AzureMLChatOnlineEndpoint": "https://https://docs.aiagentsforce.com//integrations/chat/azureml_chat_endpoint/"}, "ChatKinetica": {"Kinetica Language To SQL Chat Model": "https://https://docs.aiagentsforce.com//integrations/chat/kinetica/", "Kinetica": "https://https://docs.aiagentsforce.com//integrations/providers/kinetica/"}, "KineticaSqlOutputParser": {"Kinetica Language To SQL Chat Model": "https://https://docs.aiagentsforce.com//integrations/chat/kinetica/"}, "KineticaSqlResponse": {"Kinetica Language To SQL Chat Model": "https://https://docs.aiagentsforce.com//integrations/chat/kinetica/"}, "PaiEasChatEndpoint": {"Alibaba Cloud PAI EAS": "https://https://docs.aiagentsforce.com//integrations/chat/alibaba_cloud_pai_eas/", "Alibaba Cloud": "https://https://docs.aiagentsforce.com//integrations/providers/alibaba_cloud/"}, "ChatCoze": {"Chat with Coze Bot": "https://https://docs.aiagentsforce.com//integrations/chat/coze/"}, "ChatOctoAI": {"ChatOctoAI": "https://https://docs.aiagentsforce.com//integrations/chat/octoai/", "OctoAI": "https://https://docs.aiagentsforce.com//integrations/providers/octoai/"}, "ChatYi": {"ChatYI": "https://https://docs.aiagentsforce.com//integrations/chat/yi/", "01.AI": "https://https://docs.aiagentsforce.com//integrations/providers/yi/"}, "ChatDeepInfra": {"DeepInfra": "https://https://docs.aiagentsforce.com//integrations/providers/deepinfra/"}, "ChatLiteLLM": {"ChatLiteLLM": "https://https://docs.aiagentsforce.com//integrations/chat/litellm/"}, "LlamaEdgeChatService": {"LlamaEdge": "https://https://docs.aiagentsforce.com//integrations/chat/llama_edge/"}, "OllamaFunctions": {"OllamaFunctions": "https://https://docs.aiagentsforce.com//integrations/chat/ollama_functions/"}, "VolcEngineMaasChat": {"VolcEngineMaasChat": "https://https://docs.aiagentsforce.com//integrations/chat/volcengine_maas/"}, "ChatLlamaAPI": {"ChatLlamaAPI": "https://https://docs.aiagentsforce.com//integrations/chat/llama_api/"}, "create_tagging_chain": {"ChatLlamaAPI": "https://https://docs.aiagentsforce.com//integrations/chat/llama_api/"}, "ChatKonko": {"ChatKonko": "https://https://docs.aiagentsforce.com//integrations/chat/konko/"}, "ChatBedrockConverse": {"ChatBedrock": "https://https://docs.aiagentsforce.com//integrations/chat/bedrock/"}, "MLXPipeline": {"MLX": "https://https://docs.aiagentsforce.com//integrations/providers/mlx/", "MLX Local Pipelines": "https://https://docs.aiagentsforce.com//integrations/llms/mlx_pipelines/"}, "ChatMLX": {"MLX": "https://https://docs.aiagentsforce.com//integrations/providers/mlx/"}, "format_log_to_str": {"MLX": "https://https://docs.aiagentsforce.com//integrations/chat/mlx/"}, "GigaChat": {"GigaChat": "https://https://docs.aiagentsforce.com//integrations/llms/gigachat/", "Salute Devices": "https://https://docs.aiagentsforce.com//integrations/providers/salute_devices/"}, "JinaChat": {"JinaChat": "https://https://docs.aiagentsforce.com//integrations/chat/jinachat/"}, "SystemMessagePromptTemplate": {"JinaChat": "https://https://docs.aiagentsforce.com//integrations/chat/jinachat/", "vLLM Chat": "https://https://docs.aiagentsforce.com//integrations/chat/vllm/", "Yellowbrick": "https://https://docs.aiagentsforce.com//integrations/vectorstores/yellowbrick/", "Figma": "https://https://docs.aiagentsforce.com//integrations/document_loaders/figma/"}, "ChatOCIGenAI": {"ChatOCIGenAI": "https://https://docs.aiagentsforce.com//integrations/chat/oci_generative_ai/", "Oracle Cloud Infrastructure (OCI)": "https://https://docs.aiagentsforce.com//integrations/providers/oci/"}, "ChatLlamaCpp": {"Llama.cpp": "https://https://docs.aiagentsforce.com//integrations/providers/llamacpp/"}, "convert_to_openai_tool": {"Llama.cpp": "https://https://docs.aiagentsforce.com//integrations/chat/llamacpp/"}, "ChatEverlyAI": {"ChatEverlyAI": "https://https://docs.aiagentsforce.com//integrations/chat/everlyai/"}, "GPTRouter": {"GPTRouter": "https://https://docs.aiagentsforce.com//integrations/chat/gpt_router/"}, "GPTRouterModel": {"GPTRouter": "https://https://docs.aiagentsforce.com//integrations/chat/gpt_router/"}, "ChatLiteLLMRouter": {"ChatLiteLLMRouter": "https://https://docs.aiagentsforce.com//integrations/chat/litellm_router/"}, "ChatFriendli": {"ChatFriendli": "https://https://docs.aiagentsforce.com//integrations/chat/friendli/"}, "ChatZhipuAI": {"ZHIPU AI": "https://https://docs.aiagentsforce.com//integrations/chat/zhipuai/", "Zhipu AI": "https://https://docs.aiagentsforce.com//integrations/providers/zhipuai/"}, "create_json_chat_agent": {"ZHIPU AI": "https://https://docs.aiagentsforce.com//integrations/chat/zhipuai/"}, "ChatBaichuan": {"Chat with Baichuan-192K": "https://https://docs.aiagentsforce.com//integrations/chat/baichuan/", "Baichuan": "https://https://docs.aiagentsforce.com//integrations/providers/baichuan/"}, "ChatTogether": {"ChatTogether": "https://https://docs.aiagentsforce.com//integrations/chat/together/", "Together AI": "https://https://docs.aiagentsforce.com//integrations/llms/together/"}, "Llama2Chat": {"Llama2Chat": "https://https://docs.aiagentsforce.com//integrations/chat/llama2_chat/"}, "HuggingFaceTextGenInference": {"Llama2Chat": "https://https://docs.aiagentsforce.com//integrations/chat/llama2_chat/"}, "QianfanChatEndpoint": {"QianfanChatEndpoint": "https://https://docs.aiagentsforce.com//integrations/chat/baidu_qianfan_endpoint/", "ErnieBotChat": "https://https://docs.aiagentsforce.com//integrations/chat/ernie/", "Baidu": "https://https://docs.aiagentsforce.com//integrations/providers/baidu/"}, "ChatEdenAI": {"Eden AI": "https://https://docs.aiagentsforce.com//integrations/providers/edenai/"}, "ErnieBotChat": {"ErnieBotChat": "https://https://docs.aiagentsforce.com//integrations/chat/ernie/"}, "ChatHunyuan": {"Tencent Hunyuan": "https://https://docs.aiagentsforce.com//integrations/chat/tencent_hunyuan/", "Tencent": "https://https://docs.aiagentsforce.com//integrations/providers/tencent/"}, "MiniMaxChat": {"MiniMaxChat": "https://https://docs.aiagentsforce.com//integrations/chat/minimax/", "Minimax": "https://https://docs.aiagentsforce.com//integrations/providers/minimax/"}, "ChatYuan2": {"Yuan2.0": "https://https://docs.aiagentsforce.com//integrations/chat/yuan2/", "IEIT Systems": "https://https://docs.aiagentsforce.com//integrations/providers/ieit_systems/"}, "ChatTongyi": {"ChatTongyi": "https://https://docs.aiagentsforce.com//integrations/chat/tongyi/", "Alibaba Cloud": "https://https://docs.aiagentsforce.com//integrations/providers/alibaba_cloud/"}, "PromptLayerChatOpenAI": {"PromptLayerChatOpenAI": "https://https://docs.aiagentsforce.com//integrations/chat/promptlayer_chatopenai/", "PromptLayer": "https://https://docs.aiagentsforce.com//integrations/providers/promptlayer/"}, "ChatSparkLLM": {"SparkLLM Chat": "https://https://docs.aiagentsforce.com//integrations/chat/sparkllm/", "iFlytek": "https://https://docs.aiagentsforce.com//integrations/providers/iflytek/"}, "MoonshotChat": {"MoonshotChat": "https://https://docs.aiagentsforce.com//integrations/chat/moonshot/"}, "ChatDappierAI": {"Dappier AI": "https://https://docs.aiagentsforce.com//integrations/chat/dappier/"}, "ChatMaritalk": {"Maritalk": "https://https://docs.aiagentsforce.com//integrations/chat/maritalk/", "MariTalk": "https://https://docs.aiagentsforce.com//integrations/providers/maritalk/"}, "OnlinePDFLoader": {"Maritalk": "https://https://docs.aiagentsforce.com//integrations/chat/maritalk/", "UnstructuredPDFLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/unstructured_pdfloader/"}, "load_qa_chain": {"Maritalk": "https://https://docs.aiagentsforce.com//integrations/chat/maritalk/", "Amazon Textract ": "https://https://docs.aiagentsforce.com//integrations/document_loaders/amazon_textract/", "SageMakerEndpoint": "https://https://docs.aiagentsforce.com//integrations/llms/sagemaker/"}, "ChatPremAI": {"ChatPremAI": "https://https://docs.aiagentsforce.com//integrations/chat/premai/", "PremAI": "https://https://docs.aiagentsforce.com//integrations/providers/premai/"}, "ChatAnyscale": {"ChatAnyscale": "https://https://docs.aiagentsforce.com//integrations/chat/anyscale/", "Anyscale": "https://https://docs.aiagentsforce.com//integrations/providers/anyscale/"}, "ChatYandexGPT": {"ChatYandexGPT": "https://https://docs.aiagentsforce.com//integrations/chat/yandex/", "Yandex": "https://https://docs.aiagentsforce.com//integrations/providers/yandex/"}, "ChatPerplexity": {"ChatPerplexity": "https://https://docs.aiagentsforce.com//integrations/chat/perplexity/", "Perplexity": "https://https://docs.aiagentsforce.com//integrations/providers/perplexity/"}, "ChatAnthropicTools": {"[Deprecated] Experimental Anthropic Tools Wrapper": "https://https://docs.aiagentsforce.com//integrations/chat/anthropic_functions/"}, "DeepEvalCallbackHandler": {"Confident": "https://https://docs.aiagentsforce.com//integrations/callbacks/confident/", "Confident AI": "https://https://docs.aiagentsforce.com//integrations/providers/confident/"}, "LLMonitorCallbackHandler": {"LLMonitor": "https://https://docs.aiagentsforce.com//integrations/providers/llmonitor/"}, "identify": {"LLMonitor": "https://https://docs.aiagentsforce.com//integrations/callbacks/llmonitor/"}, "ContextCallbackHandler": {"Context": "https://https://docs.aiagentsforce.com//integrations/providers/context/"}, "FiddlerCallbackHandler": {"Fiddler": "https://https://docs.aiagentsforce.com//integrations/providers/fiddler/"}, "LabelStudioCallbackHandler": {"Label Studio": "https://https://docs.aiagentsforce.com//integrations/providers/labelstudio/"}, "CometTracer": {"Comet Tracing": "https://https://docs.aiagentsforce.com//integrations/callbacks/comet_tracing/", "Comet": "https://https://docs.aiagentsforce.com//integrations/providers/comet_tracking/"}, "ArgillaCallbackHandler": {"Argilla": "https://https://docs.aiagentsforce.com//integrations/providers/argilla/"}, "StdOutCallbackHandler": {"Argilla": "https://https://docs.aiagentsforce.com//integrations/callbacks/argilla/", "Comet": "https://https://docs.aiagentsforce.com//integrations/providers/comet_tracking/", "Aim": "https://https://docs.aiagentsforce.com//integrations/providers/aim_tracking/", "Weights & Biases": "https://https://docs.aiagentsforce.com//integrations/providers/wandb_tracking/", "ClearML": "https://https://docs.aiagentsforce.com//integrations/providers/clearml_tracking/", "OpaquePrompts": "https://https://docs.aiagentsforce.com//integrations/llms/opaqueprompts/"}, "PromptLayerCallbackHandler": {"PromptLayer": "https://https://docs.aiagentsforce.com//integrations/providers/promptlayer/"}, "StreamlitCallbackHandler": {"Streamlit": "https://https://docs.aiagentsforce.com//integrations/providers/streamlit/", "GPT4All": "https://https://docs.aiagentsforce.com//integrations/providers/gpt4all/"}, "UpTrainCallbackHandler": {"UpTrain": "https://https://docs.aiagentsforce.com//integrations/providers/uptrain/"}, "TrubricsCallbackHandler": {"Trubrics": "https://https://docs.aiagentsforce.com//integrations/providers/trubrics/"}, "InfinoCallbackHandler": {"Infino": "https://https://docs.aiagentsforce.com//integrations/providers/infino/"}, "UpstashRatelimitError": {"Upstash Ratelimit Callback": "https://https://docs.aiagentsforce.com//integrations/callbacks/upstash_ratelimit/"}, "UpstashRatelimitHandler": {"Upstash Ratelimit Callback": "https://https://docs.aiagentsforce.com//integrations/callbacks/upstash_ratelimit/"}, "FigmaFileLoader": {"Figma": "https://https://docs.aiagentsforce.com//integrations/document_loaders/figma/"}, "Baseten": {"Baseten": "https://https://docs.aiagentsforce.com//integrations/llms/baseten/"}, "WeatherDataLoader": {"Weather": "https://https://docs.aiagentsforce.com//integrations/document_loaders/weather/"}, "Tair": {"Tair": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tair/", "Alibaba Cloud": "https://https://docs.aiagentsforce.com//integrations/providers/alibaba_cloud/"}, "CollegeConfidentialLoader": {"College Confidential": "https://https://docs.aiagentsforce.com//integrations/document_loaders/college_confidential/"}, "RWKV": {"RWKV-4": "https://https://docs.aiagentsforce.com//integrations/providers/rwkv/"}, "LakeFSLoader": {"lakeFS": "https://https://docs.aiagentsforce.com//integrations/document_loaders/lakefs/"}, "FaunaLoader": {"Fauna": "https://https://docs.aiagentsforce.com//integrations/document_loaders/fauna/"}, "OCIGenAI": {"Oracle Cloud Infrastructure (OCI)": "https://https://docs.aiagentsforce.com//integrations/providers/oci/", "# Oracle Cloud Infrastructure Generative AI": "https://https://docs.aiagentsforce.com//integrations/llms/oci_generative_ai/"}, "OCIModelDeploymentVLLM": {"Oracle Cloud Infrastructure (OCI)": "https://https://docs.aiagentsforce.com//integrations/providers/oci/", "OCI Data Science Model Deployment Endpoint": "https://https://docs.aiagentsforce.com//integrations/llms/oci_model_deployment_endpoint/"}, "OCIModelDeploymentTGI": {"Oracle Cloud Infrastructure (OCI)": "https://https://docs.aiagentsforce.com//integrations/providers/oci/", "OCI Data Science Model Deployment Endpoint": "https://https://docs.aiagentsforce.com//integrations/llms/oci_model_deployment_endpoint/"}, "OracleDocLoader": {"OracleAI Vector Search": "https://https://docs.aiagentsforce.com//integrations/providers/oracleai/", "Oracle AI Vector Search: Document Processing": "https://https://docs.aiagentsforce.com//integrations/document_loaders/oracleai/"}, "OracleTextSplitter": {"OracleAI Vector Search": "https://https://docs.aiagentsforce.com//integrations/providers/oracleai/", "Oracle AI Vector Search: Document Processing": "https://https://docs.aiagentsforce.com//integrations/document_loaders/oracleai/"}, "OracleVS": {"OracleAI Vector Search": "https://https://docs.aiagentsforce.com//integrations/providers/oracleai/", "Oracle AI Vector Search: Vector Store": "https://https://docs.aiagentsforce.com//integrations/vectorstores/oracle/"}, "Lantern": {"Lantern": "https://https://docs.aiagentsforce.com//integrations/vectorstores/lantern/"}, "DropboxLoader": {"Dropbox": "https://https://docs.aiagentsforce.com//integrations/document_loaders/dropbox/"}, "ForefrontAI": {"ForefrontAI": "https://https://docs.aiagentsforce.com//integrations/llms/forefrontai/"}, "CometCallbackHandler": {"Comet": "https://https://docs.aiagentsforce.com//integrations/providers/comet_tracking/"}, "CTransformers": {"C Transformers": "https://https://docs.aiagentsforce.com//integrations/llms/ctransformers/"}, "BiliBiliLoader": {"BiliBili": "https://https://docs.aiagentsforce.com//integrations/document_loaders/bilibili/"}, "TencentCOSDirectoryLoader": {"Tencent": "https://https://docs.aiagentsforce.com//integrations/providers/tencent/", "Tencent COS Directory": "https://https://docs.aiagentsforce.com//integrations/document_loaders/tencent_cos_directory/"}, "TencentCOSFileLoader": {"Tencent": "https://https://docs.aiagentsforce.com//integrations/providers/tencent/", "Tencent COS File": "https://https://docs.aiagentsforce.com//integrations/document_loaders/tencent_cos_file/"}, "OBSDirectoryLoader": {"Huawei": "https://https://docs.aiagentsforce.com//integrations/providers/huawei/", "Huawei OBS Directory": "https://https://docs.aiagentsforce.com//integrations/document_loaders/huawei_obs_directory/"}, "OBSFileLoader": {"Huawei": "https://https://docs.aiagentsforce.com//integrations/providers/huawei/", "Huawei OBS File": "https://https://docs.aiagentsforce.com//integrations/document_loaders/huawei_obs_file/"}, "DiffbotLoader": {"Diffbot": "https://https://docs.aiagentsforce.com//integrations/document_loaders/diffbot/"}, "DiffbotGraphTransformer": {"Diffbot": "https://https://docs.aiagentsforce.com//integrations/graphs/diffbot/", "Neo4j": "https://https://docs.aiagentsforce.com//integrations/providers/neo4j/"}, "DeepSparse": {"DeepSparse": "https://https://docs.aiagentsforce.com//integrations/llms/deepsparse/"}, "AimCallbackHandler": {"Aim": "https://https://docs.aiagentsforce.com//integrations/providers/aim_tracking/"}, "ModernTreasuryLoader": {"Modern Treasury": "https://https://docs.aiagentsforce.com//integrations/document_loaders/modern_treasury/"}, "GitHubIssuesLoader": {"GitHub": "https://https://docs.aiagentsforce.com//integrations/document_loaders/github/"}, "GithubFileLoader": {"GitHub": "https://https://docs.aiagentsforce.com//integrations/document_loaders/github/"}, "Banana": {"Banana": "https://https://docs.aiagentsforce.com//integrations/llms/banana/"}, "InfinispanVS": {"Infinispan VS": "https://https://docs.aiagentsforce.com//integrations/providers/infinispanvs/", "Infinispan": "https://https://docs.aiagentsforce.com//integrations/vectorstores/infinispanvs/"}, "CerebriumAI": {"CerebriumAI": "https://https://docs.aiagentsforce.com//integrations/llms/cerebriumai/"}, "GutenbergLoader": {"Gutenberg": "https://https://docs.aiagentsforce.com//integrations/document_loaders/gutenberg/"}, "WikipediaLoader": {"Wikipedia": "https://https://docs.aiagentsforce.com//integrations/document_loaders/wikipedia/", "Diffbot": "https://https://docs.aiagentsforce.com//integrations/graphs/diffbot/"}, "ConfluenceLoader": {"Confluence": "https://https://docs.aiagentsforce.com//integrations/document_loaders/confluence/"}, "Predibase": {"Predibase": "https://https://docs.aiagentsforce.com//integrations/llms/predibase/"}, "Beam": {"Beam": "https://https://docs.aiagentsforce.com//integrations/llms/beam/"}, "GrobidParser": {"Grobid": "https://https://docs.aiagentsforce.com//integrations/document_loaders/grobid/"}, "Typesense": {"Typesense": "https://https://docs.aiagentsforce.com//integrations/vectorstores/typesense/"}, "Hologres": {"Hologres": "https://https://docs.aiagentsforce.com//integrations/vectorstores/hologres/", "Alibaba Cloud": "https://https://docs.aiagentsforce.com//integrations/providers/alibaba_cloud/"}, "ArangoGraph": {"ArangoDB": "https://https://docs.aiagentsforce.com//integrations/graphs/arangodb/"}, "ArangoGraphQAChain": {"ArangoDB": "https://https://docs.aiagentsforce.com//integrations/graphs/arangodb/"}, "ArcGISLoader": {"ArcGIS": "https://https://docs.aiagentsforce.com//integrations/document_loaders/arcgis/"}, "WandbCallbackHandler": {"Weights & Biases": "https://https://docs.aiagentsforce.com//integrations/providers/wandb_tracking/"}, "ObsidianLoader": {"Obsidian": "https://https://docs.aiagentsforce.com//integrations/document_loaders/obsidian/"}, "BrowserbaseLoader": {"Browserbase": "https://https://docs.aiagentsforce.com//integrations/document_loaders/browserbase/"}, "OctoAIEndpoint": {"OctoAI": "https://https://docs.aiagentsforce.com//integrations/llms/octoai/"}, "OctoAIEmbeddings": {"OctoAI": "https://https://docs.aiagentsforce.com//integrations/providers/octoai/"}, "Nebula": {"Nebula": "https://https://docs.aiagentsforce.com//integrations/providers/symblai_nebula/", "Nebula (Symbl.ai)": "https://https://docs.aiagentsforce.com//integrations/llms/symblai_nebula/"}, "Writer": {"Writer": "https://https://docs.aiagentsforce.com//integrations/llms/writer/"}, "BaichuanLLM": {"Baichuan": "https://https://docs.aiagentsforce.com//integrations/providers/baichuan/", "Baichuan LLM": "https://https://docs.aiagentsforce.com//integrations/llms/baichuan/"}, "ApacheDoris": {"Apache Doris": "https://https://docs.aiagentsforce.com//integrations/vectorstores/apache_doris/"}, "ZepCloudVectorStore": {"Zep": "https://https://docs.aiagentsforce.com//integrations/providers/zep/", "Zep Cloud": "https://https://docs.aiagentsforce.com//integrations/vectorstores/zep_cloud/"}, "BrowserlessLoader": {"Browserless": "https://https://docs.aiagentsforce.com//integrations/document_loaders/browserless/"}, "AZLyricsLoader": {"AZLyrics": "https://https://docs.aiagentsforce.com//integrations/document_loaders/azlyrics/"}, "ToMarkdownLoader": {"2Markdown": "https://https://docs.aiagentsforce.com//integrations/document_loaders/tomarkdown/"}, "SparkLLM": {"iFlytek": "https://https://docs.aiagentsforce.com//integrations/providers/iflytek/", "SparkLLM": "https://https://docs.aiagentsforce.com//integrations/llms/sparkllm/"}, "Mlflow": {"MLflow Deployments for LLMs": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow/"}, "MlflowEmbeddings": {"MLflow Deployments for LLMs": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow/"}, "ChatMlflow": {"MLflow Deployments for LLMs": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow/"}, "GitLoader": {"Git": "https://https://docs.aiagentsforce.com//integrations/document_loaders/git/"}, "MlflowAIGateway": {"MLflow AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow_ai_gateway/"}, "MlflowAIGatewayEmbeddings": {"MLflow AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow_ai_gateway/"}, "ChatMLflowAIGateway": {"MLflow AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow_ai_gateway/"}, "Tigris": {"Tigris": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tigris/"}, "Meilisearch": {"Meilisearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/meilisearch/"}, "SQLDatabaseChain": {"Rebuff": "https://https://docs.aiagentsforce.com//integrations/providers/rebuff/"}, "SnowflakeLoader": {"Snowflake": "https://https://docs.aiagentsforce.com//integrations/document_loaders/snowflake/"}, "CubeSemanticLoader": {"Cube": "https://https://docs.aiagentsforce.com//integrations/providers/cube/", "Cube Semantic Layer": "https://https://docs.aiagentsforce.com//integrations/document_loaders/cube_semantic/"}, "Clickhouse": {"ClickHouse": "https://https://docs.aiagentsforce.com//integrations/vectorstores/clickhouse/"}, "ClickhouseSettings": {"ClickHouse": "https://https://docs.aiagentsforce.com//integrations/vectorstores/clickhouse/"}, "TelegramChatFileLoader": {"Telegram": "https://https://docs.aiagentsforce.com//integrations/document_loaders/telegram/"}, "TelegramChatApiLoader": {"Telegram": "https://https://docs.aiagentsforce.com//integrations/document_loaders/telegram/"}, "PredictionGuard": {"Prediction Guard": "https://https://docs.aiagentsforce.com//integrations/llms/predictionguard/"}, "Together": {"Together AI": "https://https://docs.aiagentsforce.com//integrations/llms/together/"}, "NotionDirectoryLoader": {"Notion DB": "https://https://docs.aiagentsforce.com//integrations/providers/notion/", "Notion DB 2/2": "https://https://docs.aiagentsforce.com//integrations/document_loaders/notion/"}, "NotionDBLoader": {"Notion DB": "https://https://docs.aiagentsforce.com//integrations/providers/notion/", "Notion DB 2/2": "https://https://docs.aiagentsforce.com//integrations/document_loaders/notiondb/"}, "MWDumpLoader": {"MediaWikiDump": "https://https://docs.aiagentsforce.com//integrations/providers/mediawikidump/", "MediaWiki Dump": "https://https://docs.aiagentsforce.com//integrations/document_loaders/mediawikidump/"}, "BraveSearchLoader": {"Brave Search": "https://https://docs.aiagentsforce.com//integrations/document_loaders/brave_search/"}, "StarRocks": {"StarRocks": "https://https://docs.aiagentsforce.com//integrations/vectorstores/starrocks/"}, "GooseAI": {"GooseAI": "https://https://docs.aiagentsforce.com//integrations/llms/gooseai/"}, "DatadogLogsLoader": {"Datadog Logs": "https://https://docs.aiagentsforce.com//integrations/document_loaders/datadog_logs/"}, "ApifyWrapper": {"Apify": "https://https://docs.aiagentsforce.com//integrations/providers/apify/", "Apify Dataset": "https://https://docs.aiagentsforce.com//integrations/document_loaders/apify_dataset/"}, "ApifyDatasetLoader": {"Apify": "https://https://docs.aiagentsforce.com//integrations/providers/apify/", "Apify Dataset": "https://https://docs.aiagentsforce.com//integrations/document_loaders/apify_dataset/"}, "NLPCloud": {"NLPCloud": "https://https://docs.aiagentsforce.com//integrations/providers/nlpcloud/", "NLP Cloud": "https://https://docs.aiagentsforce.com//integrations/llms/nlpcloud/"}, "Milvus": {"Milvus": "https://https://docs.aiagentsforce.com//integrations/providers/milvus/", "Zilliz": "https://https://docs.aiagentsforce.com//integrations/vectorstores/zilliz/"}, "SemaDB": {"SemaDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/semadb/"}, "GitbookLoader": {"GitBook": "https://https://docs.aiagentsforce.com//integrations/document_loaders/gitbook/"}, "Rockset": {"Rockset": "https://https://docs.aiagentsforce.com//integrations/vectorstores/rockset/"}, "RocksetLoader": {"Rockset": "https://https://docs.aiagentsforce.com//integrations/document_loaders/rockset/"}, "Minimax": {"Minimax": "https://https://docs.aiagentsforce.com//integrations/llms/minimax/"}, "UnstructuredCHMLoader": {"Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/"}, "UnstructuredCSVLoader": {"Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "CSV": "https://https://docs.aiagentsforce.com//integrations/document_loaders/csv/"}, "UnstructuredEmailLoader": {"Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "Email": "https://https://docs.aiagentsforce.com//integrations/document_loaders/email/"}, "UnstructuredEPubLoader": {"Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "EPub ": "https://https://docs.aiagentsforce.com//integrations/document_loaders/epub/"}, "UnstructuredFileIOLoader": {"Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "Google Drive": "https://https://docs.aiagentsforce.com//integrations/document_loaders/google_drive/"}, "UnstructuredImageLoader": {"Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "Images": "https://https://docs.aiagentsforce.com//integrations/document_loaders/image/"}, "UnstructuredODTLoader": {"Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "Open Document Format (ODT)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/odt/"}, "UnstructuredOrgModeLoader": {"Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "Org-mode": "https://https://docs.aiagentsforce.com//integrations/document_loaders/org_mode/"}, "UnstructuredPDFLoader": {"Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "UnstructuredPDFLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/unstructured_pdfloader/"}, "UnstructuredRSTLoader": {"Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "RST": "https://https://docs.aiagentsforce.com//integrations/document_loaders/rst/"}, "UnstructuredRTFLoader": {"Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/"}, "UnstructuredTSVLoader": {"Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "TSV": "https://https://docs.aiagentsforce.com//integrations/document_loaders/tsv/"}, "UnstructuredURLLoader": {"Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "URL": "https://https://docs.aiagentsforce.com//integrations/document_loaders/url/"}, "UnstructuredXMLLoader": {"Unstructured": "https://https://docs.aiagentsforce.com//integrations/providers/unstructured/", "UnstructuredXMLLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/xml/"}, "SelfHostedPipeline": {"Runhouse": "https://https://docs.aiagentsforce.com//integrations/llms/runhouse/"}, "SelfHostedHuggingFaceLLM": {"Runhouse": "https://https://docs.aiagentsforce.com//integrations/llms/runhouse/"}, "MlflowCallbackHandler": {"MLflow": "https://https://docs.aiagentsforce.com//integrations/providers/mlflow_tracking/"}, "SpreedlyLoader": {"Spreedly": "https://https://docs.aiagentsforce.com//integrations/document_loaders/spreedly/"}, "OpenLLM": {"OpenLLM": "https://https://docs.aiagentsforce.com//integrations/llms/openllm/"}, "PubMedLoader": {"PubMed": "https://https://docs.aiagentsforce.com//integrations/document_loaders/pubmed/"}, "SearxSearchResults": {"SearxNG Search API": "https://https://docs.aiagentsforce.com//integrations/providers/searx/"}, "Modal": {"Modal": "https://https://docs.aiagentsforce.com//integrations/llms/modal/"}, "OpenCityDataLoader": {"Geopandas": "https://https://docs.aiagentsforce.com//integrations/document_loaders/geopandas/", "Open City Data": "https://https://docs.aiagentsforce.com//integrations/document_loaders/open_city_data/"}, "PGEmbedding": {"Postgres Embedding": "https://https://docs.aiagentsforce.com//integrations/vectorstores/pgembedding/"}, "SQLiteVSS": {"SQLite": "https://https://docs.aiagentsforce.com//integrations/providers/sqlite/", "SQLite-VSS": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sqlitevss/"}, "Xinference": {"Xorbits Inference (Xinference)": "https://https://docs.aiagentsforce.com//integrations/llms/xinference/"}, "IFixitLoader": {"iFixit": "https://https://docs.aiagentsforce.com//integrations/document_loaders/ifixit/"}, "AlephAlpha": {"Aleph Alpha": "https://https://docs.aiagentsforce.com//integrations/llms/aleph_alpha/"}, "PipelineAI": {"PipelineAI": "https://https://docs.aiagentsforce.com//integrations/llms/pipelineai/"}, "FacebookChatLoader": {"Facebook - Meta": "https://https://docs.aiagentsforce.com//integrations/providers/facebook/", "Facebook Chat": "https://https://docs.aiagentsforce.com//integrations/document_loaders/facebook_chat/"}, "Epsilla": {"Epsilla": "https://https://docs.aiagentsforce.com//integrations/vectorstores/epsilla/"}, "AwaDB": {"AwaDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/awadb/"}, "ArxivLoader": {"Arxiv": "https://https://docs.aiagentsforce.com//integrations/providers/arxiv/", "ArxivLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/arxiv/"}, "BlockchainDocumentLoader": {"Alchemy": "https://https://docs.aiagentsforce.com//integrations/providers/alchemy/", "Blockchain": "https://https://docs.aiagentsforce.com//integrations/document_loaders/blockchain/"}, "BlockchainType": {"Alchemy": "https://https://docs.aiagentsforce.com//integrations/providers/alchemy/", "Blockchain": "https://https://docs.aiagentsforce.com//integrations/document_loaders/blockchain/"}, "Anyscale": {"Anyscale": "https://https://docs.aiagentsforce.com//integrations/llms/anyscale/"}, "StripeLoader": {"Stripe": "https://https://docs.aiagentsforce.com//integrations/document_loaders/stripe/"}, "StochasticAI": {"StochasticAI": "https://https://docs.aiagentsforce.com//integrations/llms/stochasticai/"}, "Bagel": {"BagelDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/bageldb/", "Bagel": "https://https://docs.aiagentsforce.com//integrations/vectorstores/bagel/"}, "TigerGraph": {"TigerGraph": "https://https://docs.aiagentsforce.com//integrations/graphs/tigergraph/"}, "BlackboardLoader": {"Blackboard": "https://https://docs.aiagentsforce.com//integrations/document_loaders/blackboard/"}, "YandexGPT": {"Yandex": "https://https://docs.aiagentsforce.com//integrations/providers/yandex/", "YandexGPT": "https://https://docs.aiagentsforce.com//integrations/llms/yandex/"}, "UpstashVectorStore": {"Upstash Vector": "https://https://docs.aiagentsforce.com//integrations/vectorstores/upstash/"}, "NucliaTextTransformer": {"Nuclia": "https://https://docs.aiagentsforce.com//integrations/document_transformers/nuclia_transformer/"}, "NucliaLoader": {"Nuclia": "https://https://docs.aiagentsforce.com//integrations/document_loaders/nuclia/"}, "NucliaDB": {"Nuclia": "https://https://docs.aiagentsforce.com//integrations/providers/nuclia/", "NucliaDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/nucliadb/"}, "AnalyticDB": {"AnalyticDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/analyticdb/", "Alibaba Cloud": "https://https://docs.aiagentsforce.com//integrations/providers/alibaba_cloud/"}, "GoogleApiYoutubeLoader": {"YouTube": "https://https://docs.aiagentsforce.com//integrations/providers/youtube/", "YouTube transcripts": "https://https://docs.aiagentsforce.com//integrations/document_loaders/youtube_transcript/"}, "PromptLayerOpenAI": {"PromptLayer": "https://https://docs.aiagentsforce.com//integrations/providers/promptlayer/", "PromptLayer OpenAI": "https://https://docs.aiagentsforce.com//integrations/llms/promptlayer_openai/"}, "USearch": {"USearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/usearch/"}, "EtherscanLoader": {"Etherscan": "https://https://docs.aiagentsforce.com//integrations/document_loaders/etherscan/"}, "Arcee": {"Arcee": "https://https://docs.aiagentsforce.com//integrations/llms/arcee/"}, "WhyLabsCallbackHandler": {"WhyLabs": "https://https://docs.aiagentsforce.com//integrations/providers/whylabs_profiling/"}, "YiLLM": {"01.AI": "https://https://docs.aiagentsforce.com//integrations/providers/yi/", "Yi": "https://https://docs.aiagentsforce.com//integrations/llms/yi/"}, "IuguLoader": {"Iugu": "https://https://docs.aiagentsforce.com//integrations/document_loaders/iugu/"}, "CouchbaseLoader": {"Couchbase": "https://https://docs.aiagentsforce.com//integrations/document_loaders/couchbase/"}, "FlyteCallbackHandler": {"Flyte": "https://https://docs.aiagentsforce.com//integrations/providers/flyte/"}, "wandb_tracing_enabled": {"WandB Tracing": "https://https://docs.aiagentsforce.com//integrations/providers/wandb_tracing/"}, "ManifestWrapper": {"Hazy Research": "https://https://docs.aiagentsforce.com//integrations/providers/hazy_research/", "Manifest": "https://https://docs.aiagentsforce.com//integrations/llms/manifest/"}, "OntotextGraphDBGraph": {"Ontotext GraphDB": "https://https://docs.aiagentsforce.com//integrations/graphs/ontotext/"}, "OntotextGraphDBQAChain": {"Ontotext GraphDB": "https://https://docs.aiagentsforce.com//integrations/graphs/ontotext/"}, "Marqo": {"Marqo": "https://https://docs.aiagentsforce.com//integrations/vectorstores/marqo/"}, "IMSDbLoader": {"IMSDb": "https://https://docs.aiagentsforce.com//integrations/document_loaders/imsdb/"}, "TiDBLoader": {"TiDB": "https://https://docs.aiagentsforce.com//integrations/document_loaders/tidb/"}, "TiDBVectorStore": {"TiDB": "https://https://docs.aiagentsforce.com//integrations/providers/tidb/", "TiDB Vector": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tidb_vector/"}, "DeepInfra": {"DeepInfra": "https://https://docs.aiagentsforce.com//integrations/llms/deepinfra/"}, "RedditPostsLoader": {"Reddit": "https://https://docs.aiagentsforce.com//integrations/document_loaders/reddit/"}, "TrelloLoader": {"Trello": "https://https://docs.aiagentsforce.com//integrations/document_loaders/trello/"}, "AtlasDB": {"Atlas": "https://https://docs.aiagentsforce.com//integrations/vectorstores/atlas/"}, "SKLearnVectorStore": {"scikit-learn": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sklearn/"}, "EverNoteLoader": {"EverNote": "https://https://docs.aiagentsforce.com//integrations/document_loaders/evernote/"}, "VDMS": {"VDMS": "https://https://docs.aiagentsforce.com//integrations/providers/vdms/", "Intel's Visual Data Management System (VDMS)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vdms/"}, "VDMS_Client": {"VDMS": "https://https://docs.aiagentsforce.com//integrations/providers/vdms/", "Intel's Visual Data Management System (VDMS)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vdms/"}, "TwitterTweetLoader": {"Twitter": "https://https://docs.aiagentsforce.com//integrations/document_loaders/twitter/"}, "DiscordChatLoader": {"Discord": "https://https://docs.aiagentsforce.com//integrations/document_loaders/discord/"}, "AssemblyAIAudioTranscriptLoader": {"AssemblyAI": "https://https://docs.aiagentsforce.com//integrations/providers/assemblyai/", "AssemblyAI Audio Transcripts": "https://https://docs.aiagentsforce.com//integrations/document_loaders/assemblyai/"}, "KineticaLoader": {"Kinetica": "https://https://docs.aiagentsforce.com//integrations/document_loaders/kinetica/"}, "ClearMLCallbackHandler": {"ClearML": "https://https://docs.aiagentsforce.com//integrations/providers/clearml_tracking/"}, "CohereRagRetriever": {"Cohere": "https://https://docs.aiagentsforce.com//integrations/providers/cohere/"}, "SlackDirectoryLoader": {"Slack": "https://https://docs.aiagentsforce.com//integrations/document_loaders/slack/"}, "OllamaEmbeddings": {"Ollama": "https://https://docs.aiagentsforce.com//integrations/providers/ollama/", "ApertureDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/aperturedb/"}, "HNLoader": {"Hacker News": "https://https://docs.aiagentsforce.com//integrations/document_loaders/hacker_news/", "Google Spanner": "https://https://docs.aiagentsforce.com//integrations/vectorstores/google_spanner/"}, "CTranslate2": {"CTranslate2": "https://https://docs.aiagentsforce.com//integrations/llms/ctranslate2/"}, "QianfanLLMEndpoint": {"Baidu": "https://https://docs.aiagentsforce.com//integrations/providers/baidu/", "Baidu Qianfan": "https://https://docs.aiagentsforce.com//integrations/llms/baidu_qianfan_endpoint/"}, "BESVectorStore": {"Baidu": "https://https://docs.aiagentsforce.com//integrations/providers/baidu/", "Baidu Cloud ElasticSearch VectorSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/baiducloud_vector_search/"}, "BaiduVectorDB": {"Baidu": "https://https://docs.aiagentsforce.com//integrations/providers/baidu/", "Baidu VectorDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/baiduvectordb/"}, "Aphrodite": {"PygmalionAI": "https://https://docs.aiagentsforce.com//integrations/providers/pygmalionai/", "Aphrodite Engine": "https://https://docs.aiagentsforce.com//integrations/llms/aphrodite/"}, "PaiEasEndpoint": {"Alibaba Cloud": "https://https://docs.aiagentsforce.com//integrations/providers/alibaba_cloud/", "Alibaba Cloud PAI EAS": "https://https://docs.aiagentsforce.com//integrations/llms/alibabacloud_pai_eas_endpoint/"}, "MaxComputeLoader": {"Alibaba Cloud": "https://https://docs.aiagentsforce.com//integrations/providers/alibaba_cloud/", "Alibaba Cloud MaxCompute": "https://https://docs.aiagentsforce.com//integrations/document_loaders/alibaba_cloud_maxcompute/"}, "AlibabaCloudOpenSearch": {"Alibaba Cloud": "https://https://docs.aiagentsforce.com//integrations/providers/alibaba_cloud/", "Alibaba Cloud OpenSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/alibabacloud_opensearch/"}, "AlibabaCloudOpenSearchSettings": {"Alibaba Cloud": "https://https://docs.aiagentsforce.com//integrations/providers/alibaba_cloud/", "Alibaba Cloud OpenSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/alibabacloud_opensearch/"}, "DocusaurusLoader": {"Docusaurus": "https://https://docs.aiagentsforce.com//integrations/document_loaders/docusaurus/"}, "Annoy": {"Annoy": "https://https://docs.aiagentsforce.com//integrations/vectorstores/annoy/"}, "BibtexLoader": {"BibTeX": "https://https://docs.aiagentsforce.com//integrations/document_loaders/bibtex/"}, "Yuan2": {"IEIT Systems": "https://https://docs.aiagentsforce.com//integrations/providers/ieit_systems/", "Yuan2.0": "https://https://docs.aiagentsforce.com//integrations/llms/yuan2/"}, "CassandraLoader": {"Cassandra": "https://https://docs.aiagentsforce.com//integrations/document_loaders/cassandra/"}, "Vearch": {"Vearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vearch/"}, "JoplinLoader": {"Joplin": "https://https://docs.aiagentsforce.com//integrations/document_loaders/joplin/"}, "ArthurCallbackHandler": {"Arthur": "https://https://docs.aiagentsforce.com//integrations/providers/arthur_tracking/"}, "AcreomLoader": {"Acreom": "https://https://docs.aiagentsforce.com//integrations/providers/acreom/", "acreom": "https://https://docs.aiagentsforce.com//integrations/document_loaders/acreom/"}, "KDBAI": {"KDB.AI": "https://https://docs.aiagentsforce.com//integrations/vectorstores/kdbai/"}, "DuckDBLoader": {"DuckDB": "https://https://docs.aiagentsforce.com//integrations/document_loaders/duckdb/"}, "Petals": {"Petals": "https://https://docs.aiagentsforce.com//integrations/llms/petals/"}, "MomentoVectorIndex": {"Momento": "https://https://docs.aiagentsforce.com//integrations/providers/momento/", "Momento Vector Index (MVI)": "https://https://docs.aiagentsforce.com//integrations/vectorstores/momento_vector_index/"}, "NIBittensorLLM": {"Bittensor": "https://https://docs.aiagentsforce.com//integrations/llms/bittensor/"}, "AirtableLoader": {"Airtable": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airtable/"}, "LarkSuiteDocLoader": {"ByteDance": "https://https://docs.aiagentsforce.com//integrations/providers/byte_dance/", "LarkSuite (FeiShu)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/larksuite/"}, "JavelinAIGateway": {"Javelin AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/javelin_ai_gateway/", "Javelin AI Gateway Tutorial": "https://https://docs.aiagentsforce.com//integrations/llms/javelin/"}, "JavelinAIGatewayEmbeddings": {"Javelin AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/javelin_ai_gateway/", "Javelin AI Gateway Tutorial": "https://https://docs.aiagentsforce.com//integrations/llms/javelin/"}, "ChatJavelinAIGateway": {"Javelin AI Gateway": "https://https://docs.aiagentsforce.com//integrations/providers/javelin_ai_gateway/", "Javelin AI Gateway Tutorial": "https://https://docs.aiagentsforce.com//integrations/llms/javelin/"}, "TensorflowDatasetLoader": {"TensorFlow Datasets": "https://https://docs.aiagentsforce.com//integrations/document_loaders/tensorflow_datasets/"}, "Clarifai": {"Clarifai": "https://https://docs.aiagentsforce.com//integrations/llms/clarifai/"}, "DataheraldTextToSQL": {"Dataherald": "https://https://docs.aiagentsforce.com//integrations/providers/dataherald/"}, "RoamLoader": {"Roam": "https://https://docs.aiagentsforce.com//integrations/document_loaders/roam/"}, "RerankConfig": {"Vectara Chat": "https://https://docs.aiagentsforce.com//integrations/providers/vectara/vectara_chat/", "Vectara": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vectara/"}, "SummaryConfig": {"Vectara Chat": "https://https://docs.aiagentsforce.com//integrations/providers/vectara/vectara_chat/", "Vectara": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vectara/"}, "VectaraQueryConfig": {"Vectara Chat": "https://https://docs.aiagentsforce.com//integrations/providers/vectara/vectara_chat/", "Vectara": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vectara/"}, "PebbloRetrievalQA": {"Identity-enabled RAG using PebbloRetrievalQA": "https://https://docs.aiagentsforce.com//integrations/providers/pebblo/pebblo_retrieval_qa/"}, "AuthContext": {"Identity-enabled RAG using PebbloRetrievalQA": "https://https://docs.aiagentsforce.com//integrations/providers/pebblo/pebblo_retrieval_qa/"}, "ChainInput": {"Identity-enabled RAG using PebbloRetrievalQA": "https://https://docs.aiagentsforce.com//integrations/providers/pebblo/pebblo_retrieval_qa/"}, "SemanticContext": {"Identity-enabled RAG using PebbloRetrievalQA": "https://https://docs.aiagentsforce.com//integrations/providers/pebblo/pebblo_retrieval_qa/"}, "RedisStore": {"RedisStore": "https://https://docs.aiagentsforce.com//integrations/stores/redis/"}, "CassandraByteStore": {"CassandraByteStore": "https://https://docs.aiagentsforce.com//integrations/stores/cassandra/"}, "UpstashRedisByteStore": {"UpstashRedisByteStore": "https://https://docs.aiagentsforce.com//integrations/stores/upstash_redis/"}, "ApacheDorisSettings": {"Apache Doris": "https://https://docs.aiagentsforce.com//integrations/vectorstores/apache_doris/"}, "DistanceStrategy": {"Kinetica Vectorstore API": "https://https://docs.aiagentsforce.com//integrations/vectorstores/kinetica/", "SAP HANA Cloud Vector Engine": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sap_hanavector/", "SingleStoreDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/singlestoredb/", "Oracle AI Vector Search: Vector Store": "https://https://docs.aiagentsforce.com//integrations/vectorstores/oracle/", "SemaDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/semadb/"}, "SentenceTransformerEmbeddings": {"SQLite-VSS": "https://https://docs.aiagentsforce.com//integrations/vectorstores/sqlitevss/", "Vespa": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vespa/"}, "Vald": {"Vald": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vald/"}, "RetrievalQAWithSourcesChain": {"Weaviate": "https://https://docs.aiagentsforce.com//integrations/vectorstores/weaviate/", "Yellowbrick": "https://https://docs.aiagentsforce.com//integrations/vectorstores/yellowbrick/", "Jaguar Vector Database": "https://https://docs.aiagentsforce.com//integrations/vectorstores/jaguar/", "Neo4j Vector Index": "https://https://docs.aiagentsforce.com//integrations/vectorstores/neo4jvector/", "Marqo": "https://https://docs.aiagentsforce.com//integrations/vectorstores/marqo/", "Psychic": "https://https://docs.aiagentsforce.com//integrations/document_loaders/psychic/"}, "Yellowbrick": {"Yellowbrick": "https://https://docs.aiagentsforce.com//integrations/vectorstores/yellowbrick/"}, "LLMRails": {"LLMRails": "https://https://docs.aiagentsforce.com//integrations/vectorstores/llm_rails/"}, "ChatGooglePalm": {"ScaNN": "https://https://docs.aiagentsforce.com//integrations/vectorstores/scann/"}, "Hippo": {"Hippo": "https://https://docs.aiagentsforce.com//integrations/vectorstores/hippo/"}, "RedisText": {"Redis": "https://https://docs.aiagentsforce.com//integrations/vectorstores/redis/"}, "RedisNum": {"Redis": "https://https://docs.aiagentsforce.com//integrations/vectorstores/redis/"}, "RedisTag": {"Redis": "https://https://docs.aiagentsforce.com//integrations/vectorstores/redis/"}, "RedisFilter": {"Redis": "https://https://docs.aiagentsforce.com//integrations/vectorstores/redis/"}, "VespaStore": {"Vespa": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vespa/"}, "NeuralDBVectorStore": {"ThirdAI NeuralDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/thirdai_neuraldb/"}, "VikingDB": {"viking DB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vikingdb/"}, "VikingDBConfig": {"viking DB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vikingdb/"}, "ApertureDB": {"ApertureDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/aperturedb/"}, "Relyt": {"Relyt": "https://https://docs.aiagentsforce.com//integrations/vectorstores/relyt/"}, "oraclevs": {"Oracle AI Vector Search: Vector Store": "https://https://docs.aiagentsforce.com//integrations/vectorstores/oracle/"}, "VLite": {"vlite": "https://https://docs.aiagentsforce.com//integrations/vectorstores/vlite/"}, "AzureCosmosDBNoSqlVectorSearch": {"Azure Cosmos DB No SQL": "https://https://docs.aiagentsforce.com//integrations/vectorstores/azure_cosmos_db_no_sql/"}, "DuckDB": {"DuckDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/duckdb/"}, "StarRocksSettings": {"StarRocks": "https://https://docs.aiagentsforce.com//integrations/vectorstores/starrocks/"}, "PathwayVectorClient": {"Pathway": "https://https://docs.aiagentsforce.com//integrations/vectorstores/pathway/"}, "DocArrayHnswSearch": {"DocArray HnswSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/docarray_hnsw/"}, "TileDB": {"TileDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/tiledb/"}, "EcloudESVectorStore": {"China Mobile ECloud ElasticSearch VectorSearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/ecloud_vector_search/"}, "SurrealDBStore": {"SurrealDB": "https://https://docs.aiagentsforce.com//integrations/vectorstores/surrealdb/"}, "ManticoreSearch": {"ManticoreSearch VectorStore": "https://https://docs.aiagentsforce.com//integrations/vectorstores/manticore_search/"}, "ManticoreSearchSettings": {"ManticoreSearch VectorStore": "https://https://docs.aiagentsforce.com//integrations/vectorstores/manticore_search/"}, "HuggingFaceEmbeddings": {"Aerospike": "https://https://docs.aiagentsforce.com//integrations/vectorstores/aerospike/", "self-query-qdrant": "https://https://docs.aiagentsforce.com//templates/self-query-qdrant/"}, "Aerospike": {"Aerospike": "https://https://docs.aiagentsforce.com//integrations/vectorstores/aerospike/"}, "ElasticVectorSearch": {"Elasticsearch": "https://https://docs.aiagentsforce.com//integrations/vectorstores/elasticsearch/"}, "PGVecto_rs": {"PGVecto.rs": "https://https://docs.aiagentsforce.com//integrations/vectorstores/pgvecto_rs/"}, "ZepVectorStore": {"Zep": "https://https://docs.aiagentsforce.com//integrations/vectorstores/zep/"}, "CollectionConfig": {"Zep": "https://https://docs.aiagentsforce.com//integrations/vectorstores/zep/"}, "openai": {"OpenAI Adapter(Old)": "https://https://docs.aiagentsforce.com//integrations/adapters/openai-old/", "OpenAI Adapter": "https://https://docs.aiagentsforce.com//integrations/adapters/openai/"}, "RankLLMRerank": {"RankLLM Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/rankllm-reranker/"}, "AsyncChromiumLoader": {"Beautiful Soup": "https://https://docs.aiagentsforce.com//integrations/document_transformers/beautiful_soup/", "Async Chromium": "https://https://docs.aiagentsforce.com//integrations/document_loaders/async_chromium/"}, "BeautifulSoupTransformer": {"Beautiful Soup": "https://https://docs.aiagentsforce.com//integrations/document_transformers/beautiful_soup/"}, "VolcengineRerank": {"Volcengine Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/volcengine_rerank/"}, "OpenVINOReranker": {"OpenVINO Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/openvino_rerank/"}, "create_metadata_tagger": {"OpenAI metadata tagger": "https://https://docs.aiagentsforce.com//integrations/document_transformers/openai_metadata_tagger/"}, "DoctranPropertyExtractor": {"Doctran: extract properties": "https://https://docs.aiagentsforce.com//integrations/document_transformers/doctran_extract_properties/"}, "DoctranQATransformer": {"Doctran: interrogate documents": "https://https://docs.aiagentsforce.com//integrations/document_transformers/doctran_interrogate_document/"}, "CrossEncoderReranker": {"Cross Encoder Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/cross_encoder_reranker/"}, "HuggingFaceCrossEncoder": {"Cross Encoder Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/cross_encoder_reranker/"}, "JinaRerank": {"Jina Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/jina_rerank/"}, "DoctranTextTranslator": {"Doctran: language translation": "https://https://docs.aiagentsforce.com//integrations/document_transformers/doctran_translate_document/"}, "MarkdownifyTransformer": {"Markdownify": "https://https://docs.aiagentsforce.com//integrations/document_transformers/markdownify/"}, "DashScopeRerank": {"DashScope Reranker": "https://https://docs.aiagentsforce.com//integrations/document_transformers/dashscope_rerank/"}, "XorbitsLoader": {"Xorbits Pandas DataFrame": "https://https://docs.aiagentsforce.com//integrations/document_loaders/xorbits/"}, "OutlookMessageLoader": {"Email": "https://https://docs.aiagentsforce.com//integrations/document_loaders/email/"}, "TranscriptFormat": {"AssemblyAI Audio Transcripts": "https://https://docs.aiagentsforce.com//integrations/document_loaders/assemblyai/", "YouTube transcripts": "https://https://docs.aiagentsforce.com//integrations/document_loaders/youtube_transcript/"}, "ScrapingAntLoader": {"ScrapingAnt": "https://https://docs.aiagentsforce.com//integrations/document_loaders/scrapingant/"}, "AirbyteSalesforceLoader": {"Airbyte Salesforce (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_salesforce/"}, "AirbyteCDKLoader": {"Airbyte CDK (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_cdk/"}, "Docx2txtLoader": {"Microsoft Word": "https://https://docs.aiagentsforce.com//integrations/document_loaders/microsoft_word/"}, "RSpaceLoader": {"# replace these ids with some from your own research notes.": "https://https://docs.aiagentsforce.com//integrations/document_loaders/rspace/"}, "SeleniumURLLoader": {"URL": "https://https://docs.aiagentsforce.com//integrations/document_loaders/url/"}, "PlaywrightURLLoader": {"URL": "https://https://docs.aiagentsforce.com//integrations/document_loaders/url/"}, "AirbyteJSONLoader": {"Airbyte JSON (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_json/"}, "AirbyteStripeLoader": {"Airbyte Stripe (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_stripe/"}, "GeoDataFrameLoader": {"Geopandas": "https://https://docs.aiagentsforce.com//integrations/document_loaders/geopandas/"}, "VectorstoreIndexCreator": {"HuggingFace dataset": "https://https://docs.aiagentsforce.com//integrations/document_loaders/hugging_face_dataset/", "Spreedly": "https://https://docs.aiagentsforce.com//integrations/document_loaders/spreedly/", "Figma": "https://https://docs.aiagentsforce.com//integrations/document_loaders/figma/", "Apify Dataset": "https://https://docs.aiagentsforce.com//integrations/document_loaders/apify_dataset/", "Iugu": "https://https://docs.aiagentsforce.com//integrations/document_loaders/iugu/", "Stripe": "https://https://docs.aiagentsforce.com//integrations/document_loaders/stripe/", "Modern Treasury": "https://https://docs.aiagentsforce.com//integrations/document_loaders/modern_treasury/"}, "AirbyteTypeformLoader": {"Airbyte Typeform (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_typeform/"}, "MHTMLLoader": {"mhtml": "https://https://docs.aiagentsforce.com//integrations/document_loaders/mhtml/"}, "SpiderLoader": {"Spider": "https://https://docs.aiagentsforce.com//integrations/document_loaders/spider/"}, "NewsURLLoader": {"News URL": "https://https://docs.aiagentsforce.com//integrations/document_loaders/news/"}, "ImageCaptionLoader": {"Image captions": "https://https://docs.aiagentsforce.com//integrations/document_loaders/image_captions/"}, "LLMSherpaFileLoader": {"LLM Sherpa": "https://https://docs.aiagentsforce.com//integrations/document_loaders/llmsherpa/"}, "PyMuPDFLoader": {"PyMuPDF": "https://https://docs.aiagentsforce.com//integrations/document_loaders/pymupdf/"}, "ScrapflyLoader": {"# ScrapFly": "https://https://docs.aiagentsforce.com//integrations/document_loaders/scrapfly/"}, "TomlLoader": {"TOML": "https://https://docs.aiagentsforce.com//integrations/document_loaders/toml/"}, "PsychicLoader": {"Psychic": "https://https://docs.aiagentsforce.com//integrations/document_loaders/psychic/"}, "FireCrawlLoader": {"FireCrawl": "https://https://docs.aiagentsforce.com//integrations/document_loaders/firecrawl/"}, "LarkSuiteWikiLoader": {"LarkSuite (FeiShu)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/larksuite/"}, "FakeListLLM": {"LarkSuite (FeiShu)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/larksuite/"}, "MergedDataLoader": {"Merge Documents Loader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/merge_doc/"}, "RecursiveUrlLoader": {"Recursive URL": "https://https://docs.aiagentsforce.com//integrations/document_loaders/recursive_url/"}, "PDFPlumberLoader": {"PDFPlumber": "https://https://docs.aiagentsforce.com//integrations/document_loaders/pdfplumber/"}, "PyPDFium2Loader": {"PyPDFium2Loader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/pypdfium2/"}, "AirbyteHubspotLoader": {"Airbyte Hubspot (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_hubspot/"}, "AirbyteGongLoader": {"Airbyte Gong (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_gong/"}, "AstraDBLoader": {"AstraDB": "https://https://docs.aiagentsforce.com//integrations/document_loaders/astradb/"}, "ReadTheDocsLoader": {"ReadTheDocs Documentation": "https://https://docs.aiagentsforce.com//integrations/document_loaders/readthedocs_documentation/"}, "MathpixPDFLoader": {"MathPixPDFLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/mathpix/"}, "PolarsDataFrameLoader": {"Polars DataFrame": "https://https://docs.aiagentsforce.com//integrations/document_loaders/polars_dataframe/"}, "DataFrameLoader": {"Pandas DataFrame": "https://https://docs.aiagentsforce.com//integrations/document_loaders/pandas_dataframe/"}, "SurrealDBLoader": {"SurrealDB": "https://https://docs.aiagentsforce.com//integrations/document_loaders/surrealdb/"}, "DedocFileLoader": {"Dedoc": "https://https://docs.aiagentsforce.com//integrations/document_loaders/dedoc/"}, "DedocPDFLoader": {"Dedoc": "https://https://docs.aiagentsforce.com//integrations/document_loaders/dedoc/"}, "DedocAPIFileLoader": {"Dedoc": "https://https://docs.aiagentsforce.com//integrations/document_loaders/dedoc/"}, "GoogleApiClient": {"YouTube transcripts": "https://https://docs.aiagentsforce.com//integrations/document_loaders/youtube_transcript/"}, "ConcurrentLoader": {"Concurrent Loader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/concurrent/"}, "RSSFeedLoader": {"RSS Feeds": "https://https://docs.aiagentsforce.com//integrations/document_loaders/rss/"}, "PebbloSafeLoader": {"Pebblo Safe DocumentLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/pebblo/"}, "VsdxLoader": {"Vsdx": "https://https://docs.aiagentsforce.com//integrations/document_loaders/vsdx/"}, "NotebookLoader": {"Jupyter Notebook": "https://https://docs.aiagentsforce.com//integrations/document_loaders/jupyter_notebook/"}, "OracleAutonomousDatabaseLoader": {"Oracle Autonomous Database": "https://https://docs.aiagentsforce.com//integrations/document_loaders/oracleadb_loader/"}, "LanguageParser": {"Source Code": "https://https://docs.aiagentsforce.com//integrations/document_loaders/source_code/"}, "SRTLoader": {"Subtitle": "https://https://docs.aiagentsforce.com//integrations/document_loaders/subtitle/"}, "MastodonTootsLoader": {"Mastodon": "https://https://docs.aiagentsforce.com//integrations/document_loaders/mastodon/"}, "AirbyteShopifyLoader": {"Airbyte Shopify (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_shopify/"}, "PyPDFDirectoryLoader": {"PyPDFDirectoryLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/pypdfdirectory/"}, "PySparkDataFrameLoader": {"PySpark": "https://https://docs.aiagentsforce.com//integrations/document_loaders/pyspark_dataframe/"}, "AirbyteZendeskSupportLoader": {"Airbyte Zendesk Support (Deprecated)": "https://https://docs.aiagentsforce.com//integrations/document_loaders/airbyte_zendesk_support/"}, "CoNLLULoader": {"CoNLL-U": "https://https://docs.aiagentsforce.com//integrations/document_loaders/conll-u/"}, "MongodbLoader": {"MongoDB": "https://https://docs.aiagentsforce.com//integrations/document_loaders/mongodb/"}, "SitemapLoader": {"Sitemap": "https://https://docs.aiagentsforce.com//integrations/document_loaders/sitemap/"}, "YuqueLoader": {"Yuque": "https://https://docs.aiagentsforce.com//integrations/document_loaders/yuque/"}, "PDFMinerLoader": {"PDFMiner": "https://https://docs.aiagentsforce.com//integrations/document_loaders/pdfminer/"}, "PDFMinerPDFasHTMLLoader": {"PDFMiner": "https://https://docs.aiagentsforce.com//integrations/document_loaders/pdfminer/"}, "QuipLoader": {"Quip": "https://https://docs.aiagentsforce.com//integrations/document_loaders/quip/"}, "LangSmithLoader": {"LangSmithLoader": "https://https://docs.aiagentsforce.com//integrations/document_loaders/langsmith/"}, "MemgraphGraph": {"Memgraph": "https://https://docs.aiagentsforce.com//integrations/graphs/memgraph/"}, "GraphSparqlQAChain": {"RDFLib": "https://https://docs.aiagentsforce.com//integrations/graphs/rdflib_sparql/"}, "RdfGraph": {"RDFLib": "https://https://docs.aiagentsforce.com//integrations/graphs/rdflib_sparql/"}, "NebulaGraphQAChain": {"NebulaGraph": "https://https://docs.aiagentsforce.com//integrations/graphs/nebula_graph/"}, "NebulaGraph": {"NebulaGraph": "https://https://docs.aiagentsforce.com//integrations/graphs/nebula_graph/"}, "GremlinQAChain": {"Azure Cosmos DB for Apache Gremlin": "https://https://docs.aiagentsforce.com//integrations/graphs/azure_cosmosdb_gremlin/"}, "GraphIndexCreator": {"NetworkX": "https://https://docs.aiagentsforce.com//integrations/graphs/networkx/"}, "GraphQAChain": {"NetworkX": "https://https://docs.aiagentsforce.com//integrations/graphs/networkx/"}, "NetworkxEntityGraph": {"NetworkX": "https://https://docs.aiagentsforce.com//integrations/graphs/networkx/"}, "HugeGraphQAChain": {"HugeGraph": "https://https://docs.aiagentsforce.com//integrations/graphs/hugegraph/"}, "HugeGraph": {"HugeGraph": "https://https://docs.aiagentsforce.com//integrations/graphs/hugegraph/"}, "AGEGraph": {"Apache AGE": "https://https://docs.aiagentsforce.com//integrations/graphs/apache_age/"}, "KuzuQAChain": {"Kuzu": "https://https://docs.aiagentsforce.com//integrations/graphs/kuzu_db/"}, "KuzuGraph": {"Kuzu": "https://https://docs.aiagentsforce.com//integrations/graphs/kuzu_db/"}, "FalkorDBQAChain": {"FalkorDB": "https://https://docs.aiagentsforce.com//integrations/graphs/falkordb/"}, "FalkorDBGraph": {"FalkorDB": "https://https://docs.aiagentsforce.com//integrations/graphs/falkordb/"}, "ConversationBufferWindowMemory": {"Baseten": "https://https://docs.aiagentsforce.com//integrations/llms/baseten/", "OpaquePrompts": "https://https://docs.aiagentsforce.com//integrations/llms/opaqueprompts/"}, "Solar": {"Solar": "https://https://docs.aiagentsforce.com//integrations/llms/solar/"}, "GoogleSearchAPIWrapper": {"Bittensor": "https://https://docs.aiagentsforce.com//integrations/llms/bittensor/"}, "IpexLLM": {"IPEX-LLM": "https://https://docs.aiagentsforce.com//integrations/llms/ipex_llm/"}, "LLMContentHandler": {"SageMakerEndpoint": "https://https://docs.aiagentsforce.com//integrations/llms/sagemaker/"}, "TextGen": {"TextGen": "https://https://docs.aiagentsforce.com//integrations/llms/textgen/"}, "MosaicML": {"MosaicML": "https://https://docs.aiagentsforce.com//integrations/llms/mosaicml/"}, "VolcEngineMaasLLM": {"Volc Engine Maas": "https://https://docs.aiagentsforce.com//integrations/llms/volcengine_maas/"}, "KoboldApiLLM": {"KoboldAI API": "https://https://docs.aiagentsforce.com//integrations/llms/koboldai/"}, "Konko": {"Konko": "https://https://docs.aiagentsforce.com//integrations/llms/konko/"}, "OpaquePrompts": {"OpaquePrompts": "https://https://docs.aiagentsforce.com//integrations/llms/opaqueprompts/"}, "TitanTakeoff": {"Titan Takeoff": "https://https://docs.aiagentsforce.com//integrations/llms/titan_takeoff/"}, "Friendli": {"Friendli": "https://https://docs.aiagentsforce.com//integrations/llms/friendli/"}, "Databricks": {"Databricks": "https://https://docs.aiagentsforce.com//integrations/llms/databricks/"}, "LMFormatEnforcer": {"LM Format Enforcer": "https://https://docs.aiagentsforce.com//integrations/llms/lmformatenforcer_experimental/"}, "VLLM": {"vLLM": "https://https://docs.aiagentsforce.com//integrations/llms/vllm/"}, "VLLMOpenAI": {"vLLM": "https://https://docs.aiagentsforce.com//integrations/llms/vllm/"}, "CustomOpenAIContentFormatter": {"Azure ML": "https://https://docs.aiagentsforce.com//integrations/llms/azure_ml/"}, "ContentFormatterBase": {"Azure ML": "https://https://docs.aiagentsforce.com//integrations/llms/azure_ml/"}, "DollyContentFormatter": {"Azure ML": "https://https://docs.aiagentsforce.com//integrations/llms/azure_ml/"}, "load_llm": {"Azure ML": "https://https://docs.aiagentsforce.com//integrations/llms/azure_ml/"}, "MapReduceChain": {"Manifest": "https://https://docs.aiagentsforce.com//integrations/llms/manifest/"}, "ModelLaboratory": {"Manifest": "https://https://docs.aiagentsforce.com//integrations/llms/manifest/"}, "ExLlamaV2": {"ExLlamaV2": "https://https://docs.aiagentsforce.com//integrations/llms/exllamav2/"}, "RELLM": {"RELLM": "https://https://docs.aiagentsforce.com//integrations/llms/rellm_experimental/"}, "Moonshot": {"MoonshotChat": "https://https://docs.aiagentsforce.com//integrations/llms/moonshot/"}, "OpenLM": {"OpenLM": "https://https://docs.aiagentsforce.com//integrations/llms/openlm/"}, "CloudflareWorkersAI": {"Cloudflare Workers AI": "https://https://docs.aiagentsforce.com//integrations/llms/cloudflare_workersai/"}, "ChatGLM3": {"ChatGLM": "https://https://docs.aiagentsforce.com//integrations/llms/chatglm/"}, "ChatGLM": {"ChatGLM": "https://https://docs.aiagentsforce.com//integrations/llms/chatglm/"}, "Sambaverse": {"SambaNova": "https://https://docs.aiagentsforce.com//integrations/llms/sambanova/"}, "SambaStudio": {"SambaNova": "https://https://docs.aiagentsforce.com//integrations/llms/sambanova/"}, "LayerupSecurity": {"Layerup Security": "https://https://docs.aiagentsforce.com//integrations/llms/layerup_security/"}, "JsonFormer": {"JSONFormer": "https://https://docs.aiagentsforce.com//integrations/llms/jsonformer_experimental/"}, "WeightOnlyQuantPipeline": {"Intel Weight-Only Quantization": "https://https://docs.aiagentsforce.com//integrations/llms/weight_only_quantization/"}, "Replicate": {"Replicate": "https://https://docs.aiagentsforce.com//integrations/llms/replicate/"}, "tracing_v2_enabled": {"Chat Bot Feedback Template": "https://https://docs.aiagentsforce.com//templates/chat-bot-feedback/"}, "QuerySQLDataBaseTool": {"Build a Question/Answering system over SQL data": "https://https://docs.aiagentsforce.com//tutorials/sql_qa/"}, "OPENAI_TEMPLATE": {"Generate Synthetic Data": "https://https://docs.aiagentsforce.com//tutorials/data_generation/"}, "create_openai_data_generator": {"Generate Synthetic Data": "https://https://docs.aiagentsforce.com//tutorials/data_generation/"}, "DatasetGenerator": {"Generate Synthetic Data": "https://https://docs.aiagentsforce.com//tutorials/data_generation/"}, "create_data_generation_chain": {"Generate Synthetic Data": "https://https://docs.aiagentsforce.com//tutorials/data_generation/"}, "create_extraction_chain_pydantic": {"Generate Synthetic Data": "https://https://docs.aiagentsforce.com//tutorials/data_generation/"}}